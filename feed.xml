<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="https://varunbarad.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://varunbarad.com/" rel="alternate" type="text/html" /><updated>2023-08-30T20:02:56+05:30</updated><id>https://varunbarad.com/feed.xml</id><title type="html">Varun Barad - Curious Developer</title><subtitle>My online home where I post about new things I learn or find interesting.</subtitle><author><name>Varun Barad</name></author><entry><title type="html">üìù PostgreSQL: Mark a column non-nullable after creating it</title><link href="https://varunbarad.com/blog/postgresql-make-existing-column-non-nullable" rel="alternate" type="text/html" title="üìù PostgreSQL: Mark a column non-nullable after creating it" /><published>2023-08-20T14:23:22+05:30</published><updated>2023-08-20T14:23:22+05:30</updated><id>https://varunbarad.com/blog/postgresql-make-existing-column-non-nullable</id><content type="html" xml:base="https://varunbarad.com/blog/postgresql-make-existing-column-non-nullable">&lt;p&gt;If we have a table &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;people&lt;/code&gt; with a column &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;email&lt;/code&gt; and we want to make it non-nullable after we have already added it to table:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;alter&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;people&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alter&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;column&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">If we have a table people with a column email and we want to make it non-nullable after we have already added it to table:</summary></entry><entry><title type="html">üìù PostgreSQL: Make a column unique after creating it</title><link href="https://varunbarad.com/blog/postgresql-make-existing-column-unique" rel="alternate" type="text/html" title="üìù PostgreSQL: Make a column unique after creating it" /><published>2023-08-19T14:23:22+05:30</published><updated>2023-08-19T14:23:22+05:30</updated><id>https://varunbarad.com/blog/postgresql-make-existing-column-unique</id><content type="html" xml:base="https://varunbarad.com/blog/postgresql-make-existing-column-unique">&lt;p&gt;If we have a table &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;people&lt;/code&gt; with a column &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;email&lt;/code&gt; and we want to make it unique after we have already added it to table:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;alter&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;people&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unique&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">If we have a table people with a column email and we want to make it unique after we have already added it to table:</summary></entry><entry><title type="html">‚öñÔ∏è Wracker Dev Log #003</title><link href="https://varunbarad.com/blog/wracker-log-003" rel="alternate" type="text/html" title="‚öñÔ∏è Wracker Dev Log #003" /><published>2023-08-17T06:58:27+05:30</published><updated>2023-08-17T06:58:27+05:30</updated><id>https://varunbarad.com/blog/wracker-log-003</id><content type="html" xml:base="https://varunbarad.com/blog/wracker-log-003">&lt;p&gt;This is the third log entry for my weight-tracking project and the work covered today happened over multiple days. I added a graph of the weight entries and moved away from django to flask.&lt;/p&gt;

&lt;h2 id=&quot;period-3-task-1-p3t1---adding-a-graph&quot;&gt;Period 3 Task 1 (P3T1) - Adding a graph&lt;/h2&gt;

&lt;p&gt;Seeing the progress of my weight-change journey at-a-glance was a must for me and so a graph was required because it makes seeing the trend over time much simpler. I had already &lt;a href=&quot;./typractice-stats-chart&quot;&gt;added a chart recently to another project&lt;/a&gt; and went with the same &lt;a href=&quot;https://chartjs.org&quot;&gt;library&lt;/a&gt; and usage pattern. A simple chart of weight-entries against the date of measurement was all I needed. Screenshots of the results follow:&lt;/p&gt;

&lt;p&gt;The website with no data added.
&lt;img src=&quot;../assets/images/posts/wracker/003-wracker-without-data.png&quot; alt=&quot;screenshot with no data added&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The website with a few weight entries.
&lt;img src=&quot;../assets/images/posts/wracker/003-wracker-with-data.png&quot; alt=&quot;screenshot with a few weight entries&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;p3t2---moving-from-django-to-flask&quot;&gt;P3T2 - Moving from django to flask&lt;/h2&gt;

&lt;p&gt;My initial reasoning to go with django was because I wanted to learn a Python backend framework, but with how much different types of code-bases I was seeing when looking for ‚Äúthe‚Äù code structure for a django project I was getting confused. So rather than burn my efficiency trying to grok just django, I decided to move to a simpler backend framework &lt;a href=&quot;https://flask.palletsprojects.com/&quot;&gt;flask&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I started by installing flask and then serving the same HTML file as a rendered template from flask. Once that was done, I removed all the django-related code from the codebase. That was followed by learning how static files are served in flask and then moving my styles and Javascript to separate static files. Final step was to move the Javascript file for the charting library in-house. I downloaded the minified version of the library with a simple &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wget&lt;/code&gt; and then moved it to the static folder and pointed my HTML file to it.&lt;/p&gt;

&lt;p&gt;So far I would say that it is much easier to understand how things are happening in Flask than how they were happening in django. I am sure that django is a much more powerful framework but for my use-case, I think flask is more than enough.&lt;/p&gt;

&lt;h2 id=&quot;things-i-learnedsolidified-today&quot;&gt;Things I learned/solidified today&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Serve static files in flask&lt;/li&gt;
  &lt;li&gt;Serve an HTML file as a template in flask&lt;/li&gt;
  &lt;li&gt;How to remove dependencies from a Python project&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Varun Barad</name></author><category term="wracker" /><category term="programming" /><category term="python" /><category term="javascript" /><summary type="html">This is the third log entry for my weight-tracking project and the work covered today happened over multiple days. I added a graph of the weight entries and moved away from django to flask.</summary></entry><entry><title type="html">‚å®Ô∏è Paragraph performance summaries</title><link href="https://varunbarad.com/blog/typractice-paragraph-summaries" rel="alternate" type="text/html" title="‚å®Ô∏è Paragraph performance summaries" /><published>2023-08-11T21:33:50+05:30</published><updated>2023-08-11T21:33:50+05:30</updated><id>https://varunbarad.com/blog/typractice-paragraph-summaries</id><content type="html" xml:base="https://varunbarad.com/blog/typractice-paragraph-summaries">&lt;p&gt;Apart from the graph I added last time I also wanted people to have a table where they can see their performance. Initially I was going to present the top 10 performance according to words-per-minute show up in the table. Something like a leaderboard.&lt;/p&gt;

&lt;p&gt;But as I was writing the code, GitHub Copilot autofilled for me the code of a table which shows a summary of user‚Äôs performance on each paragraph. I liked the idea and went with it. Wrote a bit of CSS to make the table have rounded corners and other such touch-ups.&lt;/p&gt;

&lt;p&gt;For each different paragraph that you have typed in, you can now see the following data-points:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Paragraph number&lt;/li&gt;
  &lt;li&gt;Number of attempts you have made&lt;/li&gt;
  &lt;li&gt;Your best, worst and average time in minutes&lt;/li&gt;
  &lt;li&gt;Your best, worst and average speed in words-per-minute&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The website looks usably nice on a laptop and desktop, it has all the functionalities that I wanted it to have. Now I declare this project as finished. I won‚Äôt make any new changes to it unless to fix a bug. This declaration is primarily for me to stop myself from spending any more time thinking about this üòÖ.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/posts/project-typractice/stats-table.png&quot; alt=&quot;screenshot of the summary stats table&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;articles-on-this-project&quot;&gt;Articles on this project&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;./project-typractice&quot;&gt;Public release&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./typractice-stats-chart&quot;&gt;Adding stats chart&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Adding summary stats table (this article)&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Varun Barad</name></author><category term="typractice" /><category term="web" /><category term="programming" /><summary type="html">Apart from the graph I added last time I also wanted people to have a table where they can see their performance. Initially I was going to present the top 10 performance according to words-per-minute show up in the table. Something like a leaderboard.</summary></entry><entry><title type="html">üìù Avoid .DS_Store files on removable media</title><link href="https://varunbarad.com/blog/avoid-ds-store" rel="alternate" type="text/html" title="üìù Avoid .DS_Store files on removable media" /><published>2023-08-09T19:24:24+05:30</published><updated>2023-08-09T19:24:24+05:30</updated><id>https://varunbarad.com/blog/avoid-ds-store</id><content type="html" xml:base="https://varunbarad.com/blog/avoid-ds-store">&lt;p&gt;Disable creation of metadata files (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.DS_Store&lt;/code&gt; and AppleDouble files) on Network Volumes&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;defaults write com.apple.desktopservices DSDontWriteNetworkStores &lt;span class=&quot;nt&quot;&gt;-bool&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Disable creation of metadata files (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.DS_Store&lt;/code&gt; and AppleDouble files) on USB Volumes&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;defaults write com.apple.desktopservices DSDontWriteUSBStores &lt;span class=&quot;nt&quot;&gt;-bool&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">Disable creation of metadata files (.DS_Store and AppleDouble files) on Network Volumes</summary></entry><entry><title type="html">üìù Recursively remove .DS_Store files</title><link href="https://varunbarad.com/blog/remove-ds-store-files" rel="alternate" type="text/html" title="üìù Recursively remove .DS_Store files" /><published>2023-08-09T14:49:36+05:30</published><updated>2023-08-09T14:49:36+05:30</updated><id>https://varunbarad.com/blog/remove-ds-store-files</id><content type="html" xml:base="https://varunbarad.com/blog/remove-ds-store-files">&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.DS_Store&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-type&lt;/span&gt; f &lt;span class=&quot;nt&quot;&gt;-delete&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you just want to list out those files then skip the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-delete&lt;/code&gt; flag.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.DS_Store&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-type&lt;/span&gt; f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">find . -name &quot;.DS_Store&quot; -type f -delete</summary></entry><entry><title type="html">‚å®Ô∏è Showing historical statistics</title><link href="https://varunbarad.com/blog/typractice-stats-chart" rel="alternate" type="text/html" title="‚å®Ô∏è Showing historical statistics" /><published>2023-07-27T22:11:36+05:30</published><updated>2023-07-27T22:11:36+05:30</updated><id>https://varunbarad.com/blog/typractice-stats-chart</id><content type="html" xml:base="https://varunbarad.com/blog/typractice-stats-chart">&lt;p&gt;While I was accruing the typing speed data each time I practiced on Typractice, the user was not able to see it. They had no way of knowing how they have progressed (or regressed) over time.&lt;/p&gt;

&lt;p&gt;I started by wanting to add a table where each entry will be shown but instead went ahead with a chart because it looks fancier, and also it makes it easier for the user to see the trend.&lt;/p&gt;

&lt;p&gt;Looked around a bit for a charting library and decided to go with the &lt;a href=&quot;https://chartjs.org&quot;&gt;Chart.js&lt;/a&gt; library which has sane defaults with options to customize a lot of things.&lt;/p&gt;

&lt;p&gt;Each entry in the line-chart represents the speed (in words-per-minute) and the timestamp of the attempt. You can also hover over each point to see the exact value.&lt;/p&gt;

&lt;p&gt;Would love to see how your speed has changed over time. Send me screenshots of your charts.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/posts/project-typractice/stats-chart.png&quot; alt=&quot;screenshot of the stats page&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;articles-on-this-project&quot;&gt;Articles on this project&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;./project-typractice&quot;&gt;Public release&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Adding stats chart (this article)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./typractice-paragraph-summaries&quot;&gt;Adding summary stats table&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Varun Barad</name></author><category term="typractice" /><category term="web" /><category term="programming" /><summary type="html">While I was accruing the typing speed data each time I practiced on Typractice, the user was not able to see it. They had no way of knowing how they have progressed (or regressed) over time.</summary></entry><entry><title type="html">üé¨ Movie rating system</title><link href="https://varunbarad.com/blog/movie-rating-system" rel="alternate" type="text/html" title="üé¨ Movie rating system" /><published>2023-07-22T11:31:20+05:30</published><updated>2023-07-22T11:31:20+05:30</updated><id>https://varunbarad.com/blog/movie-rating-system</id><content type="html" xml:base="https://varunbarad.com/blog/movie-rating-system">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Over the years I have watched a lot of movies but never found a good way to determine which of them I liked how much. That was until I came across this &lt;a href=&quot;https://kau.sh/blog/movie-rating-system/&quot;&gt;simple guide&lt;/a&gt; from &lt;a href=&quot;https://kau.sh&quot;&gt;Kaushik Gopal&lt;/a&gt;. The rating works on a scale of 0-5 and here‚Äôs how it goes:&lt;/p&gt;

&lt;h2 id=&quot;05-&quot;&gt;0.5 (ü§¢)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;This movie doesn‚Äôt exist to me. It‚Äôs so bad that I will not even mention its existence to other people.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-Ô∏è&quot;&gt;1 (üôÖ‚Äç‚ôÇÔ∏è)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;I watched this movie and I regret it.&lt;/li&gt;
  &lt;li&gt;I feel like I‚Äôve been robbed off my time.&lt;/li&gt;
  &lt;li&gt;I don‚Äôt recommend anyone watch it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-Ô∏è&quot;&gt;2 (ü§∑Ô∏è)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;I watched this movie.&lt;/li&gt;
  &lt;li&gt;I don‚Äôt regret it per say.&lt;/li&gt;
  &lt;li&gt;But I wouldn‚Äôt recommend to anyone else.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-&quot;&gt;3 (üëç)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;This movie was decent and I‚Äôm glad I watched it.&lt;/li&gt;
  &lt;li&gt;It deserves to be watched at least once, so I would recommend this to others.&lt;/li&gt;
  &lt;li&gt;But I personally wouldn‚Äôt watch this movie all over again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-&quot;&gt;4 (üëå)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;This movie was really good.&lt;/li&gt;
  &lt;li&gt;This would go in my list of recommended movies for the year.&lt;/li&gt;
  &lt;li&gt;Heck, I‚Äôd like to watch this movie again sometime.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;45-Ô∏è&quot;&gt;4.5 (üéñÔ∏è)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;This movie was so good that I want to buy a copy of it.&lt;/li&gt;
  &lt;li&gt;I would sit my friends down and watch this movie again with them.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;5-&quot;&gt;5 (üé¨)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;This movie is a work of art and essential watching for our age.&lt;/li&gt;
  &lt;li&gt;I want to see the director‚Äôs cut so I can enjoy it more.&lt;/li&gt;
  &lt;li&gt;Every one should watch this movie at least once in their lifetime.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Varun Barad</name></author><category term="miscellaneous" /><category term="life-hack" /><summary type="html">Introduction</summary></entry><entry><title type="html">‚öñÔ∏è Wracker Dev Log #002</title><link href="https://varunbarad.com/blog/wracker-log-002" rel="alternate" type="text/html" title="‚öñÔ∏è Wracker Dev Log #002" /><published>2023-06-12T19:35:00+05:30</published><updated>2023-06-12T19:35:00+05:30</updated><id>https://varunbarad.com/blog/wracker-log-002</id><content type="html" xml:base="https://varunbarad.com/blog/wracker-log-002">&lt;p&gt;Welcome to the second log of my journey to build a weight-tracking website. Today I worked on the form for adding a new weight entry and also on the table for displaying all the entries.&lt;/p&gt;

&lt;h2 id=&quot;day-2-challenge-1&quot;&gt;Day 2 Challenge 1&lt;/h2&gt;

&lt;p&gt;First goal for today was to get a static HTML page served from my Django server as the homepage for the website. I couldn‚Äôt figure out how to deal with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;django-static&lt;/code&gt; and so ended up rendering a template (with no data passed) from an endpoint. For now I just shoved all my CSS and JS for this page in the HTML file itself. I‚Äôll figure out how to deal with static files later.&lt;/p&gt;

&lt;h2 id=&quot;day-2-challenge-2&quot;&gt;Day 2 Challenge 2&lt;/h2&gt;

&lt;p&gt;Next up on the task was to create a form which takes in the recording date (defaults to current date but user can change it) and allows user to enter their weight for that day. Then take that data and store it locally in-browser. I chose to go the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;local-storage&lt;/code&gt; path for this. The most cumbersome part for me was to get the form to look how I wanted it to. Other than form-styling, actually capturing and storing the data was quite straight-forward.&lt;/p&gt;

&lt;h2 id=&quot;day-2-challenge-3&quot;&gt;Day 2 Challenge 3&lt;/h2&gt;

&lt;p&gt;The final task for me was to display the captured data in a table. Again, getting and processing the data to display was not the difficult part. The quirkiest section was when I wanted to turn the corners of my table round. Turns out, each cell individually gets their border and thus to only give the table rounded corners I had to select individual corner cells and then give them rounded corner for only the corner which was going to become a corner of the table.&lt;/p&gt;

&lt;h2 id=&quot;results&quot;&gt;Results&lt;/h2&gt;

&lt;p&gt;The website with no data added.
&lt;img src=&quot;../assets/images/posts/wracker/002-wracker-without-data.png&quot; alt=&quot;screenshot with no data added&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The website with a few weight entries.
&lt;img src=&quot;../assets/images/posts/wracker/002-wracker-with-data.png&quot; alt=&quot;screenshot with a few weight entries&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;things-i-learnedsolidified-today&quot;&gt;Things I learned/solidified today&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;How to style corners of a HTML &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;table&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;How to serve a HTML page from under Django&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Varun Barad</name></author><category term="wracker" /><category term="programming" /><category term="python" /><category term="javascript" /><summary type="html">Welcome to the second log of my journey to build a weight-tracking website. Today I worked on the form for adding a new weight entry and also on the table for displaying all the entries.</summary></entry><entry><title type="html">üìù Custom 404 in Express</title><link href="https://varunbarad.com/blog/til-handle-404-node-express" rel="alternate" type="text/html" title="üìù Custom 404 in Express" /><published>2023-06-02T17:52:02+05:30</published><updated>2023-06-02T17:52:02+05:30</updated><id>https://varunbarad.com/blog/til-handle-404-node-express</id><content type="html" xml:base="https://varunbarad.com/blog/til-handle-404-node-express">&lt;p&gt;You need to define a middleware to handle it and that middleware needs to be defined after all the other routes and middlewares have been specified already.&lt;/p&gt;

&lt;p&gt;The logic is that this middleware will only be executed if the request cannot match with any other middleware/route.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;404&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Not found&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And if you don‚Äôt want to provide a body then.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sendStatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;404&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Varun Barad</name></author><category term="til" /><category term="programming" /><category term="javascript" /><summary type="html">You need to define a middleware to handle it and that middleware needs to be defined after all the other routes and middlewares have been specified already.</summary></entry><entry><title type="html">‚å®Ô∏è Typractice</title><link href="https://varunbarad.com/blog/project-typractice" rel="alternate" type="text/html" title="‚å®Ô∏è Typractice" /><published>2023-05-25T12:21:38+05:30</published><updated>2023-05-25T12:21:38+05:30</updated><id>https://varunbarad.com/blog/project-typractice</id><content type="html" xml:base="https://varunbarad.com/blog/project-typractice">&lt;p&gt;Recently someone I know wanted to improve their typing speed and accuracy. While there are a lot of websites available around to practice your typing, I took this as a chance to build my own which is free of any ads or tracking. Following my tradition of not-the-best puns, I present to the world: &lt;a href=&quot;https://typractice.varunbarad.com&quot;&gt;Typractice&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It‚Äôs a simple website which gives you a random paragraph to type. At the end you are presented your typing speed in terms of words-per-minute. There is no mentioning of accuracy as it doesn‚Äôt accept anything other than perfect text entry. The timer keeps going until you enter the whole paragraph correctly.&lt;/p&gt;

&lt;p&gt;This is also the first time I tried writing it with the help of ChatGPT. Gave it a bunch of prompts, and it gave out a bunch of code. Both the functionality and appearance of the site were not upto my expectations, but I used it and then built on top.&lt;/p&gt;

&lt;p&gt;The website also stores in-browser (all locally on your machine) how you performed on different paragraphs. I plan to add a stats page in the future which could show you how your performance changed over time, both overall and also for specific paragraphs.&lt;/p&gt;

&lt;p&gt;Check it out and let me know what you like and what you would like to change about it. You can also send me screenshots of your best scores.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/posts/project-typractice/screenshot.png&quot; alt=&quot;my score&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;articles-on-this-project&quot;&gt;Articles on this project&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Public release (this article)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./typractice-stats-chart&quot;&gt;Adding stats chart&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./typractice-paragraph-summaries&quot;&gt;Adding summary stats table&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Varun Barad</name></author><category term="typractice" /><category term="web" /><category term="programming" /><category term="project" /><summary type="html">Recently someone I know wanted to improve their typing speed and accuracy. While there are a lot of websites available around to practice your typing, I took this as a chance to build my own which is free of any ads or tracking. Following my tradition of not-the-best puns, I present to the world: Typractice.</summary></entry><entry><title type="html">üìù Using emoji as a favicon</title><link href="https://varunbarad.com/blog/emoji-as-favicon" rel="alternate" type="text/html" title="üìù Using emoji as a favicon" /><published>2023-05-23T17:32:32+05:30</published><updated>2023-05-23T17:32:32+05:30</updated><id>https://varunbarad.com/blog/emoji-as-favicon</id><content type="html" xml:base="https://varunbarad.com/blog/emoji-as-favicon">&lt;p&gt;You can use an emoji as a favicon with this simple snippet:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;icon&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data:image/svg+xml,&amp;lt;svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22&amp;gt;&amp;lt;text y=%22.9em%22 font-size=%2290%22&amp;gt;üéØ&amp;lt;/text&amp;gt;&amp;lt;/svg&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Credits to &lt;a href=&quot;https://css-tricks.com/emoji-as-a-favicon/&quot;&gt;CSS-Tricks&lt;/a&gt; for this snippet.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="til" /><category term="programming" /><summary type="html">You can use an emoji as a favicon with this simple snippet:</summary></entry><entry><title type="html">‚öñÔ∏è Wracker Dev Log #001</title><link href="https://varunbarad.com/blog/wracker-log-001" rel="alternate" type="text/html" title="‚öñÔ∏è Wracker Dev Log #001" /><published>2023-05-22T23:55:00+05:30</published><updated>2023-05-22T23:55:00+05:30</updated><id>https://varunbarad.com/blog/wracker-log-001</id><content type="html" xml:base="https://varunbarad.com/blog/wracker-log-001">&lt;p&gt;I have been meaning to build my skills in some areas for quite some time, Python, traditional backend frameworks and a bit of full-stack development being a few of them. I decided on building a simple weight-tracking website to learn these things. It had been tossing about in my head for a lot of time, and finally I decided to sit down and start coding it today.&lt;/p&gt;

&lt;h2 id=&quot;day-1-challenge-1&quot;&gt;Day 1 Challenge 1&lt;/h2&gt;

&lt;p&gt;The first thing to do was to create a directory to store all the code in. Here was the first roadblock I hit, what should the project be named. After contemplating and thinking a lot on it (read 3 minutes max) I decided to go with ‚ÄúWracker‚Äù as it could be seen as a short for ‚ÄúWeight Tracker‚Äù and also it is a pun on the word ‚ÄúWrecker‚Äù which I just found hilarious.&lt;/p&gt;

&lt;h2 id=&quot;day-1-challenge-virtual&quot;&gt;Day 1 Challenge Virtual&lt;/h2&gt;

&lt;p&gt;Up next was me wanting to install the dependencies for the project without them muddying up my system-wide python packages. I knew of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;virtualenv&lt;/code&gt; and have banged my head enough in the past that it only took me 3 tries before I had it nailed down.&lt;/p&gt;

&lt;h2 id=&quot;day-1-challenging-structure&quot;&gt;Day 1 Challenging Structure&lt;/h2&gt;

&lt;p&gt;Since I wanted to use Django framework for this project and I haven‚Äôt ever used it before, I went to their official getting started guide and was left with a file structure looking something like this after initialising my project.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- Projects
  |- wracker
     |- .gitignore
     |- wracker
        |- manage.py
        |- wracker
           |- __init.py__
           |- asgi.py
           |- settings.py
           |- urls.py
           |- wsgi.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here I tried running the commands from getting started guide inside a pre-made directory for my project. I could not understand why it needs to create 2 separate subdirectories named the same as the project. This is something I tried understanding multiple times during the day, and we‚Äôll back come to it later.&lt;/p&gt;

&lt;h2 id=&quot;challenge-post-the-sqlite&quot;&gt;Challenge Post the SQLite&lt;/h2&gt;

&lt;p&gt;Django by default uses an SQLite database for storing data, but I wanted to use Postgres. I had already setup a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose.yaml&lt;/code&gt; file to provision me a postgres database running inside a docker container. While initially the configuration part in Django for Postgres was a bit confusing, I was able to get it working after a bit of fitting in multiple pieces together. I also learned how to use environment variables in Python while dealing with this.&lt;/p&gt;

&lt;h2 id=&quot;challenge-of-looking-good&quot;&gt;Challenge of Looking Good&lt;/h2&gt;

&lt;p&gt;I also wanted a code-formatter for Python and had heard about this one called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;black&lt;/code&gt;. Went to the official website, learnt how to use it and then integrate it locally with wracker.&lt;/p&gt;

&lt;h2 id=&quot;challenge-of-the-day&quot;&gt;Challenge of the Day&lt;/h2&gt;

&lt;p&gt;After looking at all this I would give ‚ÄúChallenge of the Day‚Äù award only to the project structure. While none of the official documentation clearly call it out that you need to pass in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt; as the directory to your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;django-admin startproject&lt;/code&gt; I did find &lt;a href=&quot;https://automationpanda.com/2018/02/06/starting-a-django-project-in-an-existing-directory/&quot;&gt;an article online&lt;/a&gt; that clarified it.&lt;/p&gt;

&lt;h2 id=&quot;things-i-learnedsolidified-today&quot;&gt;Things I learned/solidified today&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;virtualenv&lt;/code&gt; to keep dependencies separate in Python&lt;/li&gt;
  &lt;li&gt;How to export your dependencies as a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;requirements.txt&lt;/code&gt; file&lt;/li&gt;
  &lt;li&gt;Usage of environment variables in Python&lt;/li&gt;
  &lt;li&gt;How to create a Django project with reasonable directory structure&lt;/li&gt;
  &lt;li&gt;Formatting python code using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;black&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Integrating PostgreSQL with Django instead of the default SQLite database&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Varun Barad</name></author><category term="wracker" /><category term="programming" /><category term="python" /><summary type="html">I have been meaning to build my skills in some areas for quite some time, Python, traditional backend frameworks and a bit of full-stack development being a few of them. I decided on building a simple weight-tracking website to learn these things. It had been tossing about in my head for a lot of time, and finally I decided to sit down and start coding it today.</summary></entry><entry><title type="html">üìù Save dependency list of your python project to a file</title><link href="https://varunbarad.com/blog/til-python-save-dependency-list" rel="alternate" type="text/html" title="üìù Save dependency list of your python project to a file" /><published>2023-05-22T16:10:27+05:30</published><updated>2023-05-22T16:10:27+05:30</updated><id>https://varunbarad.com/blog/til-python-save-dependency-list</id><content type="html" xml:base="https://varunbarad.com/blog/til-python-save-dependency-list">&lt;p&gt;Node/npm lists the dependencies you install in a project in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dependencies&lt;/code&gt; key in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file. But since python doesn‚Äôt have a similar file I was exploring how to do the same for a python project.&lt;/p&gt;

&lt;p&gt;I came across the convention of a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;requirements.txt&lt;/code&gt; file. This file lists all the packages that are installed in your current environment.&lt;/p&gt;

&lt;p&gt;To generate the file you use:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip freeze &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Varun Barad</name></author><category term="til" /><category term="python" /><category term="programming" /><summary type="html">Node/npm lists the dependencies you install in a project in the dependencies key in your package.json file. But since python doesn‚Äôt have a similar file I was exploring how to do the same for a python project.</summary></entry><entry><title type="html">Group posts by year in Jekyll using Liquid</title><link href="https://varunbarad.com/blog/group-posts-by-year-jekyll" rel="alternate" type="text/html" title="Group posts by year in Jekyll using Liquid" /><published>2023-05-10T07:55:00+05:30</published><updated>2023-05-10T07:55:00+05:30</updated><id>https://varunbarad.com/blog/group-posts-by-year-jekyll</id><content type="html" xml:base="https://varunbarad.com/blog/group-posts-by-year-jekyll">&lt;p&gt;On the &lt;a href=&quot;/blog&quot;&gt;list-all-posts page&lt;/a&gt; on this blog I wanted to group posts by year and show the year as a section-heading.&lt;/p&gt;

&lt;p&gt;I found a &lt;a href=&quot;https://stackoverflow.com/a/61346228/4717436&quot;&gt;StackOverflow answer&lt;/a&gt; that suggested using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;group_by_exp&lt;/code&gt; filter in Liquid. I used it as follows:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{% assign postsByYear = site.posts | group_by_exp:&quot;post&quot;, &quot;post.date | date: '%Y'&quot; %}
{% for year in postsByYear %}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;{{ year.name }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post-list&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  {% for post in year.items %}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ post.url }}&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post-title&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ post.title }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post-description&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ post.summary }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  {% endfor %}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
{% endfor %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you want to further do sub-sections by month then you can use something like this:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{% assign postsByYear = site.posts | group_by_exp:&quot;post&quot;, &quot;post.date | date: '%Y'&quot; %}
{% for year in postsByYear %}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;{{ year.name }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;month-list&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  {% assign postsByMonth = year.items | group_by_exp:&quot;post&quot;, &quot;post.date | date: '%B'&quot; %}
  {% for month in postsByMonth %}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;{{ month.name }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post-list&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    {% for post in month.items %}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ post.url }}&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post-title&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ post.title }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post-description&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ post.summary }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    {% endfor %}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  {% endfor %}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
{% endfor %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Varun Barad</name></author><category term="programming" /><summary type="html">On the list-all-posts page on this blog I wanted to group posts by year and show the year as a section-heading.</summary></entry><entry><title type="html">üìù Map an array of ids in postgres to matching data from another table</title><link href="https://varunbarad.com/blog/til-postgres-map-array" rel="alternate" type="text/html" title="üìù Map an array of ids in postgres to matching data from another table" /><published>2023-05-08T23:10:27+05:30</published><updated>2023-05-08T23:10:27+05:30</updated><id>https://varunbarad.com/blog/til-postgres-map-array</id><content type="html" xml:base="https://varunbarad.com/blog/til-postgres-map-array">&lt;p&gt;If we have two tables, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;people&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;groups&lt;/code&gt;, where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;people&lt;/code&gt; has a column &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;group_ids&lt;/code&gt; which is an array of ids from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;groups&lt;/code&gt;, we can map the array of ids to the matching name from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;groups&lt;/code&gt; using the following query:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;coalesce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;group_names&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;people&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;inner&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;join&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string_agg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;', '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person_id&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity_groups&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;inner&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;join&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unnest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group_ids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;group_id&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;people&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It is a three-step process, listed inside to out (i.e. the innermost query is executed first):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Convert the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;group_ids&lt;/code&gt; array from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;people&lt;/code&gt; into a table of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;person_id&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;group_id&lt;/code&gt; using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unnest&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Join the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;group_id&lt;/code&gt; with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;groups&lt;/code&gt; to get the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;name&lt;/code&gt; of the group&lt;/li&gt;
  &lt;li&gt;Aggregate the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;name&lt;/code&gt; of the groups into a comma-separated string using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string_agg&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">If we have two tables, people and groups, where people has a column group_ids which is an array of ids from groups, we can map the array of ids to the matching name from groups using the following query:</summary></entry><entry><title type="html">üìù Counting days between 2 dates in PostgreSQL</title><link href="https://varunbarad.com/blog/til-postgres-days-between-dates" rel="alternate" type="text/html" title="üìù Counting days between 2 dates in PostgreSQL" /><published>2023-04-09T07:52:44+05:30</published><updated>2023-04-09T07:52:44+05:30</updated><id>https://varunbarad.com/blog/til-postgres-days-between-dates</id><content type="html" xml:base="https://varunbarad.com/blog/til-postgres-days-between-dates">&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;payments&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;customer_id&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;payment_id&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;payment_amount&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;payment_date&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;If you want to count the number of days between each payment and today then you can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;extract&lt;/code&gt; function with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;days&lt;/code&gt; as a parameter:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payment_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;payment_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payment_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;days_since_payment&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payments&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">payments customer_id payment_id payment_amount payment_date</summary></entry><entry><title type="html">üìù Find the first entry in each group</title><link href="https://varunbarad.com/blog/til-postgres-first-in-each-group" rel="alternate" type="text/html" title="üìù Find the first entry in each group" /><published>2023-03-27T17:39:15+05:30</published><updated>2023-03-27T17:39:15+05:30</updated><id>https://varunbarad.com/blog/til-postgres-first-in-each-group</id><content type="html" xml:base="https://varunbarad.com/blog/til-postgres-first-in-each-group">&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;payments&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;customer_id&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;payment_id&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;payment_amount&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;payment_date&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;If we want to see the payment_id of the highest amount of payment for each customer_id then we need to do:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;distinct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customer_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;first_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;payment_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;over&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;partition&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customer_id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payment_amount&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;desc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;highest_payment_id&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payments&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that you don‚Äôt need to specify a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;group by&lt;/code&gt; clause for the overall query in this case.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">payments customer_id payment_id payment_amount payment_date</summary></entry><entry><title type="html">üìù Navigate to a path in Mac Finder</title><link href="https://varunbarad.com/blog/til-navigate-path-mac-finder" rel="alternate" type="text/html" title="üìù Navigate to a path in Mac Finder" /><published>2023-03-14T18:32:10+05:30</published><updated>2023-03-14T18:32:10+05:30</updated><id>https://varunbarad.com/blog/til-navigate-path-mac-finder</id><content type="html" xml:base="https://varunbarad.com/blog/til-navigate-path-mac-finder">&lt;p&gt;For many years I had a slight frustration with Mac‚Äôs default file explorer utility Finder that it was not exposing any convenient way to go to a given path without making me click through those folders individually.&lt;/p&gt;

&lt;p&gt;Today I learnt that the way to do it is to press &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cmd + Shift + G&lt;/code&gt; when Finder is in focus. It opens a dialogue box where you can give the full path, and it will open that directly.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Screenshot of the opened dialog box&quot; src=&quot;../assets/images/posts/til-navigate-path-mac-finder/screenshot.png&quot; style=&quot;width: 80%; height: auto;&quot; /&gt;&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">For many years I had a slight frustration with Mac‚Äôs default file explorer utility Finder that it was not exposing any convenient way to go to a given path without making me click through those folders individually.</summary></entry><entry><title type="html">Contacts Calendar</title><link href="https://varunbarad.com/blog/contacts-calendar" rel="alternate" type="text/html" title="Contacts Calendar" /><published>2023-03-04T17:18:03+05:30</published><updated>2023-03-04T17:18:03+05:30</updated><id>https://varunbarad.com/blog/contacts-calendar</id><content type="html" xml:base="https://varunbarad.com/blog/contacts-calendar">&lt;p&gt;I store birthdays of my contacts right in my contacts application on phone. They get synced to Google Contacts.&lt;/p&gt;

&lt;p&gt;The drawback to that is I didn‚Äôt get notified of any upcoming birthdays. Google does show this in your calendar, but I don‚Äôt use my Google calendar as my day-to-day calendar.&lt;/p&gt;

&lt;p&gt;So I decided to build a service of my own which would let me export these into separate calendar feeds. You can go to &lt;a href=&quot;https://contacts-calendar.varunbarad.com&quot;&gt;Contacts Calendar&lt;/a&gt; to try it out for yourself.&lt;/p&gt;

&lt;p&gt;Keeping user‚Äôs privacy in mind, this project does not store authentication token for your Google account, nor does it store your contacts data. It even gives you the calendar feed file and does not directly host it on the web.  That also allowed me to side-step thinking about maintaining user accounts and data.&lt;/p&gt;

&lt;p&gt;I used this also as an opportunity to learn the basics of Spring Boot framework using Kotlin.&lt;/p&gt;

&lt;p&gt;Check it out and let me know what you like and what you would like to change about it. At the very least, have fun.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="web" /><category term="programming" /><category term="project" /><summary type="html">I store birthdays of my contacts right in my contacts application on phone. They get synced to Google Contacts.</summary></entry><entry><title type="html">Cheatsheet - ffmpeg</title><link href="https://varunbarad.com/blog/cheatsheet-ffmpeg" rel="alternate" type="text/html" title="Cheatsheet - ffmpeg" /><published>2023-02-25T10:36:10+05:30</published><updated>2023-02-25T10:36:10+05:30</updated><id>https://varunbarad.com/blog/cheatsheet-ffmpeg</id><content type="html" xml:base="https://varunbarad.com/blog/cheatsheet-ffmpeg">&lt;h2 id=&quot;extract-audio-from-webm-to-mp3&quot;&gt;Extract audio from .webm to .mp3&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;the-file-you-want-to-process.webm&quot;&lt;/span&gt;
ffmpeg &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FILE&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-vn&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-ab&lt;/span&gt; 128k &lt;span class=&quot;nt&quot;&gt;-ar&lt;/span&gt; 44100 &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FILE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%.webm&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.mp3&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Credits: &lt;a href=&quot;https://bytefreaks.net/gnulinux/bash/ffmpeg-extract-audio-from-webm-to-mp3&quot;&gt;Bytefreaks.net&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;merge-subtitle-srt-files-with-video-files&quot;&gt;Merge subtitle (srt) files with video files&lt;/h2&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ffmpeg &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; video.mp4 &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; subtitle.srt &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt;:s mov_text &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt;:v copy &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt;:a copy merged.mp4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Credits: &lt;a href=&quot;https://superuser.com/a/520555&quot;&gt;StackExchange&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;convert-mkv-to-mp4&quot;&gt;Convert .mkv to .mp4&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ffmpeg &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; input.mkv &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt;:v copy &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt;:a copy output.mp4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;extract-text-subtitles-from-a-video-file-to-separate-srt-files&quot;&gt;Extract text subtitles from a video file to separate .srt files&lt;/h2&gt;

&lt;p&gt;This uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ffprobe&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jq&lt;/code&gt; to extract the subtitle streams from the input file and then uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ffmpeg&lt;/code&gt; to extract the subtitle streams to separate files.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Assuming the file is named input.mkv&lt;/span&gt;
ffprobe &lt;span class=&quot;nt&quot;&gt;-hide_banner&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-loglevel&lt;/span&gt; quiet &lt;span class=&quot;nt&quot;&gt;-select_streams&lt;/span&gt; s &lt;span class=&quot;nt&quot;&gt;-show_entries&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;codec_name,codec_type:stream_tags&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;language &lt;span class=&quot;nt&quot;&gt;-print_format&lt;/span&gt; json input.mkv | jq &lt;span class=&quot;s2&quot;&gt;&quot;.streams | to_entries | map({codec_name: .value.codec_name, language:(.value.tags.language // &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;), index:.key})[] | select(.codec_name == &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;subrip&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;) | &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;\(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.language)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.index)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--raw-output&lt;/span&gt; | xargs &lt;span class=&quot;nt&quot;&gt;-L1&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-I&lt;/span&gt; % &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; zsh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ffmpeg -hide_banner -loglevel quiet -i input.mkv -map 0:s:$(echo % | sed &quot;s/[^0-9]//g&quot;) %.srt'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;embed-thumbnail-into-an-mp4-video-file&quot;&gt;Embed thumbnail into an mp4 video file&lt;/h2&gt;

&lt;p&gt;Here we want to apply thumbnail from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;image.png&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;input.mp4&lt;/code&gt; and save the result to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;output.mp4&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ffmpeg &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; input.mp4 &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; image.png &lt;span class=&quot;nt&quot;&gt;-map&lt;/span&gt; 1 &lt;span class=&quot;nt&quot;&gt;-map&lt;/span&gt; 0 &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; copy &lt;span class=&quot;nt&quot;&gt;-disposition&lt;/span&gt;:0 attached_pic output.mp4
&lt;span class=&quot;c&quot;&gt;# Note: attached_pic here is a keyword to the disposition option&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Credits: &lt;a href=&quot;https://stackoverflow.com/a/54719926/4717436&quot;&gt;StackOverflow&lt;/a&gt;&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="cheat-sheet" /><summary type="html">Extract audio from .webm to .mp3</summary></entry><entry><title type="html">üìù Most used commands</title><link href="https://varunbarad.com/blog/til-most-used-commands" rel="alternate" type="text/html" title="üìù Most used commands" /><published>2023-02-10T11:04:06+05:30</published><updated>2023-02-10T11:04:06+05:30</updated><id>https://varunbarad.com/blog/til-most-used-commands</id><content type="html" xml:base="https://varunbarad.com/blog/til-most-used-commands">&lt;p&gt;Use this command to view the top-5 most used commands on your Mac terminal&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;history&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BEGIN {FS=&quot;[ \t]+|\\|&quot;} {print $5}'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;uniq&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--count&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--reverse&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--sort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;numeric | &lt;span class=&quot;nb&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--lines&lt;/span&gt; 5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">Use this command to view the top-5 most used commands on your Mac terminal</summary></entry><entry><title type="html">üìù wget with custom filename</title><link href="https://varunbarad.com/blog/til-wget-custom-filename" rel="alternate" type="text/html" title="üìù wget with custom filename" /><published>2023-02-08T14:59:48+05:30</published><updated>2023-02-08T14:59:48+05:30</updated><id>https://varunbarad.com/blog/til-wget-custom-filename</id><content type="html" xml:base="https://varunbarad.com/blog/til-wget-custom-filename">&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget &lt;span class=&quot;nt&quot;&gt;--output-document&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;filename-goes-here&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--continue&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;file-url-goes-here&amp;gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">wget --output-document &quot;&amp;lt;filename-goes-here&amp;gt;&quot; --continue &quot;&amp;lt;file-url-goes-here&amp;gt;&quot;</summary></entry><entry><title type="html">üìù Taking a heap-dump from a running JVM process</title><link href="https://varunbarad.com/blog/til-heap-dump-from-jvm" rel="alternate" type="text/html" title="üìù Taking a heap-dump from a running JVM process" /><published>2023-01-19T13:00:00+05:30</published><updated>2023-01-19T13:00:00+05:30</updated><id>https://varunbarad.com/blog/til-heap-dump-from-jvm</id><content type="html" xml:base="https://varunbarad.com/blog/til-heap-dump-from-jvm">&lt;p&gt;I was trying to find the root-cause of a memory leak and amongst many different rabbit holes, I learnt how to take the heap-dump from an application running on JVM.&lt;/p&gt;

&lt;p&gt;The tool used is called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jmap&lt;/code&gt; and the exact command to dump the output to a file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;heap-dump.bin&lt;/code&gt; is:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jmap &lt;span class=&quot;nt&quot;&gt;-dump&lt;/span&gt;:all,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;b,file&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;heap-dump.bin &amp;lt;process-id-of-the-jvm-process&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">I was trying to find the root-cause of a memory leak and amongst many different rabbit holes, I learnt how to take the heap-dump from an application running on JVM.</summary></entry><entry><title type="html">üìù Figma styles not present in the API response</title><link href="https://varunbarad.com/blog/til-figma-styles-unavailable-in-api" rel="alternate" type="text/html" title="üìù Figma styles not present in the API response" /><published>2022-09-23T13:01:54+05:30</published><updated>2022-09-23T13:01:54+05:30</updated><id>https://varunbarad.com/blog/til-figma-styles-unavailable-in-api</id><content type="html" xml:base="https://varunbarad.com/blog/til-figma-styles-unavailable-in-api">&lt;p&gt;So there can be the case that your Figma file is showing that there are styles defined and present in the file, but when querying it via the API endpoint to get file-styles (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/v1/files/&amp;lt;file-id&amp;gt;/styles&lt;/code&gt;) it might return empty styles array.&lt;/p&gt;

&lt;p&gt;Simple fix is to go into the Figma file and Publish those styles (you can do it from the drop-down at the top by clicking file‚Äôs name).&lt;/p&gt;

&lt;p&gt;Now if you query that endpoint, you will find the published styles available there.&lt;/p&gt;

&lt;h3 id=&quot;additional-text-just-to-help-search-engines&quot;&gt;Additional text just to help search-engines&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;figma api styles empty&lt;/li&gt;
  &lt;li&gt;figma api not returning styles&lt;/li&gt;
  &lt;li&gt;no styles present in figma api&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">So there can be the case that your Figma file is showing that there are styles defined and present in the file, but when querying it via the API endpoint to get file-styles (/v1/files/&amp;lt;file-id&amp;gt;/styles) it might return empty styles array.</summary></entry><entry><title type="html">Office Pranks</title><link href="https://varunbarad.com/blog/office-pranks" rel="alternate" type="text/html" title="Office Pranks" /><published>2022-09-17T06:40:13+05:30</published><updated>2022-09-17T06:40:13+05:30</updated><id>https://varunbarad.com/blog/office-pranks</id><content type="html" xml:base="https://varunbarad.com/blog/office-pranks">&lt;p&gt;These are a bunch of simple and harmless (especially HR safe) pranks you can pull on your colleagues:&lt;/p&gt;

&lt;h3 id=&quot;wear-a-different-name-tag-every-day&quot;&gt;Wear a different name tag every day&lt;/h3&gt;

&lt;p&gt;Come to office with a different name tag stuck to your shirt every day. There are bound to be a few people who might trip up as to what your identity actually is and how to address you.&lt;/p&gt;

&lt;h3 id=&quot;fake-moustaches&quot;&gt;Fake moustaches&lt;/h3&gt;

&lt;p&gt;Just show up with a fake moustache one day. Don‚Äôt mention it unless someone asks about it. Some people will do a solid double-take the first time you start speaking in a meeting.&lt;/p&gt;

&lt;h3 id=&quot;wear-multiple-name-tags&quot;&gt;Wear multiple name tags&lt;/h3&gt;

&lt;p&gt;In this one you wear multiple different name tags at the same time. And when someone asks you who you are, you just ask them to pick who they want you to be. And each name/character comes with their own different background story and what they do now and stuff like that.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="miscellaneous" /><summary type="html">These are a bunch of simple and harmless (especially HR safe) pranks you can pull on your colleagues:</summary></entry><entry><title type="html">üìù Authentication with wget</title><link href="https://varunbarad.com/blog/til-authentication-with-wget" rel="alternate" type="text/html" title="üìù Authentication with wget" /><published>2022-09-04T07:43:54+05:30</published><updated>2022-09-04T07:43:54+05:30</updated><id>https://varunbarad.com/blog/til-authentication-with-wget</id><content type="html" xml:base="https://varunbarad.com/blog/til-authentication-with-wget">&lt;p&gt;There are 2 ways to provide username and password when downloading files using wget&lt;/p&gt;

&lt;h2 id=&quot;directly-as-parameters&quot;&gt;Directly as parameters&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget &lt;span class=&quot;nt&quot;&gt;--user&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;username-goes-here&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--password&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;password-goes-here&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;file-url-goes-here&amp;gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This has the disadvantage that it will show up in your shell history and in running processes lists, thus exposing your password.&lt;/p&gt;

&lt;h2 id=&quot;interactively-entering-the-password&quot;&gt;Interactively entering the password&lt;/h2&gt;

&lt;p&gt;Another way is to tell wget to interactively ask you for the password&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget &lt;span class=&quot;nt&quot;&gt;--user&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;username-goes-here&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--ask-password&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;file-url-goes-here&amp;gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here instead of the password showing up in your command, wget asks you to enter your password.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">There are 2 ways to provide username and password when downloading files using wget</summary></entry><entry><title type="html">üìù How to make non-capturing groups in RegEx</title><link href="https://varunbarad.com/blog/til-regex-non-capturing-groups" rel="alternate" type="text/html" title="üìù How to make non-capturing groups in RegEx" /><published>2022-08-30T07:44:04+05:30</published><updated>2022-08-30T07:44:04+05:30</updated><id>https://varunbarad.com/blog/til-regex-non-capturing-groups</id><content type="html" xml:base="https://varunbarad.com/blog/til-regex-non-capturing-groups">&lt;p&gt;&lt;strong&gt;TLDR:&lt;/strong&gt; This is how you surround a regular (capturing) group in regex &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;()&lt;/code&gt;. And this is how you surround a non-capturing group in regex &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(?:)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I had to write a regex to extract an ID from a URL. The URL could come in either of the below form&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://www.randomwebsite.com/file_64fe4cd
or
https://randomwebsite.com/file_64fe4cd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And I had to extract out only the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;file_64fe4cd&lt;/code&gt; part from it.&lt;/p&gt;

&lt;p&gt;I started with this regex:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-regexp&quot;&gt;^https://(www\.)?randomwebsite.com/(file_\w+)$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The problem this was giving me was it was providing two captured groups. One for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(www\.)?&lt;/code&gt; and the other one for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(file_\w+)&lt;/code&gt; (the one I wanted).&lt;/p&gt;

&lt;p&gt;I wanted to treat the first group as a group (for whether it could be present) but not have it captured. That‚Äôs how I got to know about non-capturing groups in regex. This is how you write a non-capturing group:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-regexp&quot;&gt;(?:&amp;lt;rest-of-your-group-match-here&amp;gt;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So our regex now becomes&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-regexp&quot;&gt;^https://(?:www\.)?randomwebsite.com/(file_\w+)$
&lt;/code&gt;&lt;/pre&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">TLDR: This is how you surround a regular (capturing) group in regex (). And this is how you surround a non-capturing group in regex (?:).</summary></entry><entry><title type="html">Useful fonts</title><link href="https://varunbarad.com/blog/useful-fonts" rel="alternate" type="text/html" title="Useful fonts" /><published>2022-08-12T00:00:00+05:30</published><updated>2022-08-12T00:00:00+05:30</updated><id>https://varunbarad.com/blog/useful-fonts</id><content type="html" xml:base="https://varunbarad.com/blog/useful-fonts">&lt;p&gt;This is a list of interesting/useful fonts which can be used:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://fonts.google.com/specimen/Saira?sort=popularity&amp;amp;preview.text=Workout%20Log&amp;amp;preview.text_type=custom&quot;&gt;Saira&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fonts.google.com/specimen/Chakra+Petch?sort=popularity&amp;amp;preview.text=Workout%20Log&amp;amp;preview.text_type=custom&quot;&gt;Chakra Petch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fonts.google.com/specimen/Cinzel?sort=popularity&amp;amp;preview.text=Workout%20Log&amp;amp;preview.text_type=custom&quot;&gt;Cinzel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Varun Barad</name></author><category term="miscellaneous" /><summary type="html">This is a list of interesting/useful fonts which can be used:</summary></entry><entry><title type="html">üìù India‚Äôs national aquatic animal</title><link href="https://varunbarad.com/blog/til-indias-national-aquatic-animal" rel="alternate" type="text/html" title="üìù India‚Äôs national aquatic animal" /><published>2022-07-12T00:00:00+05:30</published><updated>2022-07-12T00:00:00+05:30</updated><id>https://varunbarad.com/blog/til-indias-national-aquatic-animal</id><content type="html" xml:base="https://varunbarad.com/blog/til-indias-national-aquatic-animal">&lt;p&gt;Today (well actually this past Sunday) I learned that nations also have something known as their ‚ÄúNational Aquatic Animal‚Äù (NAA).&lt;/p&gt;

&lt;p&gt;I was visiting the &lt;a href=&quot;https://sciencecity.gujarat.gov.in/ticketing/ticket/aquatic-gallery-41&quot;&gt;aquatic gallery&lt;/a&gt; (a recent addition) of &lt;a href=&quot;https://sciencecity.gujarat.gov.in/home&quot;&gt;Science City&lt;/a&gt; near me and found out that besides just plain old dolphins that we hear/see about there is also something called River Dolphins and that India‚Äôs National Aquatic Animal is actually a &lt;strong&gt;River Dolphin&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Later looking up on Wikipedia I found that it is specifically the &lt;a href=&quot;https://en.wikipedia.org/wiki/Ganges_river_dolphin&quot;&gt;Ganges (Platanista gangetica)&lt;/a&gt; variant that is India‚Äôs NAA.&lt;/p&gt;

&lt;p&gt;PS: If you are in Gujarat, India then you should definitely take out a day and visit the Science City in Ahmedabad (&lt;a href=&quot;https://goo.gl/maps/kHXJnbhLNF2D8z557&quot;&gt;Google Maps link&lt;/a&gt;).&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">Today (well actually this past Sunday) I learned that nations also have something known as their ‚ÄúNational Aquatic Animal‚Äù (NAA).</summary></entry><entry><title type="html">Safe alphanumeric password base</title><link href="https://varunbarad.com/blog/safe-alphanumeric-password-base" rel="alternate" type="text/html" title="Safe alphanumeric password base" /><published>2022-03-29T00:00:00+05:30</published><updated>2022-03-29T00:00:00+05:30</updated><id>https://varunbarad.com/blog/safe-alphanumeric-password-base</id><content type="html" xml:base="https://varunbarad.com/blog/safe-alphanumeric-password-base">&lt;p&gt;The below collection of characters are readable and individually distinguishable to make alphanumeric passwords out of&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;abcdefghjkmnpqrstuvwxyABCDEFGHJKLMNPQRSTUVWXY3456789
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Varun Barad</name></author><category term="miscellaneous" /><summary type="html">The below collection of characters are readable and individually distinguishable to make alphanumeric passwords out of</summary></entry><entry><title type="html">Improvement Roll</title><link href="https://varunbarad.com/blog/improvement-roll" rel="alternate" type="text/html" title="Improvement Roll" /><published>2021-11-22T00:00:00+05:30</published><updated>2021-11-22T00:00:00+05:30</updated><id>https://varunbarad.com/blog/improvement-roll</id><content type="html" xml:base="https://varunbarad.com/blog/improvement-roll">&lt;p&gt;So I finally finished a side-project after a long time and rolled it out public. You can find it &lt;a href=&quot;https://improvement-roll.varunbarad.com&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It is a tiny website which suggests you useful things you can do in your down-time instead of letting it be sucked in the maw of social media.&lt;/p&gt;

&lt;p&gt;The idea for this came when I saw an app by the same name on the F-Droid store. The experience I wanted was a bit different from what I had with that app and also I thought that this was so trivial that it didn‚Äôt need a full-fledged native app and that just a simple website should do the trick.&lt;/p&gt;

&lt;p&gt;So I set out to building it. As with some of my other frontend related stuff, my aim was to keep this thing as less dependent on external libraries as I can (0 external dependencies sounds perfect for something of this size). Ended up not importing any external libraries/frameworks in either JS or CSS land.&lt;/p&gt;

&lt;p&gt;Later I thought that it would be awesome if I could access it offline too, if it has loaded itself in my browser once before. And so I looked into PWAs and implemented the simplest version I could find online to just setup a basic cache using the service-worker so that if the website has been loaded once in your browser it will load fine even if there is no internet connection.&lt;/p&gt;

&lt;p&gt;After doing all that it occurred to me, this website might turn out to be something completely useless to people who have JS disabled in their browsers. So I started thinking as to what value I can provide to users with JS even though the whole core of this is built using conditionals and random number generators and other stuff which can‚Äôt be replicated with just HTML &amp;amp; CSS. So then I landed on the idea to provide &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;details&amp;gt;&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;summary&amp;gt;&lt;/code&gt; tags for each block of time where the whole list of that tasks for that time-block will be visible.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="javascript" /><category term="web" /><category term="programming" /><summary type="html">So I finally finished a side-project after a long time and rolled it out public. You can find it here.</summary></entry><entry><title type="html">üìù List files updated in a git commit</title><link href="https://varunbarad.com/blog/til-list-files-in-a-git-commit" rel="alternate" type="text/html" title="üìù List files updated in a git commit" /><published>2021-11-17T00:00:00+05:30</published><updated>2021-11-17T00:00:00+05:30</updated><id>https://varunbarad.com/blog/til-list-files-in-a-git-commit</id><content type="html" xml:base="https://varunbarad.com/blog/til-list-files-in-a-git-commit">&lt;p&gt;I wanted to see the list of files committed in my last commit&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git show &lt;span class=&quot;nt&quot;&gt;--pretty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name-only&lt;/span&gt; &amp;lt;sha1-commit-hash&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">I wanted to see the list of files committed in my last commit</summary></entry><entry><title type="html">üìù Centering elements with CSS</title><link href="https://varunbarad.com/blog/til-centering-elements-with-css" rel="alternate" type="text/html" title="üìù Centering elements with CSS" /><published>2021-10-31T00:00:00+05:30</published><updated>2021-10-31T00:00:00+05:30</updated><id>https://varunbarad.com/blog/til-centering-elements-with-css</id><content type="html" xml:base="https://varunbarad.com/blog/til-centering-elements-with-css">&lt;p&gt;We can use flexbox to do this. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#parent&lt;/code&gt; is the container element inside which to center the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#child&lt;/code&gt; element.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;#parent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;align-items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">We can use flexbox to do this. #parent is the container element inside which to center the #child element.</summary></entry><entry><title type="html">Cheatsheet - ImageMagick</title><link href="https://varunbarad.com/blog/cheatsheet-imagemagick" rel="alternate" type="text/html" title="Cheatsheet - ImageMagick" /><published>2021-10-17T00:00:00+05:30</published><updated>2021-10-17T00:00:00+05:30</updated><id>https://varunbarad.com/blog/cheatsheet-imagemagick</id><content type="html" xml:base="https://varunbarad.com/blog/cheatsheet-imagemagick">&lt;h2 id=&quot;resize-images-to-specific-target-size-while-padding-remaining-space-with-transparency&quot;&gt;Resize images to specific target size while padding remaining space with transparency&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;convert &lt;span class=&quot;nt&quot;&gt;-auto-orient&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-background&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#00000000&quot;&lt;/span&gt; original.jpg &lt;span class=&quot;nt&quot;&gt;-resize&lt;/span&gt; 720x576 &lt;span class=&quot;nt&quot;&gt;-gravity&lt;/span&gt; center &lt;span class=&quot;nt&quot;&gt;-extent&lt;/span&gt; 720x576 resized.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;resize-all-images-of-a-file-type-inside-a-folder&quot;&gt;Resize all images of a file-type inside a folder&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;PHOTO &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.jpg
&lt;span class=&quot;k&quot;&gt;do
    &lt;/span&gt;convert &lt;span class=&quot;nt&quot;&gt;-auto-orient&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-background&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#00000000&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PHOTO&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-resize&lt;/span&gt; 720x576 &lt;span class=&quot;nt&quot;&gt;-gravity&lt;/span&gt; center &lt;span class=&quot;nt&quot;&gt;-extent&lt;/span&gt; 720x576 &lt;span class=&quot;s2&quot;&gt;&quot;resized/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PHOTO&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.png&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;replace-a-color-in-image-with-different-color&quot;&gt;Replace a color in image with different color&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;convert input.png &lt;span class=&quot;nt&quot;&gt;-fuzz&lt;/span&gt; 90% &lt;span class=&quot;nt&quot;&gt;-fill&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#628FDB&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-opaque&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#000000&quot;&lt;/span&gt; star_blue.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fuzz&lt;/code&gt;: Percentage matching of the color&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;opaque&lt;/code&gt;: Color to replace&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fill&lt;/code&gt;: Color to replace with&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;reverse-the-rgb-colors-in-an-image&quot;&gt;Reverse the RGB colors in an image&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;convert input.png &lt;span class=&quot;nt&quot;&gt;-channel&lt;/span&gt; RGB &lt;span class=&quot;nt&quot;&gt;-negate&lt;/span&gt; output.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Automation is exciting ü§ñ&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="cheat-sheet" /><summary type="html">Resize images to specific target size while padding remaining space with transparency</summary></entry><entry><title type="html">üìù Resizing images from command-line</title><link href="https://varunbarad.com/blog/til-resizing-images-from-command-line" rel="alternate" type="text/html" title="üìù Resizing images from command-line" /><published>2021-10-08T00:00:00+05:30</published><updated>2021-10-08T00:00:00+05:30</updated><id>https://varunbarad.com/blog/til-resizing-images-from-command-line</id><content type="html" xml:base="https://varunbarad.com/blog/til-resizing-images-from-command-line">&lt;p&gt;I had to resize a bunch of images today to a specific target size while padding the remaining space with a transparent background. Out came ImageMagick&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;convert &lt;span class=&quot;nt&quot;&gt;-auto-orient&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-background&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#00000000&quot;&lt;/span&gt; original.jpg &lt;span class=&quot;nt&quot;&gt;-resize&lt;/span&gt; 720x576 &lt;span class=&quot;nt&quot;&gt;-gravity&lt;/span&gt; center &lt;span class=&quot;nt&quot;&gt;-extent&lt;/span&gt; 720x576 resized.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The above command would make an output image of 720 x 576 and the remaining space will be padded by transparency (#00000000).&lt;/p&gt;

&lt;p&gt;To do it for all files inside a folder we can use this (here we are only targeting all files ending in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.jpg&lt;/code&gt;)&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;PHOTO &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.jpg
&lt;span class=&quot;k&quot;&gt;do
    &lt;/span&gt;convert &lt;span class=&quot;nt&quot;&gt;-auto-orient&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-background&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#00000000&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PHOTO&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-resize&lt;/span&gt; 720x576 &lt;span class=&quot;nt&quot;&gt;-gravity&lt;/span&gt; center &lt;span class=&quot;nt&quot;&gt;-extent&lt;/span&gt; 720x576 &lt;span class=&quot;s2&quot;&gt;&quot;resized/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PHOTO&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.png&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">I had to resize a bunch of images today to a specific target size while padding the remaining space with a transparent background. Out came ImageMagick</summary></entry><entry><title type="html">Cheatsheet - YouTube-DL</title><link href="https://varunbarad.com/blog/cheatsheet-youtube-dl" rel="alternate" type="text/html" title="Cheatsheet - YouTube-DL" /><published>2021-10-07T00:00:00+05:30</published><updated>2021-10-07T00:00:00+05:30</updated><id>https://varunbarad.com/blog/cheatsheet-youtube-dl</id><content type="html" xml:base="https://varunbarad.com/blog/cheatsheet-youtube-dl">&lt;h2 id=&quot;use-a-separate-file-to-record-already-downloaded-urls&quot;&gt;Use a separate file to record already downloaded URLs&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;youtube-dl &lt;span class=&quot;nt&quot;&gt;--download-archive&lt;/span&gt; archive.txt &lt;span class=&quot;s2&quot;&gt;&quot;https://www.youtube.com/watch?v=toVfvRhWbj8&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;read-urls-from-a-file-one-url-per-line&quot;&gt;Read URLs from a file (one URL per line)&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;youtube-dl &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; links.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;write-description-to-a-file&quot;&gt;Write description to a file&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;youtube-dl &lt;span class=&quot;nt&quot;&gt;--write-description&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://www.youtube.com/watch?v=xxX81WmXjPg&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;embed-subtitles&quot;&gt;Embed subtitles&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;youtube-dl &lt;span class=&quot;nt&quot;&gt;--all-subs&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--embed-subs&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://www.youtube.com/watch?v=xxX81WmXjPg&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;write-thumbnail&quot;&gt;Write thumbnail&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;youtube-dl &lt;span class=&quot;nt&quot;&gt;--write-thumbnail&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://www.youtube.com/watch?v=xxX81WmXjPg&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;extract-audio-from-a-video-and-convert-it-to-mp3&quot;&gt;Extract audio from a video (and convert it to mp3)&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;youtube-dl &lt;span class=&quot;nt&quot;&gt;--format&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bestaudio/best'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--audio-format&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mp3'&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://www.youtube.com/watch?v=jVfDUvjvUSM&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;download-a-video-and-convert-it-to-mp4&quot;&gt;Download a video and convert it to mp4&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;youtube-dl &lt;span class=&quot;nt&quot;&gt;--format&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bestvideo+bestaudio/best'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--recode-video&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mp4'&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://www.youtube.com/watch?v=Jv8KRwF1zQs&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Have fun and be responsible ü§∫&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="cheat-sheet" /><summary type="html">Use a separate file to record already downloaded URLs</summary></entry><entry><title type="html">üìù Comparing two BigDecimal instances</title><link href="https://varunbarad.com/blog/comparing-two-BigDecimal-instances" rel="alternate" type="text/html" title="üìù Comparing two BigDecimal instances" /><published>2021-07-29T00:00:00+05:30</published><updated>2021-07-29T00:00:00+05:30</updated><id>https://varunbarad.com/blog/comparing-two-BigDecimal-instances</id><content type="html" xml:base="https://varunbarad.com/blog/comparing-two-BigDecimal-instances">&lt;p&gt;If you have two instances of BigDecimal as following&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;toBigDecimal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;toBigDecimal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It seems that they are equal in value and should return true when doing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a == b&lt;/code&gt; but they don‚Äôt. The reason is that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;b&lt;/code&gt; is more precise than &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt; and therefore not equal in value.&lt;/p&gt;

&lt;p&gt;So to compare the magnitude of two &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BigDecimal&lt;/code&gt;s (while ignoring their precision) we need to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a.compareTo(b)&lt;/code&gt;. When both the numbers are same in magnitude &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;compareTo&lt;/code&gt; returns &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So in Kotlin we can create an extension function like this&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;isEqualInMagnitude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Boolean&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then when we need to compare two numbers we can simply do&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;toBigDecimal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;toBigDecimal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;isEqualInMagnitude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Equal in magnitude&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Magnitudes of both numbers don't match&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">If you have two instances of BigDecimal as following</summary></entry><entry><title type="html">Windows Symlink</title><link href="https://varunbarad.com/blog/windows-symlink" rel="alternate" type="text/html" title="Windows Symlink" /><published>2021-07-24T00:00:00+05:30</published><updated>2021-07-24T00:00:00+05:30</updated><id>https://varunbarad.com/blog/windows-symlink</id><content type="html" xml:base="https://varunbarad.com/blog/windows-symlink">&lt;p&gt;&lt;strong&gt;Context:&lt;/strong&gt; Any file appearing to be stored in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SourceDirectory&lt;/code&gt; are actually stored in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DestinationDirectory&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To create a link from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SourceDirectory&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DestinationDirectory&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-batch highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;mklink&lt;/span&gt; /3 &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;full-path-to-SourceDirectory&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;full-path-to-DestinationDirectory&amp;gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Have a great day people üëã&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="tools" /><summary type="html">Context: Any file appearing to be stored in SourceDirectory are actually stored in DestinationDirectory.</summary></entry><entry><title type="html">500 Million, But Not a Single One More</title><link href="https://varunbarad.com/blog/500-million-but-not-a-single-one-more" rel="alternate" type="text/html" title="500 Million, But Not a Single One More" /><published>2021-07-18T00:00:00+05:30</published><updated>2021-07-18T00:00:00+05:30</updated><id>https://varunbarad.com/blog/500-million-but-not-a-single-one-more</id><content type="html" xml:base="https://varunbarad.com/blog/500-million-but-not-a-single-one-more">&lt;p&gt;I found this &lt;strong&gt;awesome&lt;/strong&gt; piece of writing a few months ago on the website &lt;a href=&quot;https://blog.jaibot.com/500-million-but-not-a-single-one-more/&quot;&gt;Almost No One is Evil. Almost Everything is Broken.&lt;/a&gt; and thought of recording a read-through. This is my first go at trying voice-overs. Hope you have fun üôÇ&lt;/p&gt;

&lt;audio controls=&quot;&quot; src=&quot;../assets/audio/posts/500-million-but-not-a-single-one-more/500-million-but-not-a-single-one-more.mp3&quot;&gt;
    Your browser does not support the &lt;code&gt;audio&lt;/code&gt; element.
&lt;/audio&gt;

&lt;p&gt;We will never know their names.&lt;/p&gt;

&lt;p&gt;The first victim could not have been recorded, for there was no written language to record it. They were someone‚Äôs daughter, or son, and someone‚Äôs friend, and they were loved by those around them. And they were in pain, covered in rashes, confused, scared, not knowing why this was happening to them or what they could do about it ‚Äì victim of a mad, inhuman god. There was nothing to be done ‚Äì humanity was not strong enough, not aware enough, not knowledgeable enough, to fight back against a monster that could not be seen.&lt;/p&gt;

&lt;p&gt;It was in Ancient Egypt, where it attacked slave and pharaoh alike. In Rome, it effortlessly decimated armies. It killed in Syria. It killed in Moscow.  In India, five million dead. It killed a thousand Europeans every day in the 18th century. It killed more than &lt;em&gt;fifty million&lt;/em&gt; Native Americans. From the Peloponnesian War to the Civil War, it slew more soldiers and civilians than any weapon, any soldier, any army (Not that this stopped the most foolish and empty souls from attempting to harness the demon as a weapon against their enemies).&lt;/p&gt;

&lt;p&gt;Cultures grew and faltered, and it remained. Empires rose and fell, and it thrived. Ideologies waxed and waned, but it did not care. Kill. Maim. Spread. An ancient, mad god, hidden from view, that could not be fought, could not be confronted, could not even be comprehended. Not the only one of its kind, but the most devastating.&lt;/p&gt;

&lt;p&gt;For a long time, there was no hope ‚Äì only the bitter, hollow endurance of survivors.&lt;/p&gt;

&lt;p&gt;In China, in the 10th century, humanity began to fight back.&lt;/p&gt;

&lt;p&gt;It was observed that survivors of the mad god‚Äôs curse would never be touched again: they had taken a portion of that power into themselves, and were so protected from it. Not only that, but this power could be shared by consuming a remnant of the wounds. There was a price, for you could not take the god‚Äôs power without first defeating it ‚Äì but a smaller battle, on humanity‚Äôs terms. By the 16th century, the technique spread, to India, across Asia, the Ottoman Empire and, in the 18th century, Europe. In 1796, a more powerful technique was discovered by &lt;a href=&quot;http://en.wikipedia.org/wiki/Edward_Jenner&quot;&gt;Edward Jenner&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;An idea began to take hold: Perhaps the ancient god could be killed.&lt;/p&gt;

&lt;p&gt;A whisper became a voice; a voice became a call; a call became a battle cry, sweeping across villages, cities, nations. Humanity began to cooperate, spreading the protective power across the globe, dispatching masters of the craft to protect whole populations. People who had once been sworn enemies joined in common cause for this one battle. Governments mandated that all citizens protect themselves, for giving the ancient enemy a single life would put millions in danger.&lt;/p&gt;

&lt;p&gt;And, inch by inch, humanity drove its enemy back. Fewer friends wept; Fewer neighbors were crippled; Fewer parents had to bury their children.&lt;/p&gt;

&lt;p&gt;At the dawn of the 20th century, for the first time, humanity banished the enemy from entire regions of the world. Humanity faltered many times in its efforts, but there individuals who never gave up, who fought for the dream of a world where no child or loved one would ever fear the demon ever again. &lt;a href=&quot;http://en.wikipedia.org/wiki/Viktor_Zhdanov&quot;&gt;Viktor Zhdanov&lt;/a&gt;, who called for humanity to unite in a final push against the demon; The great tactician &lt;a href=&quot;http://en.wikipedia.org/wiki/Karel_Ra%C5%A1ka&quot;&gt;Karel Ra≈°ka&lt;/a&gt;, who conceived of a strategy to annihilate the enemy; &lt;a href=&quot;http://en.wikipedia.org/wiki/Donald_Henderson&quot;&gt;Donald Henderson&lt;/a&gt;, who led the efforts of those final days.&lt;/p&gt;

&lt;p&gt;The enemy grew weaker. Millions became thousands, thousands became dozens. And then, when the enemy did strike, scores of humans came forth to defy it, protecting all those whom it might endanger.&lt;/p&gt;

&lt;p&gt;The enemy‚Äôs last attack in the wild was on &lt;a href=&quot;http://en.wikipedia.org/wiki/Ali_Maow_Maalin&quot;&gt;Ali Maow Maalin&lt;/a&gt;, in 1977. For months afterwards, dedicated humans swept the surrounding area, seeking out any last, desperate hiding place where the enemy might yet remain.&lt;/p&gt;

&lt;p&gt;They found none.&lt;/p&gt;

&lt;p&gt;35 years ago, on December 9th, 1979, humanity declared victory.&lt;/p&gt;

&lt;p&gt;This one evil, the horror from beyond memory, the monster that took 500 million people from this world ‚Äì was destroyed.&lt;/p&gt;

&lt;p&gt;You are a member of the species that did that. Never forget what we are capable of, when we band together and declare battle on what is broken in the world.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Smallpox#Eradication&quot;&gt;Happy Smallpox Eradication Day&lt;/a&gt;&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="miscellaneous" /><summary type="html">I found this awesome piece of writing a few months ago on the website Almost No One is Evil. Almost Everything is Broken. and thought of recording a read-through. This is my first go at trying voice-overs. Hope you have fun üôÇ</summary></entry><entry><title type="html">üìù Castle Under Threat</title><link href="https://varunbarad.com/blog/til-castle-under-threat" rel="alternate" type="text/html" title="üìù Castle Under Threat" /><published>2021-06-29T00:00:00+05:30</published><updated>2021-06-29T00:00:00+05:30</updated><id>https://varunbarad.com/blog/til-castle-under-threat</id><content type="html" xml:base="https://varunbarad.com/blog/til-castle-under-threat">&lt;p&gt;In one of our chess games at work I learnt that you cannot perform the castle move with King if the blocks where the king has to pass through or end at are under threat from any of opponent‚Äôs piece(s).&lt;/p&gt;

&lt;h2 id=&quot;examples&quot;&gt;Examples&lt;/h2&gt;

&lt;p&gt;&lt;img alt=&quot;Midway block threatened by queen&quot; src=&quot;../assets/images/posts/castle-under-threat/threat-midway.png&quot; style=&quot;width: 50%; height: auto;&quot; /&gt;
We cannot castle in this case because one of the midway blocks is threatened by black queen.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;End block threatened by rook&quot; src=&quot;../assets/images/posts/castle-under-threat/threat-end.png&quot; style=&quot;width: 50%; height: auto;&quot; /&gt;
We cannot castle in this case because the square where king would end up is threatened by black rook.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">In one of our chess games at work I learnt that you cannot perform the castle move with King if the blocks where the king has to pass through or end at are under threat from any of opponent‚Äôs piece(s).</summary></entry><entry><title type="html">üìù Ugh fields</title><link href="https://varunbarad.com/blog/til-ugh-fields" rel="alternate" type="text/html" title="üìù Ugh fields" /><published>2021-05-28T00:00:00+05:30</published><updated>2021-05-28T00:00:00+05:30</updated><id>https://varunbarad.com/blog/til-ugh-fields</id><content type="html" xml:base="https://varunbarad.com/blog/til-ugh-fields">&lt;p&gt;I came across this concept the other day called ‚ÄúUgh Fields‚Äù. Basically it points out that there are some/many areas in your life/work which you always flinch away from, they don‚Äôt start out that bad but eventually pavlovian conditioning almost turns them into areas that we can‚Äôt go into.&lt;/p&gt;

&lt;p&gt;Original article link: &lt;a href=&quot;https://www.lesswrong.com/posts/EFQ3F6kmt4WHXRqik/ugh-fields&quot;&gt;https://www.lesswrong.com/posts/EFQ3F6kmt4WHXRqik/ugh-fields&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is one of the few pieces of writing that I consider a must-read for everyone.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">I came across this concept the other day called ‚ÄúUgh Fields‚Äù. Basically it points out that there are some/many areas in your life/work which you always flinch away from, they don‚Äôt start out that bad but eventually pavlovian conditioning almost turns them into areas that we can‚Äôt go into.</summary></entry><entry><title type="html">üìù Opening current terminal command in $EDITOR</title><link href="https://varunbarad.com/blog/til-opening-current-terminal-command-in-editor" rel="alternate" type="text/html" title="üìù Opening current terminal command in $EDITOR" /><published>2021-05-26T00:00:00+05:30</published><updated>2021-05-26T00:00:00+05:30</updated><id>https://varunbarad.com/blog/til-opening-current-terminal-command-in-editor</id><content type="html" xml:base="https://varunbarad.com/blog/til-opening-current-terminal-command-in-editor">&lt;p&gt;If you are working with a long command in your terminal and want to edit parts of it, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl+X&lt;/code&gt; followed by a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl+E&lt;/code&gt; (don‚Äôt lift your finger from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl&lt;/code&gt; between them) will open the command you are currently editing into the program specified in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$EDITOR&lt;/code&gt; environment variable. Tested on zsh and heard that it works on bash too.&lt;/p&gt;

&lt;p&gt;Thanks to my colleague &lt;a href=&quot;https://msfjarvis.dev&quot;&gt;Harsh&lt;/a&gt; for this tip.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">If you are working with a long command in your terminal and want to edit parts of it, Ctrl+X followed by a Ctrl+E (don‚Äôt lift your finger from Ctrl between them) will open the command you are currently editing into the program specified in your $EDITOR environment variable. Tested on zsh and heard that it works on bash too.</summary></entry><entry><title type="html">Cheatsheet - PostgreSQL</title><link href="https://varunbarad.com/blog/cheatsheet-postgresql" rel="alternate" type="text/html" title="Cheatsheet - PostgreSQL" /><published>2021-05-17T00:00:00+05:30</published><updated>2021-05-17T00:00:00+05:30</updated><id>https://varunbarad.com/blog/cheatsheet-postgresql</id><content type="html" xml:base="https://varunbarad.com/blog/cheatsheet-postgresql">&lt;h2 id=&quot;dump-database-to-a-script-sql-file&quot;&gt;Dump database to a script (.sql) file&lt;/h2&gt;

&lt;p&gt;Extract/Dump the database contents to a script (.sql) file&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pg_dump &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; ~/path/to/file.sql &lt;span class=&quot;nv&quot;&gt;$YOUR_DATABASE_URL&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;run-a-script-sql-from-file-on-a-database&quot;&gt;Run a script (.sql) from file on a database&lt;/h2&gt;

&lt;p&gt;Run SQL commands from a file on a database&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;psql &lt;span class=&quot;nv&quot;&gt;$YOUR_DATABASE_URL&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; ~/path/to/file.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;check-whether-there-is-any-row-in-the-table-matching-your-condition&quot;&gt;Check whether there is any row in the table matching your condition&lt;/h2&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your_table&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your_condition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;use-single-quote-inside-a-string&quot;&gt;Use single-quote inside a string&lt;/h2&gt;

&lt;p&gt;Put two single-quotes (‚Äò) wherever you want to use a single-quote inside the string&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;people&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;full_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Travis O&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Connor'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;convert-timestamptz-to-a-timestamp-in-a-particular-timezone&quot;&gt;Convert timestamptz to a timestamp in a particular timezone&lt;/h2&gt;

&lt;p&gt;Assuming &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;created_at&lt;/code&gt; is a column in table &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;people&lt;/code&gt; with type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;timstamptz&lt;/code&gt; and we want to see what those timestamps are in IST (Asia/Kolkata or Asia/Calcutta)&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;created_at&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;zone&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Asia/Kolkata'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shifted&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;people&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;format-timestampdate&quot;&gt;Format timestamp/date&lt;/h2&gt;

&lt;p&gt;Assuming &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;birthdate&lt;/code&gt; is a column in table &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;people&lt;/code&gt; with type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;date&lt;/code&gt; and we want to display those values in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;10 Oct 2021&lt;/code&gt; format&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to_char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;birthdate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'DD Mon YYYY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;people&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Refer to &lt;a href=&quot;https://www.postgresql.org/docs/current/functions-formatting.html&quot;&gt;official docs&lt;/a&gt; for more and/or latest details&lt;/p&gt;

&lt;h2 id=&quot;auto-populate-values-for-created_at-and-updated_at-columns&quot;&gt;Auto-populate values for created_at and updated_at columns&lt;/h2&gt;

&lt;p&gt;We first need to create a function which would update the value of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;updated_at&lt;/code&gt; column every time data in a row changes&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;replace&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update_modified_timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;trigger&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;language&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plpgsql&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$$&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;updated_at&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;current_timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then we need to provide default values to columns when defining table schema&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;people&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;integer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;primary&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;created_at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timestamptz&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;updated_at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timestamptz&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At last we need to add a trigger to each table where we want to auto-update the value of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;updated_at&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;trigger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update_timestamp&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;before&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;people&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;execute&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;procedure&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update_modified_timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;generate-list-of-months-between-two-dates&quot;&gt;Generate list of months between two dates&lt;/h2&gt;

&lt;p&gt;This will give us a list of dates for the first day of every month that falls between &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;earlier_date&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;later_date&lt;/code&gt;. Taking the example of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;earlier_date = '2022-11-16'&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;later_date = '2023-02-14'&lt;/code&gt;, it will return November 2022, December 2022, January 2023 and February 2023.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generate_series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;cast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_trunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;earlier_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;cast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_trunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;later_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1 month'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;count-rows-that-satisfy-a-condition&quot;&gt;Count rows that satisfy a condition&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;payments&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;customer_id&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;payment_id&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;payment_amount&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;payment_date&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;If we want to count the number of payments where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;payment_amount&lt;/code&gt; is greater than 100 then we use a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;filter&lt;/code&gt; on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;count&lt;/code&gt; aggregate:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customer_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;payment_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payment_amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payments&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customer_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;get-first-entry-in-each-group&quot;&gt;Get first entry in each group&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;payments&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;customer_id&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;payment_id&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;payment_amount&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;payment_date&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;If we want to see the payment_id of the highest amount of payment for each customer_id then we need to do:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;distinct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customer_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;first_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;payment_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;over&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;partition&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customer_id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payment_amount&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;desc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;highest_payment_id&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payments&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that you don‚Äôt need to specify a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;group by&lt;/code&gt; clause for the overall query in this case.&lt;/p&gt;

&lt;h2 id=&quot;map-an-array-of-ids-to-matching-data-from-another-table&quot;&gt;Map an array of ids to matching data from another table&lt;/h2&gt;

&lt;p&gt;If we have two tables, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;people&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;groups&lt;/code&gt;, where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;people&lt;/code&gt; has a column &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;group_ids&lt;/code&gt; which is an array of ids from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;groups&lt;/code&gt;, we can map the array of ids to the matching name from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;groups&lt;/code&gt; using the following query:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;coalesce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;group_names&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;people&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;inner&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;join&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string_agg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;', '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person_id&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity_groups&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;inner&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;join&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unnest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group_ids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;group_id&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;people&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It is a three-step process, listed inside to out (i.e. the innermost query is executed first):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Convert the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;group_ids&lt;/code&gt; array from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;people&lt;/code&gt; into a table of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;person_id&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;group_id&lt;/code&gt; using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unnest&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Join the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;group_id&lt;/code&gt; with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;groups&lt;/code&gt; to get the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;name&lt;/code&gt; of the group&lt;/li&gt;
  &lt;li&gt;Aggregate the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;name&lt;/code&gt; of the groups into a comma-separated string using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string_agg&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;make-a-column-unique-after-creating-it&quot;&gt;Make a column unique after creating it&lt;/h2&gt;

&lt;p&gt;If we have a table &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;people&lt;/code&gt; with a column &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;email&lt;/code&gt; and we want to make it unique after we have already added it to table:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;alter&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;people&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unique&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;make-a-colum-non-nullable-after-creating-it&quot;&gt;Make a colum non-nullable after creating it&lt;/h2&gt;

&lt;p&gt;If we have a table &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;people&lt;/code&gt; with a column &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;email&lt;/code&gt; and we want to make it non-nullable after we have already added it to table:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;alter&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;people&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alter&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;column&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Have a great day people üëã&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="cheat-sheet" /><summary type="html">Dump database to a script (.sql) file</summary></entry><entry><title type="html">Tips when building a PC</title><link href="https://varunbarad.com/blog/tips-when-building-a-pc" rel="alternate" type="text/html" title="Tips when building a PC" /><published>2021-05-15T00:00:00+05:30</published><updated>2021-05-15T00:00:00+05:30</updated><id>https://varunbarad.com/blog/tips-when-building-a-pc</id><content type="html" xml:base="https://varunbarad.com/blog/tips-when-building-a-pc">&lt;p&gt;One of my friend emailed me today saying that he wants to build a RISC-V PC and was asking for any tips/advice on the basic dos and don‚Äôts and suggested that I &lt;em&gt;can&lt;/em&gt; make it into a blog-post. So following the &lt;a href=&quot;https://www.hanselman.com/blog/do-they-deserve-the-gift-of-your-keystrokes&quot;&gt;conserving the keystrokes rule&lt;/a&gt; from &lt;a href=&quot;https://www.hanselman.com/&quot;&gt;Scott Hanselman&lt;/a&gt; here is the blog post that generated out of it.&lt;/p&gt;

&lt;p&gt;Disclaimer: I have only built one PC so far and it was back in 2013. Haven‚Äôt used that one since more than 3 years now but it is still working rock solid for my dad and hasn‚Äôt needed a single upgrade ever.&lt;/p&gt;

&lt;p&gt;One of my main philosophies regarding electronics is to buy the best (no-compromises) stuff you can afford at any given time. This pushes back the compulsory-upgrade time much more in future. But always keep your budget in mind. I have no idea about RISC-V, the only PC I ever built was on the x86-64 architecture. Completely uncharted territory there. But these are the points I will take care of when building a PC myself these days.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The most important tip in here is, check that all your components are compatible with each other. Double check it, because this can bite very badly down the road if you find out later that you have a CPU compatible with LGA-1150 socket while your motherboard has a LGA-1155 socket (numbers generated randomly from mind for example‚Äôs sake).&lt;/li&gt;
  &lt;li&gt;Build only if it is completely essential. Due to silicone chip shortages (this was written in May 2021), prices are skyrocketing way beyond what they should be. The better performers in the market these days are generally a combination of AMD Ryzen CPU with an Nvidia Graphics Card (I suggest going atleast for 30XX series). And both of them are not available for any fair price. I‚Äôve heard that Intel iX series processors are available for reasonable prices (they don‚Äôt perform as well as the AMD Ryzens though) so you may go with those if you absolutely need to.&lt;/li&gt;
  &lt;li&gt;Make sure that you have a display output. If you are buying a discrete graphics card then all is fine, but if not then make sure that both your processor and your motherboard support onboard display output. Sometimes the motherboard might have a display out but the processor doesn‚Äôt support it or other times the processor might support inbuilt graphics but the motherboard might not have any display output port. Currently the AMD Ryzen line-up processors don‚Äôt come with inbuilt graphics so they necessarily need an external graphics card, even a pretty old graphics card should work if the only load on it is going to be regular graphics and no heavy gaming/computation or stuff like that. Intel iX series processors do come with onboard graphics, so that is another point in favor of Intel right now.&lt;/li&gt;
  &lt;li&gt;4 RAM slots are better than 2 and 2 are better than 1 (but I don‚Äôt think any motherboards come with a single RAM slot). Lesson here is, leave room for upgradability in future, and RAM is probably the cheapest thing you can upgrade. Another distinct reason for more slots in case of RAM is that it gives better performance when using say 2x8 GB RAM sticks than a single 16 GB stick because it gives more parallel channels for it to talk with your CPU, therefore better performance.&lt;/li&gt;
  &lt;li&gt;Speaking of upgradability, buy a power-supply that is 25-50% above your needs (in terms of power output). So if you think your system would be fine with a 450W power supply, go for a 600W unit. This way when you upgrade your components in future or decide to add more components, you will be covered. Also you don‚Äôt want to go for an off-brand or a shady local brand for your power supply, this is a unit which literally has the power to fry your other components if not built correctly. Some reputable brands I can name off hand are: Cooler Master, Seasonic and Corsair.&lt;/li&gt;
  &lt;li&gt;Check components compatibility with each other. I mentioned this at the beginning and am still mentioning it again, it is that important.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That‚Äôs it. Those are all the tips/advice I have right now for someone looking to build a computer for themselves. I will keep adding things here as and when I think appropriate.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="miscellaneous" /><summary type="html">One of my friend emailed me today saying that he wants to build a RISC-V PC and was asking for any tips/advice on the basic dos and don‚Äôts and suggested that I can make it into a blog-post. So following the conserving the keystrokes rule from Scott Hanselman here is the blog post that generated out of it.</summary></entry><entry><title type="html">üìù Google gives refresh token only once</title><link href="https://varunbarad.com/blog/til-google-gives-refresh-token-only-once" rel="alternate" type="text/html" title="üìù Google gives refresh token only once" /><published>2021-05-06T00:00:00+05:30</published><updated>2021-05-06T00:00:00+05:30</updated><id>https://varunbarad.com/blog/til-google-gives-refresh-token-only-once</id><content type="html" xml:base="https://varunbarad.com/blog/til-google-gives-refresh-token-only-once">&lt;p&gt;According to Google‚Äôs &lt;a href=&quot;https://developers.google.com/identity/protocols/oauth2/web-server&quot;&gt;docs on OAuth&lt;/a&gt;, the server application gets &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;refresh_token&lt;/code&gt; from Google (on exchanging the auth code) only if the original redirection request to Google contains the param &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;access_type&lt;/code&gt; with value &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;offline&lt;/code&gt; (&lt;a href=&quot;https://developers.google.com/identity/protocols/oauth2/web-server#creatingclient&quot;&gt;documentation link&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;But this is only for the first time a user authenticates with your app. If for some reason your flow takes the user through the authentication flow again without having changed anything (user‚Äôs Google account, permissions required, etc. Haven‚Äôt tested with changed permissions yet but definitely happens when permissions also remain the same) then when you exchange auth code for tokens from Google, the Google servers don‚Äôt return the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;refresh_token&lt;/code&gt; this second time.&lt;/p&gt;

&lt;p&gt;This is based on anecdotal observation, and I couldn‚Äôt find any such mention in their documentation. An &lt;a href=&quot;https://stackoverflow.com/questions/10827920/not-receiving-google-oauth-refresh-token/10857806#10857806&quot;&gt;answer on Stack Overflow&lt;/a&gt; confirmed for me that it wasn‚Äôt something misconfigured on my end üòÖ.&lt;/p&gt;

&lt;p&gt;A ‚Äúsolution‚Äù for this could be to always specify the param &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;prompt&lt;/code&gt; with a value of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;consent&lt;/code&gt; in the original redirect request where we send user to Google‚Äôs flow.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">According to Google‚Äôs docs on OAuth, the server application gets refresh_token from Google (on exchanging the auth code) only if the original redirection request to Google contains the param access_type with value offline (documentation link).</summary></entry><entry><title type="html">üìù JavaScript can ‚Äúthrow‚Äù the table</title><link href="https://varunbarad.com/blog/til-javascript-can-throw-the-table" rel="alternate" type="text/html" title="üìù JavaScript can ‚Äúthrow‚Äù the table" /><published>2021-05-04T12:00:00+05:30</published><updated>2021-05-04T12:00:00+05:30</updated><id>https://varunbarad.com/blog/til-javascript-can-throw-the-table</id><content type="html" xml:base="https://varunbarad.com/blog/til-javascript-can-throw-the-table">&lt;p&gt;Since JavaScript does not have the concept of a throwable type. Therefore you can throw anything in JavaScript.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;the table&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;stable table&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The above code would produce &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;the table&lt;/code&gt; in console logs and not &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stable table&lt;/code&gt;.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">Since JavaScript does not have the concept of a throwable type. Therefore you can throw anything in JavaScript.</summary></entry><entry><title type="html">üìù CSS support for browser dark-mode preference</title><link href="https://varunbarad.com/blog/til-css-support-browser-dark-mode-preference" rel="alternate" type="text/html" title="üìù CSS support for browser dark-mode preference" /><published>2021-05-04T00:00:00+05:30</published><updated>2021-05-04T00:00:00+05:30</updated><id>https://varunbarad.com/blog/til-css-support-browser-dark-mode-preference</id><content type="html" xml:base="https://varunbarad.com/blog/til-css-support-browser-dark-mode-preference">&lt;p&gt;There is a simple CSS media query with which we can specify styles only for dark mode or light mode.&lt;/p&gt;

&lt;p&gt;For specifying CSS when dark mode preference is selected.&lt;/p&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prefers-color-scheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For specifying CSS when light mode preference is selected or no active preference has been expressed.&lt;/p&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prefers-color-scheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;light&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Original posting: &lt;a href=&quot;https://twitter.com/varun_barad/status/1190613832575725571&quot;&gt;https://twitter.com/varun_barad/status/1190613832575725571&lt;/a&gt;&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="til" /><summary type="html">There is a simple CSS media query with which we can specify styles only for dark mode or light mode.</summary></entry><entry><title type="html">Why you should own your email address?</title><link href="https://varunbarad.com/blog/why-you-should-own-your-email-address" rel="alternate" type="text/html" title="Why you should own your email address?" /><published>2021-03-14T00:00:00+05:30</published><updated>2021-03-14T00:00:00+05:30</updated><id>https://varunbarad.com/blog/why-you-should-own-your-email-address</id><content type="html" xml:base="https://varunbarad.com/blog/why-you-should-own-your-email-address">&lt;p&gt;This week I was talking to a friend and the discussion somehow turned onto emails. Then I started explaining why I think that one should have their email address on their own domain instead of having a generic ‚Äúsome.random.thing@gmail.com‚Äù or another such provider‚Äôs email address.&lt;/p&gt;

&lt;p&gt;This is built on the backdrop that your email address is basically your identity around the internet and much of your communication and life is now tied into it. The major (and probably the only) reason is this allows you the flexibility if one day that email provider shuts down their business, or the other case (which is way more likely) of your account somehow getting flagged as not following their terms of service (TOS) and them blocking your account.&lt;/p&gt;

&lt;p&gt;Just imagine if you are using ‚Äúsome.random.thing@gmail.com‚Äù and due to some weird reason &lt;strong&gt;The Algorithm&lt;/strong&gt; decides that you have violated their TOS and blocks you off. Depending on providers it is &lt;em&gt;probably&lt;/em&gt; possible for you to somehow get that misunderstanding resolved and you regaining access to your account. But if that does not happen then you need to register a new email account and then make sure to update the new email address across &lt;em&gt;all&lt;/em&gt; the account over the internet. There are even some services which don‚Äôt make you set a password when you setup account with them but instead email you an OTP every time you want to login. Good luck with those ones.&lt;/p&gt;

&lt;p&gt;If instead your email address is something like ‚Äúblah@yourdomain.xyz‚Äù and it is hosted with say FastMail and they decide that you have violated their TOS then you can just move from them and setup an account with PurelyMail and you will still keep receiving emails on ‚Äúblah@yourdomain.xyz‚Äù&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open offer:&lt;/strong&gt; If I know you and you want to setup your email on your domain then reach out to me and I will guide you through the whole process üôÇ.&lt;/p&gt;

&lt;p&gt;That‚Äôs it for today, I will update this in future if I happen upon other crucial reasons. In the meantime if you want to discuss this or anything else you can reach out to me on Twitter &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt; or &lt;a href=&quot;mailto:contact@varunbarad.com&quot;&gt;via email&lt;/a&gt;.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="miscellaneous" /><summary type="html">This week I was talking to a friend and the discussion somehow turned onto emails. Then I started explaining why I think that one should have their email address on their own domain instead of having a generic ‚Äúsome.random.thing@gmail.com‚Äù or another such provider‚Äôs email address.</summary></entry><entry><title type="html">Challenge Update: Two and a Quarter Books</title><link href="https://varunbarad.com/blog/challenge-update-two-and-a-quarter-books" rel="alternate" type="text/html" title="Challenge Update: Two and a Quarter Books" /><published>2021-01-10T00:00:00+05:30</published><updated>2021-01-10T00:00:00+05:30</updated><id>https://varunbarad.com/blog/challenge-update-two-and-a-quarter-books</id><content type="html" xml:base="https://varunbarad.com/blog/challenge-update-two-and-a-quarter-books">&lt;p&gt;So finally I couldn‚Äôt finish the list of books from last post before the year ended. I happened to change a book midway and then the last couple of weeks of the year brought with them a huge adventure at work which took up much more of my time and energy than what I could have anticipated beforehand. So here are some thoughts on what I could read before the year ended.&lt;/p&gt;

&lt;h2 id=&quot;a-caribbean-mystery-author-agatha-christie&quot;&gt;A Caribbean Mystery (Author: Agatha Christie)&lt;/h2&gt;

&lt;p&gt;I picked up this book knowing that Agatha Christie had a detective character in her books named Hercule Poirot. So I was surprised when it became clear to me that the there was no such character in this story. Instead Miss Marple, another famous character of Agatha Christie which I just did not know about, was the protagonist in this crime thriller. And it came as a nice fresh breeze. There was a very stark difference between stratagems that were employed by Miss Marple instead of the ones that I normally saw from Sherlock Holmes. Since Miss Marple has been written an old lady so she was relying mostly on her social skills. This was awesome to read as those skills are something which we can continue to learn from and don‚Äôt need to come across crimes for them to be helpful in our regular life.&lt;/p&gt;

&lt;h2 id=&quot;smarter-faster-better-author-charles-duhigg&quot;&gt;Smarter Faster Better (Author: Charles Duhigg)&lt;/h2&gt;

&lt;p&gt;I continued with this book after I was done with ‚ÄúA Caribbean Mystery‚Äù and I don‚Äôt have much to report here, this is the quarter book from title.&lt;/p&gt;

&lt;h2 id=&quot;treasure-island-robert-louis-stevenson&quot;&gt;Treasure Island (Robert Louis Stevenson)&lt;/h2&gt;

&lt;p&gt;Once I figured out I won‚Äôt be able to get through ‚ÄúSmarter Faster Better‚Äù with the additional adventure going on at work I picked up Treasure Island from Robert Louis Stevenson. This was another one of the classic book I had heard about but never read. The best and worst part of the book for me was its language, the language was so antiquated and the vocabulary so highly relied on nautical terms that I had to understand the pages as it was nigh impossible for me to understand lines. All in all, I was able to piece together what happened in the story but it is completely possible that I might have completely misunderstood some particular part of the narration.&lt;/p&gt;

&lt;p&gt;Completing the challenge was a pretty close call as I closed Treasure Island with less than an hour remaining in the year. I somehow managed to truck through more than a third of that book on the last evening of the year.&lt;/p&gt;

&lt;p&gt;I don‚Äôt see myself taking on any more such reading challenge for the time to come. Do check back here in a few days as I intend to post a round-up of all the books and/or stories that I read during the last year.&lt;/p&gt;

&lt;p&gt;Bye for now üëã&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="miscellaneous" /><summary type="html">So finally I couldn‚Äôt finish the list of books from last post before the year ended. I happened to change a book midway and then the last couple of weeks of the year brought with them a huge adventure at work which took up much more of my time and energy than what I could have anticipated beforehand. So here are some thoughts on what I could read before the year ended.</summary></entry><entry><title type="html">2020: Year in review</title><link href="https://varunbarad.com/blog/2020-year-in-review" rel="alternate" type="text/html" title="2020: Year in review" /><published>2021-01-09T00:00:00+05:30</published><updated>2021-01-09T00:00:00+05:30</updated><id>https://varunbarad.com/blog/2020-year-in-review</id><content type="html" xml:base="https://varunbarad.com/blog/2020-year-in-review">&lt;p&gt;This will be the first year in review I have ever written. And what a year I picked to begin üòÖ. It was a year of a lot of change and simultaneously I didn‚Äôt get the change I was most looking forward to. I‚Äôm not willing to go into the dumpster fire this year was overall, but just going to write about my achievements and reflections.&lt;/p&gt;

&lt;h2 id=&quot;finally-landed-a-new-job-after-months-of-searching&quot;&gt;Finally landed a new job after months of searching&lt;/h2&gt;

&lt;p&gt;Is the job good/satisfactory? Am I enjoying working there? Yes, and a resounding YES to both the questions. I joined &lt;a href=&quot;https://obvious.in&quot;&gt;Obvious&lt;/a&gt; right from the beginning of April 2020 and I can say without a doubt that I am working with some of the nicest people on earth. Also each one of them individually is pretty far above the average of what their field has to offer. My job offer was negotiated before this pandemic dropped on humanity and they never went back on the job offer even once the pandemic was acknoledged neither there were any talks of renegotiation.&lt;/p&gt;

&lt;p&gt;This was uncommon (üòâ) to hear when so many of my friends were facing pay-cuts or some were even on the brink of losing their jobs while simultaneously learning to work from home. I was pretty set for WFH since I worked remotely in my last job too. In case you are looking for any design or engineering related work do check out &lt;a href=&quot;https://obvious.in&quot;&gt;Obvious&lt;/a&gt;, we are great at what we do.&lt;/p&gt;

&lt;p&gt;Also made a bunch of new professional friends since I joined Obvious.&lt;/p&gt;

&lt;h2 id=&quot;wrote-21-posts&quot;&gt;Wrote 21 posts&lt;/h2&gt;

&lt;p&gt;It has always been important to me to articulate and share my thoughts, and I mostly use this website to do that. Slowly I have been getting into the habit of doing that more and more frequently. In 2019, I wrote 12 posts on here and 2020 saw it getting almost doubled to 21 posts over the whole year.&lt;/p&gt;

&lt;p&gt;Some of them were just archived versions of the newsletters I sent. I am also very proud of some others as they were fairly technical and needed research and consolidation on my part.&lt;/p&gt;

&lt;h2 id=&quot;completed-my-first-fitness-challenge&quot;&gt;Completed my first fitness challenge&lt;/h2&gt;

&lt;p&gt;In the month of November I took up a challenge of doing 1500 push-ups over the whole month. This was finally the first fitness challenge I took up which did not end up in the Graveyard of Incomplete. There were a few days where I missed that day‚Äôs exercise but I was preparing for it by doing more than the minimum required every day since the start. So I was finally able to finish this in the last week of the month.&lt;/p&gt;

&lt;p&gt;There was a happy side-effect of this that I never expected. I was posting my daily update to our work slack and it turned out that my updates and seeing me keep going at my aim was the motivation that helped push a few others also to keep at their targets. Even if for nothing else than this, I would consider the energy well spent.&lt;/p&gt;

&lt;h2 id=&quot;reading-challenge&quot;&gt;Reading challenge&lt;/h2&gt;

&lt;p&gt;The last time I set a reading challenge for me and was able to see it through was when I decided to read atleast 12 books in the year 2017. This year I happened to visit a Crossword bookstore near the month of October and bought a fresh stack of 8 books. This turned gears in my head that I just had the time to take on a crazy challenge and finish all of them 8 before end of the year (basically 8 books in 8 weeks).&lt;/p&gt;

&lt;p&gt;By the time I finished first one it was clear to me that I won‚Äôt be able to read all 8 of them so I changed my goalposts and finally settled on completing 4 out of those 8 books before January starts. Finally managed that in the nick of time with only an hour or two to spare.&lt;/p&gt;

&lt;h2 id=&quot;androidflutterbackendslack-take-your-pick&quot;&gt;Android/Flutter/Backend/Slack take your pick&lt;/h2&gt;

&lt;p&gt;Before this year I only knew, from how I could understand different systems, that I was a good general engineer and not someone who would be completely out of their depth if dropped in something different from their core skill. This year I have switched so many platforms and hats (all professionally) that I now have proof (projects I can point to) which assures me that I &lt;em&gt;am&lt;/em&gt; a good engineer and can adapt to fields where I lack previous experience.&lt;/p&gt;

&lt;h2 id=&quot;participated-in-a-hackathon&quot;&gt;Participated in a hackathon&lt;/h2&gt;

&lt;p&gt;This was also the year where I ended up in a hackathon for the first time. And what a way to begin the hackathon experience, I entered as a mentor. My favorite moment during the hackathon was when I was helping a student with something and just happened to ask them since when they had been learning Flutter. They answered, ‚ÄúOh I‚Äôve only started this since April.‚Äù That moment was dear to me because April was the month &lt;em&gt;I myself&lt;/em&gt; started taking Flutter seriously üòÖ.&lt;/p&gt;

&lt;h2 id=&quot;got-more-in-touch-with-friends&quot;&gt;Got more in touch with friends&lt;/h2&gt;

&lt;p&gt;Most of my friends live in different cities and we didn‚Äôt used to talk much but when the lockdown started a couple of us took the initiative and started having weekly group video calls to keep in touch with everyone. Glad to say that it is still ongoing.&lt;/p&gt;

&lt;h2 id=&quot;thats-all-folks&quot;&gt;That‚Äôs all folks&lt;/h2&gt;

&lt;p&gt;And that is what I remember happening in the past year in my life. Have I forgotten something, do you think this could have been written better. All suggestions are welcome via &lt;a href=&quot;mailto:contact@varunbarad.com&quot;&gt;email&lt;/a&gt; or Twitter &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="miscellaneous" /><summary type="html">This will be the first year in review I have ever written. And what a year I picked to begin üòÖ. It was a year of a lot of change and simultaneously I didn‚Äôt get the change I was most looking forward to. I‚Äôm not willing to go into the dumpster fire this year was overall, but just going to write about my achievements and reflections.</summary></entry><entry><title type="html">Java convert LocalDateTime to Instant using ZoneId</title><link href="https://varunbarad.com/blog/java-convert-localdatetime-to-instant-using-zoneid" rel="alternate" type="text/html" title="Java convert LocalDateTime to Instant using ZoneId" /><published>2020-12-14T00:00:00+05:30</published><updated>2020-12-14T00:00:00+05:30</updated><id>https://varunbarad.com/blog/java-convert-localdatetime-to-instant-using-zoneid</id><content type="html" xml:base="https://varunbarad.com/blog/java-convert-localdatetime-to-instant-using-zoneid">&lt;p&gt;Last week I was working on something which required me to convert &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LocalDateTime&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Instant&lt;/code&gt;. The direct conversion APIs that are available needed an instance of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ZoneOffset&lt;/code&gt; to perform the conversion. Catch was that I had &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ZoneId&lt;/code&gt; and not &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ZoneOffset&lt;/code&gt; there was a tiny round-about way to do so.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Convert &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LocalDateTime&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ZonedDateTime&lt;/code&gt; using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ZoneId&lt;/code&gt; : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localDateTime.atZone(zoneId)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Convert &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ZonedDateTime&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Instant&lt;/code&gt; : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zonedDateTime.toInstant()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I don‚Äôt know why there isn‚Äôt a native API to convert from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LocalDateTime&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Instant&lt;/code&gt; directly using a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ZoneId&lt;/code&gt;. If you do then I would like to know either via &lt;a href=&quot;mailto:contact@varunbarad.com&quot;&gt;email&lt;/a&gt; or Twitter (&lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;).&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="programming" /><summary type="html">Last week I was working on something which required me to convert LocalDateTime to Instant. The direct conversion APIs that are available needed an instance of ZoneOffset to perform the conversion. Catch was that I had ZoneId and not ZoneOffset there was a tiny round-about way to do so.</summary></entry><entry><title type="html">Cheatsheet - Git</title><link href="https://varunbarad.com/blog/cheatsheet-git" rel="alternate" type="text/html" title="Cheatsheet - Git" /><published>2020-12-07T00:00:00+05:30</published><updated>2020-12-07T00:00:00+05:30</updated><id>https://varunbarad.com/blog/cheatsheet-git</id><content type="html" xml:base="https://varunbarad.com/blog/cheatsheet-git">&lt;p&gt;This is first in my collection of cheat-sheets. This is here as a blog post until I figure out how to have a separate section just for cheat-sheets and not make them show up in posts, and then find time to implement it. Till then here it is and here it will be updated as and when need arises üôÉ&lt;/p&gt;

&lt;h2 id=&quot;show-change-history-of-a-file&quot;&gt;Show change-history of a file&lt;/h2&gt;

&lt;p&gt;History of commits where this file was changed. This only gives the commits where it was changed (not the file-diff for those commits)&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git log &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; &amp;lt;file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;History of commits with file-diff&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git log &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; &amp;lt;file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;History of commits with file-diff tracked across renames&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git log &lt;span class=&quot;nt&quot;&gt;--follow&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; &amp;lt;file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;automatically-rearrange-fixup-commits-to-their-appropriate-positions-when-rebasing&quot;&gt;Automatically rearrange fixup commits to their appropriate positions when rebasing&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git rebase &lt;span class=&quot;nt&quot;&gt;--interactive&lt;/span&gt; &amp;lt;commit-hash&amp;gt; &lt;span class=&quot;nt&quot;&gt;--autosquash&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;find-which-files-have-had-the-most-commits&quot;&gt;Find which files have had the most commits&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git log &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-M&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name-only&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'format:'&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$@&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'^$'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;uniq&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BEGIN {print &quot;count\tfile&quot;} {print $1 &quot;\t&quot; $2}'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tail&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;create-an-empty-commit&quot;&gt;Create an empty commit&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git commit &lt;span class=&quot;nt&quot;&gt;--allow-empty&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Commit message goes here&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;list-files-in-a-commit&quot;&gt;List files in a commit&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git show &lt;span class=&quot;nt&quot;&gt;--pretty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name-only&lt;/span&gt; &amp;lt;sha1-commit-hash&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Have a great day people üëã&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="cheat-sheet" /><summary type="html">This is first in my collection of cheat-sheets. This is here as a blog post until I figure out how to have a separate section just for cheat-sheets and not make them show up in posts, and then find time to implement it. Till then here it is and here it will be updated as and when need arises üôÉ</summary></entry><entry><title type="html">Challenge Update: The Adventures of Sherlock Holmes</title><link href="https://varunbarad.com/blog/challenge-update-the-adventures-of-sherlock-holmes" rel="alternate" type="text/html" title="Challenge Update: The Adventures of Sherlock Holmes" /><published>2020-12-06T00:00:00+05:30</published><updated>2020-12-06T00:00:00+05:30</updated><id>https://varunbarad.com/blog/challenge-update-the-adventures-of-sherlock-holmes</id><content type="html" xml:base="https://varunbarad.com/blog/challenge-update-the-adventures-of-sherlock-holmes">&lt;p&gt;Today I finished the second book for my end of year reading challenge. The Adventure of Sherlock Holmes was a book which I had read previously, but this was probably the first time I was reading it in paperback format. I could remember some stories from my previous reading and would observe the clues alongside Mr Holmes before he explained it to Dr Watson. Then there were others where I would be just as blind as my first read through of the story (in the past) and the bulb would only light up when Holmes gave an explanation as to how he reached to his deductions.&lt;/p&gt;

&lt;p&gt;I still feel as if I am lagging behind in the challenge but there is always hope, and I do hope that I will be completing the remaining two books before the year ends. Or if not by then, then definitely on the first weekend of the new year.&lt;/p&gt;

&lt;p&gt;My progress now looks like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Around the World in 80 Days (Completed)&lt;/li&gt;
  &lt;li&gt;The Adventures of Sherlock Holmes (Completed)&lt;/li&gt;
  &lt;li&gt;Smarter Faster Better (Somewhere between 15-20% progress in this one)&lt;/li&gt;
  &lt;li&gt;A Caribbean Mystery&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Will keep you folks posted on how things progress from here. Bye for now üëã&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="miscellaneous" /><summary type="html">Today I finished the second book for my end of year reading challenge. The Adventure of Sherlock Holmes was a book which I had read previously, but this was probably the first time I was reading it in paperback format. I could remember some stories from my previous reading and would observe the clues alongside Mr Holmes before he explained it to Dr Watson. Then there were others where I would be just as blind as my first read through of the story (in the past) and the bulb would only light up when Holmes gave an explanation as to how he reached to his deductions.</summary></entry><entry><title type="html">Achievement Unlocked: Finished my first exercise challenge</title><link href="https://varunbarad.com/blog/achievement-unlocked-first-exercise-challenge" rel="alternate" type="text/html" title="Achievement Unlocked: Finished my first exercise challenge" /><published>2020-11-29T00:00:00+05:30</published><updated>2020-11-29T00:00:00+05:30</updated><id>https://varunbarad.com/blog/achievement-unlocked-first-exercise-challenge</id><content type="html" xml:base="https://varunbarad.com/blog/achievement-unlocked-first-exercise-challenge">&lt;p&gt;People who know me know that I care about my physical health, and due to that I have taken on numerous fitness challenges in the past to gamify my exercises and to keep myself consistent. But alas most of them have been abandoned midway (if not on exactly the second day).&lt;/p&gt;

&lt;p&gt;This time it was different, the challenge started this time with someone at my work mentioning that we should try and do fitness challenges in November as it is a month of many festivals and sweets in India. We each decided to make our own challenges and so I decided to do a total of 1500 push-ups in the month of November. That turns out to be 50 push-ups per day for 30 days.&lt;/p&gt;

&lt;p&gt;The key difference this time with the challenge was that I was posting daily updates of my progress on our company‚Äôs Slack workspace. This kept me accountable in a way that I couldn‚Äôt easily afford to not exercise some day because then my colleagues would ask me as to why there was no update.&lt;/p&gt;

&lt;p&gt;For me, the 50 push-ups per day wasn‚Äôt the challenging part, I could easily manage that. The challenge was to stick daily to it and thus complete the 1500 in November. I anticipated that despite my best efforts there will be days where I can‚Äôt manage to do the day‚Äôs 50 (or I just might forget sometimes). Therefore I decided that the least I have to do per day will be 60 push-ups, so as to generate some slack for future me. And I allowed myself to do 50 on a day only if that does not bring down the average till then to 50 or less.&lt;/p&gt;

&lt;p&gt;As I anticipated, there were a few hiccups where twice I could not manage to exercise for 2 days in a row. The first time it happened, it also brought down my average till then to quite below 50 and then I had to climb back from there to get on my regular track (&lt;em&gt;cue hero‚Äôs journey music&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Finally after everything I managed to complete the last of the 1500 push-ups this Friday (3 days earlier than deadline). I also ended up setting a couple of personal-records along the way.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;For the first time I did 100 push-ups in a single workout.&lt;/li&gt;
  &lt;li&gt;For the first time I did 40 push-ups in a single set (previous best was ~25).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am now thinking of what to challenge myself with in December. If you folks have any ideas or challenges then shoot them my way via &lt;a href=&quot;mailto:contact@varunbarad.com&quot;&gt;email&lt;/a&gt; or Twitter &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="fitness" /><category term="personal-growth" /><summary type="html">People who know me know that I care about my physical health, and due to that I have taken on numerous fitness challenges in the past to gamify my exercises and to keep myself consistent. But alas most of them have been abandoned midway (if not on exactly the second day).</summary></entry><entry><title type="html">Challenge Update: Around the World in 80 Days</title><link href="https://varunbarad.com/blog/challenge-update-around-the-world-in-80-days" rel="alternate" type="text/html" title="Challenge Update: Around the World in 80 Days" /><published>2020-11-17T00:00:00+05:30</published><updated>2020-11-17T00:00:00+05:30</updated><id>https://varunbarad.com/blog/challenge-update-around-the-world-in-80-days</id><content type="html" xml:base="https://varunbarad.com/blog/challenge-update-around-the-world-in-80-days">&lt;p&gt;So I finished my first book for the challenge last night. Around the World in 80 Days was definitely a fun read as the story progressed. I couldn‚Äôt enjoy it properly from the start because I was constantly comparing it both to the movie and to other suspense adventure stories (but there was no suspense in a way here as I knew that they do end up completing the journey in time).&lt;/p&gt;

&lt;p&gt;One thing I have taken from this 2 weeks‚Äô experience is that I am cutting my book numbers for the challenge by half. Otherwise it would just be unnecessarily stressful to juggle this challenge along with all other responsibilities.&lt;/p&gt;

&lt;p&gt;So now I only intend to finish these 4 books before the year ends:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Around the World in 80 Days (Already completed)&lt;/li&gt;
  &lt;li&gt;Smarter Faster Better (Somewhere between 15-20% progress in this one)&lt;/li&gt;
  &lt;li&gt;The Adventures of Sherlock Holmes&lt;/li&gt;
  &lt;li&gt;A Caribbean Mystery&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Will keep you folks posted on how things progress from here. Bye for now üëã&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="miscellaneous" /><summary type="html">So I finished my first book for the challenge last night. Around the World in 80 Days was definitely a fun read as the story progressed. I couldn‚Äôt enjoy it properly from the start because I was constantly comparing it both to the movie and to other suspense adventure stories (but there was no suspense in a way here as I knew that they do end up completing the journey in time).</summary></entry><entry><title type="html">Postel‚Äôs Law</title><link href="https://varunbarad.com/blog/postels-law" rel="alternate" type="text/html" title="Postel‚Äôs Law" /><published>2020-11-07T00:00:00+05:30</published><updated>2020-11-07T00:00:00+05:30</updated><id>https://varunbarad.com/blog/postels-law</id><content type="html" xml:base="https://varunbarad.com/blog/postels-law">&lt;p&gt;This week I learned about a software principle that aims to make developer‚Äôs lives easier. It even seems benevolent in the way that it does not necessarily help the person who tries to follow it, it rather helps the person who has to integrate with the aforementioned person‚Äôs code.&lt;/p&gt;

&lt;p&gt;The Postel‚Äôs Law (more actually a guideline) was formulated by Jon Postel (an early pioneer of the Internet). It is also known as Robustness Principle.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Be liberal in what you accept, and conservative in what you send.&lt;/p&gt;

  &lt;p&gt;Jon Postel&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When I thought a bit about the statement and its implications, it struck me that following this principle makes the developer‚Äôs (who tries to follow this) life harder as they have to write extra code that handles all the different kinds of things that they choose to accept as input, and then have to streamline that data into tighter output. But this simplifies other peoples‚Äô work who build on top of this work.&lt;/p&gt;

&lt;p&gt;Then the next connection I made from that was that as more and more people try to follow this principle they decrease the entropy of the overall system. Side-note: Entropy in physics roughly is the measure of disorder in a system.&lt;/p&gt;

&lt;h3 id=&quot;credits-and-references&quot;&gt;Credits and references&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/gonsalves_r&quot;&gt;Rahul Gonsalves&lt;/a&gt; mentioned this law when trying to explain how to design user-friendly input fields.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://devopedia.org/postel-s-law&quot;&gt;Explanation of Postel‚Äôs Law on Devopedia&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Robustness_principle&quot;&gt;Robustness principle on Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This was an insightful learning for me, do you have any other connections that you might have made off of this. Please let me know (I really want to hear them) via &lt;a href=&quot;mailto:contact@varunbarad.com&quot;&gt;email&lt;/a&gt; or Twitter (&lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;).&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="programming" /><summary type="html">This week I learned about a software principle that aims to make developer‚Äôs lives easier. It even seems benevolent in the way that it does not necessarily help the person who tries to follow it, it rather helps the person who has to integrate with the aforementioned person‚Äôs code.</summary></entry><entry><title type="html">2020 End of Year Reading Challenge</title><link href="https://varunbarad.com/blog/2020-end-of-year-reading-challenge" rel="alternate" type="text/html" title="2020 End of Year Reading Challenge" /><published>2020-10-31T00:00:00+05:30</published><updated>2020-10-31T00:00:00+05:30</updated><id>https://varunbarad.com/blog/2020-end-of-year-reading-challenge</id><content type="html" xml:base="https://varunbarad.com/blog/2020-end-of-year-reading-challenge">&lt;p&gt;This will be a really short post. I went to a nearby book store this week and bought &lt;em&gt;a few&lt;/em&gt; of books.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Photo of the books I bought&quot; src=&quot;../assets/images/posts/2020-eoy-reading-challenge/books-all.jpeg&quot; style=&quot;width: 50%; height: auto;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A Caribbean Mystery - Agatha Christie&lt;/li&gt;
  &lt;li&gt;Smarter Faster Better - Charles Duhigg&lt;/li&gt;
  &lt;li&gt;The Adventures of Sherlock Holmes - Arthur Conan Doyle&lt;/li&gt;
  &lt;li&gt;The Return of Sherlock Holmes - Arthur Conan Doyle&lt;/li&gt;
  &lt;li&gt;His Last Bow - Arthur Conan Doyle&lt;/li&gt;
  &lt;li&gt;Around the World in 80 Days - Jules Verne&lt;/li&gt;
  &lt;li&gt;Twenty Thousand Leagues Under the Sea - Jules Verne&lt;/li&gt;
  &lt;li&gt;Journey to the Centre of the Earth - Jules Verne&lt;/li&gt;
  &lt;li&gt;Treasure Island - Robert Louis Stevenson&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-challenge&quot;&gt;The Challenge&lt;/h2&gt;

&lt;p&gt;The challenge I have taken is to read all of these books before the end of this year. This is a stretch goal for me (even considering that I have read the Sherlock stories already) taking into account that I probably haven‚Äôt read 8 books during this whole year till now.&lt;/p&gt;

&lt;p&gt;I am excited to see how far I can take this. Will post updates in the coming weeks here, wish me luck ‚úåÔ∏è.&lt;/p&gt;

&lt;p&gt;Want to wish me luck for this challenge or have anything else to discuss, then please get in touch via &lt;a href=&quot;mailto:contact@varunbarad.com&quot;&gt;email&lt;/a&gt; or over at Twitter on &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="miscellaneous" /><summary type="html">This will be a really short post. I went to a nearby book store this week and bought a few of books.</summary></entry><entry><title type="html">Check if your request body is compressed</title><link href="https://varunbarad.com/blog/check-if-your-request-body-is-compressed" rel="alternate" type="text/html" title="Check if your request body is compressed" /><published>2020-10-11T00:00:00+05:30</published><updated>2020-10-11T00:00:00+05:30</updated><id>https://varunbarad.com/blog/check-if-your-request-body-is-compressed</id><content type="html" xml:base="https://varunbarad.com/blog/check-if-your-request-body-is-compressed">&lt;h2 id=&quot;entering-the-maze&quot;&gt;Entering the maze&lt;/h2&gt;

&lt;p&gt;Recently in one of the projects I was trying to make a POST request to an external API. This was my first time using Jersey http client and so when the server responded with an error saying &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;could not find required parameter &quot;code&quot;&lt;/code&gt; I thought there must be something wrong going on with how I was making the request.&lt;/p&gt;

&lt;p&gt;I spent 2 hours on this and even roped in 2 of my senior colleagues into figuring out how to send a simple POST request with a form-encoded request body. We tried all methods listed in the docs. The same way would work with some other API but not with the one we wanted to integrate with.&lt;/p&gt;

&lt;h2 id=&quot;convolutions-by-miscommunication&quot;&gt;Convolutions by miscommunication&lt;/h2&gt;

&lt;p&gt;The most confusing part was that the errors it threw didn‚Äôt make much sense, since even the errors didn‚Äôt align with what we expected them to be. We needed to pass 4 parameters and here‚Äôs what some of the errors we found out were:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Included all 4 parameters. Error: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;could not find required parameter &quot;code&quot;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Supplied only the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;code&lt;/code&gt; parameter. Error: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;illegal arguments&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Started adding all the 4 parameters one-by-one. Error: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;illegal arguments&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;As soon as we reached all 4 parameters. Error: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;could not find required parameter &quot;code&quot;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Removed one of the parameters at random. Error: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;could not find required parameters &quot;code&quot;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Included all 4 parameters but changed the &lt;strong&gt;value&lt;/strong&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;code&lt;/code&gt;. Error: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;illegal arguments&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-ray-of-hope&quot;&gt;The ray of hope&lt;/h2&gt;

&lt;p&gt;This was so bizarre that all 3 of us were confused with the behavior. Then one of the colleagues added a logger to the jersey client and figured out that the request body was getting compressed with gzip. It is a standard practice to compress API responses with gzip but this was the first time I encountered a &lt;strong&gt;request&lt;/strong&gt; body getting compressed.&lt;/p&gt;

&lt;p&gt;We configured jersey to disable gzip compression for requests and finally the API could understand what we were trying to speak to it. Phew.&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;When an API says it can‚Äôt read what you are sending it and you are confident that you are sending it the data as it requested then first thing you should check is whether your request body is getting compressed or not and whether the API supports taking in gzipped requests.&lt;/p&gt;

&lt;p&gt;Found this confusing maze interesting and have something of yours to share (or even if you just wanna talk) then you have my standing invitation to get in touch with me over &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt; on Twitter.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="programming" /><summary type="html">Entering the maze</summary></entry><entry><title type="html">Techniques to Improve Focus</title><link href="https://varunbarad.com/blog/techniques-to-improve-focus" rel="alternate" type="text/html" title="Techniques to Improve Focus" /><published>2020-08-21T00:00:00+05:30</published><updated>2020-08-21T00:00:00+05:30</updated><id>https://varunbarad.com/blog/techniques-to-improve-focus</id><content type="html" xml:base="https://varunbarad.com/blog/techniques-to-improve-focus">&lt;p&gt;Recently I realized that my attention span and ability to focus have drastically reduced over the past 2 years. I initially waved it off as just my brain not being interested in those particular tasks but it became worrisome when I observed similarly high distractability for even stuff that I enjoy(ed). That and the loss of ability (to focus) being an impediment in me achieving my best finally got me to take this seriously. Luckily I also happened to stumble on an &lt;a href=&quot;https://www.buzzsprout.com/1121972/4005569-improving-concentration-influential-books-and-figuring-out-what-to-focus-on-deep-questions&quot;&gt;episode of Dr Cal Newport‚Äôs podcast ‚ÄúDeep Questions‚Äù&lt;/a&gt; where he tackles a similar question from someone else.&lt;/p&gt;

&lt;p&gt;Dr Newport mentions that it is a good idea to train your concentration like an athlete would prepare for their sport. Athletes train themselves in 2 ways to keep in shape. There is the general fitness training which keeps their baseline in good form, and then they train specifically for the sport that they compete in. Similarly we also need to train our focus in 2 ways.&lt;/p&gt;

&lt;p&gt;The general fitness training maps to ‚Äúallow ourselves to be bored‚Äù. You should allow yourselves time where your brain gets bored of the thing it is doing without giving it something else to focus on while doing that task. For example if you are cleaning the dishes, don‚Äôt put on any music or podcast or audiobook in the background to listen to while cleaning the dishes. It is a boring task but allowing yourself to get bored in that way helps in breaking the &lt;a href=&quot;https://en.wikipedia.org/wiki/Classical_conditioning&quot;&gt;pavlovian cycle&lt;/a&gt; that your brain has adapted to: whenever I get bored, that boredom can be cured by some stimulus.&lt;/p&gt;

&lt;p&gt;Now you might ask as to why is it necessary to break that particular cycle? The answer to that is that the work you do on a day to day basis is not always stimulating which will cause you to get bored. If always that our mind gets bored we provide it with some stimulation it will expect similar stimuli while we are trying to work too. Thus distracting us and causing us to lose focus.&lt;/p&gt;

&lt;p&gt;The next part is training specifically for the sport that the athlete competes regularly in. For us it means that we should start small and set periods of time where we try to focus solely on our work. If we get distracted during that time then we don‚Äôt count that session, we gotta reset the timer and start it again.&lt;/p&gt;

&lt;p&gt;The above sounds like a simple set of actions to perform but personal experience dictates that it is so not the case. I found both the parts to be non-trivial. It goes so much against my instincts to let myself be bored. I would try to cram a podcast or a book or an article or atleast some music to rid my brain of the mental silence. Then the second part is equally, if not more, difficult. My focus has so deteriorated that I started by setting a 10 min timer to focus solely on a particular task, &lt;strong&gt;and I still failed&lt;/strong&gt;. I have been working to increase that duration over the past week and finally I can regularly hit the 10 min mark without getting distracted (not a big thing for many people but trust me it feels good).&lt;/p&gt;

&lt;p&gt;Feel free to reach out to me to discuss this or anything else under the stars over &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt; on Twitter.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="personal-growth" /><summary type="html">Recently I realized that my attention span and ability to focus have drastically reduced over the past 2 years. I initially waved it off as just my brain not being interested in those particular tasks but it became worrisome when I observed similarly high distractability for even stuff that I enjoy(ed). That and the loss of ability (to focus) being an impediment in me achieving my best finally got me to take this seriously. Luckily I also happened to stumble on an episode of Dr Cal Newport‚Äôs podcast ‚ÄúDeep Questions‚Äù where he tackles a similar question from someone else.</summary></entry><entry><title type="html">Interesting Stuff - Week 4</title><link href="https://varunbarad.com/blog/interesting-stuff-week-4" rel="alternate" type="text/html" title="Interesting Stuff - Week 4" /><published>2020-07-19T12:00:00+05:30</published><updated>2020-07-19T12:00:00+05:30</updated><id>https://varunbarad.com/blog/interesting-stuff-week-4</id><content type="html" xml:base="https://varunbarad.com/blog/interesting-stuff-week-4">&lt;p&gt;Hi folks, these are the interesting things I found during this week.&lt;/p&gt;

&lt;h2 id=&quot;the-astounding-physics-of-n95-masks&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=eAdanPfQdCA&quot;&gt;The Astounding Physics of N95 Masks&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Before seeing this video I used to think that N95 masks worked by having the gaps between their fibers be so thin that particulate matter could not cross it. But it is so not the case. Even if you don‚Äôt read/see any of the remaining things, still make time to watch this 6 min video. N95 masks are way cooler than I used to think previously.&lt;/p&gt;

&lt;h2 id=&quot;window-swap&quot;&gt;&lt;a href=&quot;https://window-swap.com/&quot;&gt;Window Swap&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Feel cooped up in your own home and bored of seeing the same scene outside your window? Try the above website which lets users submit pictures (or ultra-short videos) of scenes from their windows from around the world. It had a calming effect on me. If you can, do submit the scene from your window too (someone might find that captivating).&lt;/p&gt;

&lt;h2 id=&quot;the-worlds-largest-indoor-waterpark&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=0Sz55gmNUaI&quot;&gt;The World‚Äôs Largest Indoor Waterpark&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Check out the above video if you want to see how the biggest uninterrupted (no support pillars for the roof) indoor space looks like. It is just a cherry on the top that it happens to be a waterpark, of all things. Fun fact: It is so big to have indoor hot-air balloon rides.&lt;/p&gt;

&lt;h2 id=&quot;private-pilot-ground-school&quot;&gt;&lt;a href=&quot;https://ocw.mit.edu/courses/aeronautics-and-astronautics/16-687-private-pilot-ground-school-january-iap-2019/&quot;&gt;Private Pilot Ground School&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;If it is your dream too to someday learn to fly planes then this course offered by MIT might be a good way to cover the ground-school part of flight training. They even called some guest experts for extra sessions. My favorite was the one by Lieutenant Colonel Randy Gordon where he explains F-22 flight controls and his experiences in flying fighter jets (&lt;a href=&quot;https://www.youtube.com/watch?v=Evhrk5tY-Yo&quot;&gt;https://www.youtube.com/watch?v=Evhrk5tY-Yo&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;If you find something interesting and think I should check it out send it over to &lt;a href=&quot;mailto:interesting@varunbarad.com&quot;&gt;interesting@varunbarad.com&lt;/a&gt;&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="interesting" /><summary type="html">Hi folks, these are the interesting things I found during this week.</summary></entry><entry><title type="html">Interesting Stuff - Week 3</title><link href="https://varunbarad.com/blog/interesting-stuff-week-3" rel="alternate" type="text/html" title="Interesting Stuff - Week 3" /><published>2020-07-12T12:00:00+05:30</published><updated>2020-07-12T12:00:00+05:30</updated><id>https://varunbarad.com/blog/interesting-stuff-week-3</id><content type="html" xml:base="https://varunbarad.com/blog/interesting-stuff-week-3">&lt;p&gt;Hi folks, these are the interesting things I found during this week.&lt;/p&gt;

&lt;h2 id=&quot;the-kind-of-long-game-that-can-be-played&quot;&gt;&lt;a href=&quot;https://www.bloomberg.com/news/features/2020-07-01/did-china-steal-canada-s-edge-in-5g-from-nortel&quot;&gt;The kind of long game that can be played&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I am not saying that what is written in this article is morally right, heck it can even be incorrect. But all of us can definitely learn some lessons on the scale of long-term game which can be played.&lt;/p&gt;

&lt;h2 id=&quot;charlie-munger-and-the-pursuit-of-worldly-wisdom&quot;&gt;&lt;a href=&quot;https://fs.blog/2015/09/munger-worldly-wisdom/&quot;&gt;Charlie Munger and the Pursuit of Worldly Wisdom&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I was made aware this week that not everyone is familiar with Charlie Munger. So to correct that, here is a short article on why he is not only one of the best investors in the world, but also one of the best thinkers too.&lt;/p&gt;

&lt;h2 id=&quot;indian-financial-system-code&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Indian_Financial_System_Code&quot;&gt;Indian Financial System Code&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;During some recent work, I had to deal with users inputting IFS code for their account. I wanted to find out if there is any specified pattern for these codes, and that is how I ended up on this simple Wikipedia page for the same.&lt;/p&gt;

&lt;p&gt;PS: I learned that it is to be spoken as ‚ÄúIFS code‚Äù and not as ‚ÄúIFSC code‚Äù.&lt;/p&gt;

&lt;h2 id=&quot;quantum-computer-programming&quot;&gt;&lt;a href=&quot;https://www.sckaiser.com/&quot;&gt;Quantum Computer Programming&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;During one of Twitch raids I came across Twitch office hours session of Dr. Sarah Kaiser. She is an experimental quantum physicist and also works on open-source programs for quantum computers.&lt;/p&gt;

&lt;p&gt;You can find her website at &lt;a href=&quot;https://www.sckaiser.com&quot;&gt;https://www.sckaiser.com&lt;/a&gt; or join her live on Twitch &lt;a href=&quot;https://www.twitch.tv/crazy4pi314&quot;&gt;@crazy4pi314&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-are-highways-designed&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=9XIjqdk69O4&quot;&gt;How are highways designed&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This is an awesome video which shows what all factors are taken into consideration when highways (or more generally any roads) are being designed, what constraints dictate the radius of curve or the angle of a slope.&lt;/p&gt;

&lt;p&gt;If you find something interesting and think I should check it out send it over to &lt;a href=&quot;mailto:interesting@varunbarad.com&quot;&gt;interesting@varunbarad.com&lt;/a&gt;&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="interesting" /><summary type="html">Hi folks, these are the interesting things I found during this week.</summary></entry><entry><title type="html">Interesting Stuff - Week 2</title><link href="https://varunbarad.com/blog/interesting-stuff-week-2" rel="alternate" type="text/html" title="Interesting Stuff - Week 2" /><published>2020-07-05T12:00:00+05:30</published><updated>2020-07-05T12:00:00+05:30</updated><id>https://varunbarad.com/blog/interesting-stuff-week-2</id><content type="html" xml:base="https://varunbarad.com/blog/interesting-stuff-week-2">&lt;p&gt;Hi folks, this is the second edition of my new experiment where I list articles, podcasts, videos or basically anything I found interesting during last week.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=OpoLkMcQh24&quot;&gt;The Baboon That Controlled a Railway for 9 Years&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=9Y9ppMqXwkQ&quot;&gt;Autofocusing reading glasses of the future - Nitish Padmanaban&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://karpathy.github.io/2020/06/11/biohacking-lite/&quot;&gt;Biohacking Lite&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://thomask.sdf.org/blog/2019/11/09/take-care-editing-bash-scripts.html&quot;&gt;Pitfalls in editing a bash script&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you find something interesting and think I should check it out send it over to &lt;a href=&quot;mailto:interesting@varunbarad.com&quot;&gt;interesting@varunbarad.com&lt;/a&gt;&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="interesting" /><summary type="html">Hi folks, this is the second edition of my new experiment where I list articles, podcasts, videos or basically anything I found interesting during last week.</summary></entry><entry><title type="html">Interesting Stuff - Week 1</title><link href="https://varunbarad.com/blog/interesting-stuff-week-1" rel="alternate" type="text/html" title="Interesting Stuff - Week 1" /><published>2020-06-28T12:00:00+05:30</published><updated>2020-06-28T12:00:00+05:30</updated><id>https://varunbarad.com/blog/interesting-stuff-week-1</id><content type="html" xml:base="https://varunbarad.com/blog/interesting-stuff-week-1">&lt;p&gt;Hi fellows, I am starting a new experiment, where I would be listing some articles, podcasts, videos or basically anything I found interesting that week into a post. Here goes the first edition of that.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://fs.blog/2015/09/two-types-of-knowledge&quot;&gt;Max Planck / Chauffeur Knowledge Test&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sklum.github.io/2020/06/14/sleep-hygiene-for-software-engineers.html&quot;&gt;Sleep Hygiene for Software Engineers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nytimes.com/interactive/2020/06/09/magazine/remote-work-covid.html&quot;&gt;Awesome Graphics&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://static01.nyt.com/images/2020/06/14/magazine/14mag-remote/14mag-remote-superJumbo.jpg&quot;&gt;Direct Image Link 1&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://static01.nyt.com/images/2020/06/14/magazine/14mag-remote-02/14mag-remote-02-superJumbo.jpg&quot;&gt;Direct Image Link 2&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you find something interesting and think I should check it out send it over to &lt;a href=&quot;mailto:interesting@varunbarad.com&quot;&gt;interesting@varunbarad.com&lt;/a&gt;&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="interesting" /><summary type="html">Hi fellows, I am starting a new experiment, where I would be listing some articles, podcasts, videos or basically anything I found interesting that week into a post. Here goes the first edition of that.</summary></entry><entry><title type="html">Prevent back navigation to login screen</title><link href="https://varunbarad.com/blog/prevent-back-navigation-to-login-screen" rel="alternate" type="text/html" title="Prevent back navigation to login screen" /><published>2020-06-21T12:00:00+05:30</published><updated>2020-06-21T12:00:00+05:30</updated><id>https://varunbarad.com/blog/prevent-back-navigation-to-login-screen</id><content type="html" xml:base="https://varunbarad.com/blog/prevent-back-navigation-to-login-screen">&lt;p&gt;There is a typical use-case in apps where once the user has logged in, you won‚Äôt want them to return to login screens when they press back. Instead what you want is to close the app itself.&lt;/p&gt;

&lt;p&gt;I have encountered such a situation many times but learnt this week that the path I was following was way suboptimal and had its flaws. I also got introduced to a much cleaner approach of achieving that.&lt;/p&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;

&lt;p&gt;Let us say that our app has 2 activities &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LoginActivity&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DashboardActivity&lt;/code&gt;. We don‚Äôt want anyone to reach &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DashboardActivity&lt;/code&gt; until they haven‚Äôt logged in. And we also want that when user presses back from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DashboardActivity&lt;/code&gt; they exit the app instead of going back to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LoginActivity&lt;/code&gt; (normal behavior of pressing back on an activity is to open the previous activity which opened current activity).&lt;/p&gt;

&lt;h2 id=&quot;what-i-used-to-do&quot;&gt;What I used to do&lt;/h2&gt;

&lt;p&gt;Till now I used to setup &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LoginActivity&lt;/code&gt; such that it won‚Äôt be saved to the back-stack. I used to  set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android:noHistory&lt;/code&gt; flag for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LoginActivity&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AndroidManifest.xml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Atleast I thought that this was just preventing the activity from being placed on back-stack. But what it actually does is tells the system to not maintain any kind of history for instances of this activity class.&lt;/p&gt;

&lt;p&gt;I never realized the problem with this because it worked okay with single-screen login flows (so far I had built only those). The place where this breaks is when you have multiple screens for login implemented via fragments.&lt;/p&gt;

&lt;p&gt;What I started to notice in multi-screen login flow is that once user passes the first screen and then leaves the app (via pressing home-button, thus not actually going back) and come back to it they are brought back to the first fragment in the flow instead of taking them back to the fragment/screen where they left the app.&lt;/p&gt;

&lt;p&gt;The problem here was the android system was completely forgetting everything about the activity as soon as the user left. All it remembered was that this is the activity that user left on and thus when they come back, they have to be shown this activity again.&lt;/p&gt;

&lt;h2 id=&quot;what-is-the-solution-for-this&quot;&gt;What is the solution for this&lt;/h2&gt;

&lt;p&gt;One of my colleague (&lt;a href=&quot;https://twitter.com/sanchita_ag&quot;&gt;Sanchita&lt;/a&gt;) showed me a much better way to do this. This method does not set any flags on any activity thus they keep their natural behavior of resuming user to the fragment that they left on.&lt;/p&gt;

&lt;p&gt;What you want to do is, once the user is logged-in, you provide a couple of flags to the intent that launches the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DashboardActivity&lt;/code&gt;. Those flags tell it to clear the current task and launch our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DashboardActivity&lt;/code&gt; on a new task. This new task won‚Äôt have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LoginActivity&lt;/code&gt; in its back-stack so when user presses back on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DashboardActivity&lt;/code&gt; the app would exit instead of taking them back to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LoginActivity&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This is how the launching code for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DashboardActivity&lt;/code&gt; should look like:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;startDashboardActivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DashboardActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flags&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;FLAG_ACTIVITY_CLEAR_TASK&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;FLAG_ACTIVITY_NEW_TASK&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;startActivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can look at this &lt;a href=&quot;https://stackoverflow.com/a/29565717/4717436&quot;&gt;StackOverflow answer&lt;/a&gt; which explains those flags in much more detail.&lt;/p&gt;

&lt;p&gt;Anyways, this was more as a documentation of my learning than a tutorial so do ask if there was still anything unclear in my explanation.&lt;/p&gt;

&lt;p&gt;Feel free to reach out to me to discuss this or anything else. You can find me on Twitter &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt; or &lt;a href=&quot;mailto:contact@varunbarad.com&quot;&gt;email me&lt;/a&gt;&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="android" /><category term="programming" /><summary type="html">There is a typical use-case in apps where once the user has logged in, you won‚Äôt want them to return to login screens when they press back. Instead what you want is to close the app itself.</summary></entry><entry><title type="html">Foie Gras</title><link href="https://varunbarad.com/blog/foie-gras" rel="alternate" type="text/html" title="Foie Gras" /><published>2020-06-17T12:00:00+05:30</published><updated>2020-06-17T12:00:00+05:30</updated><id>https://varunbarad.com/blog/foie-gras</id><content type="html" xml:base="https://varunbarad.com/blog/foie-gras">&lt;p&gt;I was listening to the podcast &lt;a href=&quot;https://www.iheart.com/podcast/105-stuff-you-should-know-26940277/&quot;&gt;‚ÄúStuff You Should Know‚Äù&lt;/a&gt; and today I got across their minisode on &lt;a href=&quot;https://www.iheart.com/podcast/105-stuff-you-should-know-26940277/episode/short-stuff-foie-gras-63697112/&quot;&gt;‚ÄúFoie Gras‚Äù&lt;/a&gt;. Here‚Äôs my compilation of what I have remembered from them.&lt;/p&gt;

&lt;p&gt;Foie Gras literally translates to ‚Äúfatty liver‚Äù. It is made by force-feeding birds (primarily geese) which makes their liver fatty. This is an adaptation those birds developed which helps them store extra energy for their seasonal migrations.&lt;/p&gt;

&lt;p&gt;At some point in history, humans figured out that livers with extra fat taste quite different (and tasty to some people). So they started force-feeding geese and presented the dish made from their liver to the local kings. This process of preparation was (and still today is) significantly costlier than regular meat and thus made it popular among people of higher social position as something of a status symbol. Civilisation through civilization it somehow reached France where it got the name we know it today with, Foie Gras.&lt;/p&gt;

&lt;p&gt;Now many people are taking a stance against it saying that it is harmful to the birds because their conditions when they are being force-fed are deplorable. Due to such oppositions serving foie gras is on the roadmap to become illegal somewhere around the year 2022 in parts of US. It is already banned in many other countries of the world.&lt;/p&gt;

&lt;p&gt;There have even been people bringing their own point that it is not as harmful to birds as it looks. They say that since birds don‚Äôt share the same tube between oesophagus and trachea, it (apparently) isn‚Äôt as uncomfortable for them to have a pipe shoved down their throat as it is for humans. They even say that birds already have the mechanism in them to handle extra food and being overfed doesn‚Äôt bother them that much, that they are just accelerating the process that the birds would have naturally done.&lt;/p&gt;

&lt;p&gt;I personally believe that humans can do completely fine without resorting to eat extra fatty liver from birds that have been fed beyond their regular capacity. Feel free to reach out to me to discuss this or anything else under the stars over &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt; on Twitter.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="miscellaneous" /><summary type="html">I was listening to the podcast ‚ÄúStuff You Should Know‚Äù and today I got across their minisode on ‚ÄúFoie Gras‚Äù. Here‚Äôs my compilation of what I have remembered from them.</summary></entry><entry><title type="html">Immigration Dead Man‚Äôs Switch</title><link href="https://varunbarad.com/blog/immigration-dead-mans-switch" rel="alternate" type="text/html" title="Immigration Dead Man‚Äôs Switch" /><published>2020-05-16T12:00:00+05:30</published><updated>2020-05-16T12:00:00+05:30</updated><id>https://varunbarad.com/blog/immigration-dead-mans-switch</id><content type="html" xml:base="https://varunbarad.com/blog/immigration-dead-mans-switch">&lt;p&gt;&lt;strong&gt;Necessary disclaimer:&lt;/strong&gt; I am not a lawyer so please don‚Äôt take my statements here on face value, do your own due diligence before pulling off any stunts.&lt;/p&gt;

&lt;p&gt;When passing through customs check, the customs agents have the right to ask for your fingerprint or any other biometrics but they don‚Äôt have the right to ask you to enter your password/pin-code.&lt;/p&gt;

&lt;p&gt;So there is an option in both iPhone and Android, check for iPhone but in Android it is called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lockdown Mode&lt;/code&gt;. This makes it so that your phone can only be opened with the designated pin-code or password.&lt;/p&gt;

&lt;p&gt;What I suggest with devices having finger-print or facial unlock, use the biometric lock for daily use and keep a looong passcode.&lt;/p&gt;

&lt;p&gt;One way to memorize a long number is to not use a custom number but to pick one of the constants from Physics/Chemistry/Mathematics. That way even if you forget the exact digits, you can just look up its value online. The security lies in no-one knowing what constant you have used. They don‚Äôt even know that you are using a constant. Go for atleast 10-digit pin.&lt;/p&gt;

&lt;p&gt;Then comes the risk of immigration agents detaining you and when you are travelling alone you don‚Äôt even have the option to contact your lawyer because the agents might cut your access to your devices too.&lt;/p&gt;

&lt;p&gt;So for this you set something that‚Äôs called a ‚Äúdead man‚Äôs switch‚Äù. The concept comes from war, here someone rigs up a switch not in the way that when they press it the bomb blasts. But in the way that if they release it, the bomb blasts. So even if someone kills them there is a much higher chance of the bomb going off.&lt;/p&gt;

&lt;p&gt;What you have to do is, right before you enter the immigration check. Message someone you trust that you are about to pass through customs. Give them all the details as to the airport where you are, the flight by which you came, etc. Ask them to contact your lawyer if they don‚Äôt hear back from you within a specified time (a couple of hours probably). Then when you are cleared of immigration just let them know that you are out of the hairy-zone.&lt;/p&gt;

&lt;p&gt;I got the idea of this from one of &lt;a href=&quot;https://youtu.be/f-mHLBD64HM?t=195&quot;&gt;CGP Grey‚Äôs video&lt;/a&gt; over on YouTube.&lt;/p&gt;

&lt;p&gt;Want to discuss this or any other interesting thing, hit me up on Twitter &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="life-hack" /><category term="privacy" /><summary type="html">Necessary disclaimer: I am not a lawyer so please don‚Äôt take my statements here on face value, do your own due diligence before pulling off any stunts.</summary></entry><entry><title type="html">Keep Android screen on When USB is connected</title><link href="https://varunbarad.com/blog/keep-android-screen-on-when-usb-connected" rel="alternate" type="text/html" title="Keep Android screen on When USB is connected" /><published>2020-05-11T12:00:00+05:30</published><updated>2020-05-11T12:00:00+05:30</updated><id>https://varunbarad.com/blog/keep-android-screen-on-when-usb-connected</id><content type="html" xml:base="https://varunbarad.com/blog/keep-android-screen-on-when-usb-connected">&lt;p&gt;To keep your Android phone screen from turning off when it is connected to your PC and you are using it to debug apps, enter the following command once in your terminal with the device connected.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;adb shell svc power stayon usb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This sets flag inside the device using adb that whenever this device is connected via USB to not turn its screen off automatically.&lt;/p&gt;

&lt;p&gt;Want to discuss this or any other interesting thing, hit me up on Twitter &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="android" /><category term="programming" /><summary type="html">To keep your Android phone screen from turning off when it is connected to your PC and you are using it to debug apps, enter the following command once in your terminal with the device connected.</summary></entry><entry><title type="html">Write Custom Android Lint Rule - Manifest File</title><link href="https://varunbarad.com/blog/write-custom-android-lint-rule-manifest-file" rel="alternate" type="text/html" title="Write Custom Android Lint Rule - Manifest File" /><published>2020-02-28T12:00:00+05:30</published><updated>2020-02-28T12:00:00+05:30</updated><id>https://varunbarad.com/blog/write-custom-android-lint-rule-manifest-file</id><content type="html" xml:base="https://varunbarad.com/blog/write-custom-android-lint-rule-manifest-file">&lt;p&gt;Welcome folks, last time we wrote a lint check for making sure that all of our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditText&lt;/code&gt; have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android:inputType&lt;/code&gt; attribute.&lt;/p&gt;

&lt;p&gt;This time we will be writing a check which works on our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AndroidManifest.xml&lt;/code&gt; file. This check will ensure that our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;application&lt;/code&gt; tag has a child &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;meta-data&lt;/code&gt; tag with attribute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android:name=&quot;android.webkit.WebView.MetricsOptOut&quot;&lt;/code&gt;. Read the background for that &lt;a href=&quot;https://developer.android.com/guide/webapps/managing-webview#metrics&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you haven‚Äôt yet then first go through &lt;a href=&quot;https://varunbarad.com/blog/write-custom-android-lint-rule-layout-files&quot;&gt;the last post&lt;/a&gt; otherwise you might not understand many things as we will be building upon what we have created in that post.&lt;/p&gt;

&lt;h2 id=&quot;changes-to-add-to-last-project&quot;&gt;Changes to add to last project&lt;/h2&gt;

&lt;p&gt;We will be building upon the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lint-checks&lt;/code&gt; module we created last time. We would need to make following changes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add a new issue and detector pertaining to this manifest check&lt;/li&gt;
  &lt;li&gt;Register the new issue in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LintRegistry&lt;/code&gt; class&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;create-the-detector&quot;&gt;Create the detector&lt;/h2&gt;

&lt;p&gt;Create a class named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WebViewMetricsMetaTagDetector&lt;/code&gt; which extends from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ManifestDetector&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WebViewMetricsMetaTagDetector&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ManifestDetector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now to define the Issue.&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;companion&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@JvmStatic&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;internal&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;ISSUE_MISSING_WEBVIEW_METRICS_META_TAG&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Issue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;MissingWebViewMetricsMetaTag&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;briefDescription&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Specify whether you want to opt-out of metrics tracking via WebView.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;explanation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;WebView can upload diagnostic data to Google. You can opt-out by specifying a `meta-data` tag under your `application` tag in manifest.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;SECURITY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;priority&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;severity&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Severity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;implementation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Implementation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;WebViewMetricsMetaTagDetector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;Scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MANIFEST_SCOPE&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addMoreInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://developer.android.com/guide/webapps/managing-webview#metrics&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The things that have changed here are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;briefDescription&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;explanation&lt;/code&gt; for the issue.&lt;/li&gt;
  &lt;li&gt;Scope inside the Implementation object passed against &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;implementation&lt;/code&gt; parameter. We changed from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scope.ALL_RESOURCES_SCOPE&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scope.MANIFEST_SCOPE&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We now override the 2 required methods:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getApplicableElements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;listOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;SdkConstants&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;TAG_APPLICATION&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;visitElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;XmlContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;containsWebViewMetricsOptOutTag&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;childNodes&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;toList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nodeName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;meta-data&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;toPairedNameValueList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;android:name&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;android.webkit.WebView.MetricsOptOut&quot;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;isNotEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;containsWebViewMetricsOptOutTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;issue&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ISSUE_MISSING_WEBVIEW_METRICS_META_TAG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getLocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ISSUE_MISSING_WEBVIEW_METRICS_META_TAG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getExplanation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;TextFormat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;visitElement&lt;/code&gt; method, we are traversing through all children of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;application&amp;gt;&lt;/code&gt; and checking that a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;meta-data&lt;/code&gt; tag with attribute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android:name=&quot;android.webkit.WebView.MetricsOptOut&quot;&lt;/code&gt; exists. If it does not exist then we raise our issue &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ISSUE_MISSING_WEBVIEW_METRICS_META_TAG&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;register-the-new-issue&quot;&gt;Register the new issue&lt;/h2&gt;

&lt;p&gt;The last thing we need to do now is to add the above created issue in our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LintRegistry&lt;/code&gt; class.&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LintRegistry&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IssueRegistry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CURRENT_API&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;issues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Issue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;listOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;InputTypeDetector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ISSUE_MISSING_INPUT_TYPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;WebViewMetricsMetaTagDetector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ISSUE_MISSING_WEBVIEW_METRICS_META_TAG&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// We added this line&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;run-the-lint-checks&quot;&gt;Run the lint checks&lt;/h2&gt;

&lt;p&gt;There we are done, now to run the lint checks using gradle&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./gradlew lint
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Want to discuss this or any other interesting thing, hit me up on Twitter &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="android" /><category term="programming" /><summary type="html">Welcome folks, last time we wrote a lint check for making sure that all of our EditText have the android:inputType attribute.</summary></entry><entry><title type="html">Write Custom Android Lint Rule - Layout Files</title><link href="https://varunbarad.com/blog/write-custom-android-lint-rule-layout-files" rel="alternate" type="text/html" title="Write Custom Android Lint Rule - Layout Files" /><published>2020-02-27T12:00:00+05:30</published><updated>2020-02-27T12:00:00+05:30</updated><id>https://varunbarad.com/blog/write-custom-android-lint-rule-layout-files</id><content type="html" xml:base="https://varunbarad.com/blog/write-custom-android-lint-rule-layout-files">&lt;p&gt;&lt;img src=&quot;https://varunbarad.com/assets/images/posts/headers/write-custom-android-lint-rule-layout-files.jpg&quot; alt=&quot;Article Header - Write Custom Android Lint Rules&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Welcome devs, I recently faced an issue where if I didn‚Äôt specify any &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android:inputType&lt;/code&gt; for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditText&lt;/code&gt; then keyboard capitalisation did not correctly show. The deeper problem was that I always forgot to include that attribute. So I decided to use a lint check which would fail my build if any of my &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditText&lt;/code&gt; does not have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android:inputType&lt;/code&gt; attribute.&lt;/p&gt;

&lt;p&gt;Since there was no such thing included in pre-provided checks I decided to write a custom lint rule. What follows is a guide on how to write a lint-check which goes checks all of our layout files and flags any &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditText&lt;/code&gt; without &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android:inputType&lt;/code&gt; attribute.&lt;/p&gt;

&lt;h2 id=&quot;what-is-android-lint&quot;&gt;What is Android lint?&lt;/h2&gt;

&lt;p&gt;Android lint is a tool which provides us static code-analysis (it does not need to run the application to identify potential problems). The Android SDK already provides us with some pre-made lint checks, but the best part is that it allows us to write our own custom lint checks.&lt;/p&gt;

&lt;h2 id=&quot;writing-a-custom-lint-check&quot;&gt;Writing a custom lint check&lt;/h2&gt;

&lt;p&gt;We will be writing a lint check which checks whether each &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditText&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;androidx.appcompat.widget.AppCompatEditText&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android.support.v7.widget.AppCompatEditText&lt;/code&gt; has the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android:inputType&lt;/code&gt; attribute defined or not.
This lint check is set to fail the build when it finds any of the above element not containing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android:inputType&lt;/code&gt; attribute.&lt;/p&gt;

&lt;h3 id=&quot;create-a-new-library-module&quot;&gt;Create a new Library Module&lt;/h3&gt;

&lt;p&gt;In the project for which you want to write the lint check, add a new ‚ÄúJava or Kotlin Library‚Äù module.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;For Library name you can put anything but I have used &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lint-checks&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;For Class name put &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LintRegistry&lt;/code&gt; (we will get to the reasoning later)&lt;/li&gt;
  &lt;li&gt;I have selected Kotlin as the language&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://varunbarad.com/assets/images/posts/write-custom-android-lint-rule-layout-files/create-new-module.png&quot; alt=&quot;Screenshot - Add new Java or Kotlin Library Module&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;add-dependencies-in-gradle&quot;&gt;Add dependencies in Gradle&lt;/h3&gt;

&lt;p&gt;You only need 3 dependencies in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lint-checks&lt;/code&gt; module‚Äôs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; and all of them need to be only &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;compileOnly&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;compileOnly&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.61&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;compileOnly&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.android.tools.lint:lint-api:26.6.0&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;compileOnly&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.android.tools.lint:lint-checks:26.6.0&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;create-the-detector&quot;&gt;Create the detector&lt;/h3&gt;

&lt;p&gt;Now let‚Äôs write the class which will actually detect the issues. We create a new class named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;InputTypeDetector&lt;/code&gt; which extends from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LayoutDetector&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;InputTypeDetector&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LayoutDetector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we specify the Issue that we want our detector to raise when we find and edit-text without input-type. We declare it as a property under companion object of this class (and mark it with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@JvmStatic&lt;/code&gt; so that it appears as static field when accessed from Java code).&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;companion&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@JvmStatic&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;internal&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;ISSUE_MISSING_INPUT_TYPE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Issue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;MissingInputType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;briefDescription&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Specify inputType attribute to get proper keyboard shown by system.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;explanation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;You should specify an inputType for each EditText so that you can get the proper keyboard to be shown by system.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;USABILITY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;priority&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;severity&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Severity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;implementation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Implementation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;InputTypeDetector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;Scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ALL_RESOURCES_SCOPE&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addMoreInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://developer.android.com/training/keyboard-input/style&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The important things here are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id&lt;/code&gt; - The name which is shown in the lint report&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;severity&lt;/code&gt; - There are many types of severity, here we have specified &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ERROR&lt;/code&gt; as we want the build to fail when we find this issue&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;implementation&lt;/code&gt; - The implementation defines which XML files to scan for this issue and which detector to use to detect this issue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After that we override the function &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getApplicableElements&lt;/code&gt;, where we specify for which elements we want this detector to be run (so that our detector doesn‚Äôt get unnecessarily called for every element).&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getApplicableElements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;listOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;SdkConstants&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;EDIT_TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;androidx.appcompat.widget.AppCompatEditText&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;android.support.v7.widget.AppCompatEditText&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Since we only want our detector to be called for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EditText&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;androidx.appcompat.widget.AppCompatEditText&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android.support.v7.widget.AppCompatEditText&lt;/code&gt; we return a list of all of them.&lt;/p&gt;

&lt;p&gt;The last thing remaining to be done in detector is to actually determine if any given element has the problem or not. For that we override the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;visitElement&lt;/code&gt; method.&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;visitElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;XmlContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hasAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;SdkConstants&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ATTR_INPUT_TYPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Check if the element has the `android:inputType` attribute&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;issue&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ISSUE_MISSING_INPUT_TYPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// The issue that we defined above&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getLocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ISSUE_MISSING_INPUT_TYPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getExplanation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;TextFormat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here we are doing 2 things&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Checking if given element has the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android:inputType&lt;/code&gt; attribute or not&lt;/li&gt;
  &lt;li&gt;Raise the issue if the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android:inputType&lt;/code&gt; attribute is not present&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; One thing you might have noticed is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;location&lt;/code&gt; parameter, that is used by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lint&lt;/code&gt; tool to show exactly where any issue is reported.&lt;/p&gt;

&lt;h3 id=&quot;registering-the-issue&quot;&gt;Registering the Issue&lt;/h3&gt;

&lt;p&gt;Now we have declared the issue and corresponding detector, but we need to register them at a central location so that the lint tool knows that it has to execute these checks too. For that we go back to our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LintRegistry&lt;/code&gt; class that we declared earlier when creating the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lint-checks&lt;/code&gt; module.&lt;/p&gt;

&lt;p&gt;We extend that class from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IssueRegistry&lt;/code&gt; class and override a couple of properties.&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LintRegistry&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IssueRegistry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CURRENT_API&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;issues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Issue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;listOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;InputTypeDetector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ISSUE_MISSING_INPUT_TYPE&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Any future issues that we declare/write are to be added to this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;issues&lt;/code&gt; property list.&lt;/p&gt;

&lt;h3 id=&quot;registering-our-issue-registry&quot;&gt;Registering our Issue Registry&lt;/h3&gt;

&lt;p&gt;We now need to declare this class within the manifest of our JAR. We do this in our build script. Add the following block under your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lint-checks&lt;/code&gt; module‚Äôs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; file&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;jar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;manifest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Format is&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// attributes(&quot;Lint-Registry-v2&quot;: &quot;&amp;lt;fully-qualified-class-name-of-your-issue-registry&amp;gt;&quot;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Lint-Registry-v2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.varunbarad.androidlintchecks.LintRegistry&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;integrating-our-custom-lint-check-module-into-our-project&quot;&gt;Integrating our custom lint check module into our project&lt;/h2&gt;

&lt;p&gt;In your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app&lt;/code&gt; module go and add a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lintChecks&lt;/code&gt; dependency on your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lint-checks&lt;/code&gt; module like this&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lintChecks&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;:lint-checks&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;run-the-lint-checks&quot;&gt;Run the lint checks&lt;/h2&gt;

&lt;p&gt;That was all that was needed to write your custom lint check. Now whenever you run a lint check using gradle, it will also check whether your code passes our custom lint checks or not.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Command to run lint check&lt;/span&gt;
./gradlew lint
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Want to discuss this or any other interesting thing, hit me up on Twitter &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;edits&quot;&gt;Edits&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;2020-03-02:&lt;/strong&gt; Add the step of ‚ÄúRegistering our Issue Registry‚Äù&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Varun Barad</name></author><category term="android" /><category term="programming" /><summary type="html"></summary></entry><entry><title type="html">Dart Extension Methods</title><link href="https://varunbarad.com/blog/dart-extensions-methods" rel="alternate" type="text/html" title="Dart Extension Methods" /><published>2020-02-04T12:00:00+05:30</published><updated>2020-02-04T12:00:00+05:30</updated><id>https://varunbarad.com/blog/dart-extensions-methods</id><content type="html" xml:base="https://varunbarad.com/blog/dart-extensions-methods">&lt;p&gt;&lt;img src=&quot;https://varunbarad.com/assets/images/posts/headers/dart-extension-methods.png&quot; alt=&quot;Article Header - Dart Extension Methods&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Welcome devs, have you tried your hands at extensions methods? Dart recently announced support for extension methods (from Dart 2.7) and extension properties.&lt;/p&gt;

&lt;p&gt;Extension methods are a way to add functionality to existing libraries. When you are using someone else‚Äôs library it‚Äôs often impractical/impossible to change the API. But you can &lt;em&gt;extend&lt;/em&gt; it using extension methods.&lt;/p&gt;

&lt;h2 id=&quot;what-are-extension-methods&quot;&gt;What are extension methods?&lt;/h2&gt;

&lt;p&gt;Consider the following code that parses a string into an integer:&lt;/p&gt;

&lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'42'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Won‚Äôt it look cleaner/better if this functionality was available on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;String&lt;/code&gt; class like below?&lt;/p&gt;

&lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;'42'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Since the language (where class &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;String&lt;/code&gt; comes from) doesn‚Äôt provide such a method we can‚Äôt parse a string to an int like that. Extension methods allow us to specify such custom functionalities not provided by the library (Dart language in this case). Let‚Äôs see how to do that in next section.&lt;/p&gt;

&lt;h2 id=&quot;writing-a-basic-extension-method&quot;&gt;Writing a basic extension method&lt;/h2&gt;

&lt;p&gt;So we want to have a method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parseInt&lt;/code&gt; &lt;strong&gt;on&lt;/strong&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;String&lt;/code&gt; class which would parse the given string to integer.&lt;/p&gt;

&lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;'42'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For that we will define an extension method on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;String&lt;/code&gt; like this&lt;/p&gt;

&lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// File: extension_methods.dart&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringExtras&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// We can also define getters as extensions&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doubleLength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here we have named this set of extension methods as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;StringExtras&lt;/code&gt;, you can name them anything you like.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; As you might have noticed above, we can define multiple extension methods/getters under a single extension block.&lt;/p&gt;

&lt;h2 id=&quot;using-the-extension-method&quot;&gt;Using the extension method&lt;/h2&gt;

&lt;p&gt;Extension methods (once imported) can be used just like any member method on that class‚Äôs object. Our example would go like this&lt;/p&gt;

&lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'extension_methods.dart'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'42'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Would print 50&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Similarly we can use the getters too&lt;/p&gt;

&lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'extension_methods.dart'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'42'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doubleLength&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Would print 4&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;important-notes&quot;&gt;Important Notes&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Extension methods &lt;em&gt;don‚Äôt&lt;/em&gt; work with the type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dynamic&lt;/code&gt;. However they &lt;em&gt;do&lt;/em&gt; work with Dart‚Äôs type inference.&lt;/li&gt;
  &lt;li&gt;Since extension methods are resolved statically, they‚Äôre as fast as calling a static function.&lt;/li&gt;
  &lt;li&gt;Extension methods can‚Äôt access private members of the class.&lt;/li&gt;
  &lt;li&gt;If an extension member has a name conflict then you should refer &lt;a href=&quot;https://dart.dev/guides/language/extension-methods#api-conflicts&quot;&gt;here&lt;/a&gt; for your options.&lt;/li&gt;
  &lt;li&gt;You can define extension methods on classes which take generic type parameters (for example &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;List&amp;lt;T&amp;gt;&lt;/code&gt;). Refer &lt;a href=&quot;https://dart.dev/guides/language/extension-methods#implementing-generic-extensions&quot;&gt;this section&lt;/a&gt; for further details.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dart.dev/guides/language/extension-methods&quot;&gt;Official release documentation - https://dart.dev/guides/language/extension-methods&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to discuss this or any other interesting thing, hit me up on Twitter &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="flutter" /><category term="dart" /><category term="programming" /><summary type="html"></summary></entry><entry><title type="html">P vs NP Algorithm Problem Types</title><link href="https://varunbarad.com/blog/p-vs-np-algorithm-problem-types" rel="alternate" type="text/html" title="P vs NP Algorithm Problem Types" /><published>2020-02-02T12:00:00+05:30</published><updated>2020-02-02T12:00:00+05:30</updated><id>https://varunbarad.com/blog/p-vs-np-algorithm-problem-types</id><content type="html" xml:base="https://varunbarad.com/blog/p-vs-np-algorithm-problem-types">&lt;p&gt;&lt;img src=&quot;https://varunbarad.com/assets/images/posts/p-np-venn-diagram.png&quot; alt=&quot;Venn Diagram - Problem Types&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The above image represents something completely un-understandable to me during my college years. I couldn‚Äôt understand what the professor tried to explain during my algorithms class when the topic of P vs NP vs NP-Complete problems came.&lt;/p&gt;

&lt;p&gt;Finally I understood it from &lt;a href=&quot;https://www.youtube.com/watch?v=EHp4FPyajKQ&quot;&gt;a video by ‚ÄúUp and Atom‚Äù&lt;/a&gt;. The problems are grouped according to these 2 criteria:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Can a solution to the problem be found in polynomial time?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can a given solution for the problem be verified in polynomial time?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;np-problems&quot;&gt;NP Problems&lt;/h2&gt;

&lt;p&gt;These are the problems for which condition 2 holds true. If given a solution to such problem, the correctness of that solution can be verified in polynomial time. Condition 1 being true or false for such problems doesn‚Äôt affect whether they can fall under NP category or not.&lt;/p&gt;

&lt;h2 id=&quot;np-complete-problems&quot;&gt;NP-Complete Problems&lt;/h2&gt;

&lt;p&gt;These are the problems for which condition 2 holds true but condition 1 is false. A valid solution to the problem can‚Äôt be verified in polynomial time, but if given a solution to the problem the correctness of that solution can be verified in polynomial time.&lt;/p&gt;

&lt;h2 id=&quot;p-problems&quot;&gt;P Problems&lt;/h2&gt;

&lt;p&gt;For these problems, both conditions 1 &amp;amp; 2 hold true. There exist methods by which a valid solution to any of these problem can be found under polynomial time. And also, any given solution for such problem can be verified in polynomial time.&lt;/p&gt;

&lt;p&gt;Want to discuss this or any other interesting thing, hit me up on Twitter &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="programming" /><summary type="html"></summary></entry><entry><title type="html">Record Linux terminal session</title><link href="https://varunbarad.com/blog/record-linux-terminal-session" rel="alternate" type="text/html" title="Record Linux terminal session" /><published>2019-10-26T12:00:00+05:30</published><updated>2019-10-26T12:00:00+05:30</updated><id>https://varunbarad.com/blog/record-linux-terminal-session</id><content type="html" xml:base="https://varunbarad.com/blog/record-linux-terminal-session">&lt;p&gt;I was recently setting up my computer with Ubuntu on it and this time I was decided that I would document every step of the process so that I can get it done faster the next time. That thought and process worked easily for the programs whose installations were just a simple &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt install ...&lt;/code&gt; but when I was installing something new (like VS Code) there were many steps involved and it wasn‚Äôt an easy task to document them as I went on installing those things.&lt;/p&gt;

&lt;p&gt;What I decided to then do was to just record my terminal sessions for each such long program and review those recordings later to write a script for everything that I needed to do.&lt;/p&gt;

&lt;p&gt;Linux has a handy utility called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;script&lt;/code&gt; which does just that. If it isn‚Äôt pre-installed then you can easily install it with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt install script&lt;/code&gt; as it is generally available in the default PPA.&lt;/p&gt;

&lt;p&gt;Using it is straight-forward too.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;script &amp;lt;file_name_to_write_record_to&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I also find these options to be of significance:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-a, --append&lt;/code&gt;: This appends the recording if the file is already existing.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-c, --command &amp;lt;command_which_is_to_be_recorded&amp;gt;&lt;/code&gt;: If you want to record the interaction of a program with terminal then you can use this.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I found this command to be quite helpful in my recent endeavour of documenting the setup process and think it might others too. Want to discuss this or any other interesting thing, hit me up on Twitter &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="programming" /><summary type="html">I was recently setting up my computer with Ubuntu on it and this time I was decided that I would document every step of the process so that I can get it done faster the next time. That thought and process worked easily for the programs whose installations were just a simple sudo apt install ... but when I was installing something new (like VS Code) there were many steps involved and it wasn‚Äôt an easy task to document them as I went on installing those things.</summary></entry><entry><title type="html">Sync git fork with upstream</title><link href="https://varunbarad.com/blog/sync-git-fork-with-upstream" rel="alternate" type="text/html" title="Sync git fork with upstream" /><published>2019-10-25T12:00:00+05:30</published><updated>2019-10-25T12:00:00+05:30</updated><id>https://varunbarad.com/blog/sync-git-fork-with-upstream</id><content type="html" xml:base="https://varunbarad.com/blog/sync-git-fork-with-upstream">&lt;p&gt;It is a common situation when we fork a project on Github and after some time we want to update our fork with the changes that have been integrated into the source project from where we forked. This is a simple guide on how to do that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conditions:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;remote&lt;/code&gt; of source project added to our local git repo.&lt;/li&gt;
  &lt;li&gt;The name of the source project remote is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upstream&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;We are syncing changes from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upstream/master&lt;/code&gt; to our local &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master&lt;/code&gt; branch.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below are the steps I found on Github‚Äôs guide.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Commit/Stash all your local changes.&lt;/li&gt;
  &lt;li&gt;Checkout your local &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master&lt;/code&gt; branch if not already there. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git checkout master&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Fetch (not pull) changes from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upstream&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git fetch upstream&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Merge changes from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upstream/master&lt;/code&gt; to local &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git merge upstream/master&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Resolve merge-conflicts, if any.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And you are done. Your local &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master&lt;/code&gt; branch is now updated with changes from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upstream/master&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Source: &lt;a href=&quot;https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/syncing-a-fork&quot;&gt;Github guide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Syncing like this will only update your local &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master&lt;/code&gt;. You will still need to push those synced changes to your Github repo if you want to update that too.&lt;/p&gt;

&lt;p&gt;This was just a quick tip that I needed quite a lot recently and every time I had to go and search for that guide. So I wrote this to solidify the concepts in my mind. If you have any more such tips I would love to hear about them at this &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="programming" /><summary type="html">It is a common situation when we fork a project on Github and after some time we want to update our fork with the changes that have been integrated into the source project from where we forked. This is a simple guide on how to do that.</summary></entry><entry><title type="html">How to add ‚Äúlatest‚Äù post redirect to Jekyll site</title><link href="https://varunbarad.com/blog/how-to-add-latest-post-redirect-to-jekyll-site" rel="alternate" type="text/html" title="How to add ‚Äúlatest‚Äù post redirect to Jekyll site" /><published>2019-10-08T12:00:00+05:30</published><updated>2019-10-08T12:00:00+05:30</updated><id>https://varunbarad.com/blog/how-to-add-latest-post-redirect-to-jekyll-site</id><content type="html" xml:base="https://varunbarad.com/blog/how-to-add-latest-post-redirect-to-jekyll-site">&lt;p&gt;I wanted to have a URL which I can give to someone and it would always take them to the latest post published on my blog. I ended up using &lt;a href=&quot;https://varunbarad.com/blog/latest&quot;&gt;https://varunbarad.com/blog/latest&lt;/a&gt; as the URL.&lt;/p&gt;

&lt;p&gt;Since my website is statically generated and hosted, it wasn‚Äôt an option for me to specify a server-side &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;30x&lt;/code&gt; redirect for that particular URL to my latest post.&lt;/p&gt;

&lt;p&gt;So what I ended up doing is generate a page on each build which would redirect user to the latest post using JS. To get the information about latest post, I made use of Jekyll‚Äôs Liquid templating &lt;em&gt;syntax&lt;/em&gt; (not sure what else to call it).&lt;/p&gt;

&lt;p&gt;So the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag of that page ended up looking like this:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
{%- assign latest_post = site.posts[0] -%}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Redirecting you to {{ latest_post.title }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;{{ latest_post.url }}&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here I get the details of latest post by taking the first post in the list &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site.posts&lt;/code&gt;. AFAIK &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site.posts&lt;/code&gt; is sorted in descending order by publishing date, so this approach fetches me the last published post.&lt;/p&gt;

&lt;p&gt;Then it is a simple matter of setting the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;window.location.href&lt;/code&gt; to the final url of the latest post.&lt;/p&gt;

&lt;p&gt;The final task remaining was to make sure that this page was compiled and generated exactly at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://varunbarad.com/blog/latest&lt;/code&gt;. For that I specified a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;permalink: &quot;/blog/latest/&quot;&lt;/code&gt; in the front-matter for that page. That way Jekyll knows where to put the final generated HTML file for that page.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;That was all, a simple way to add a URL to your Jekyll site which will always take the visitor to your latest blog post. You can take a look at the full source code of my website over at &lt;a href=&quot;https://github.com/VarunBarad/varunbarad.github.io/tree/development&quot;&gt;GitHub&lt;/a&gt; or you can also find the full code of this ‚Äúlatest post redirect‚Äù page at &lt;a href=&quot;https://github.com/VarunBarad/varunbarad.github.io/blob/development/latest-post-redirect.html&quot;&gt;this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want to talk with me about anything related to this feel free to reach out to me on twitter &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="programming" /><category term="web" /><summary type="html">I wanted to have a URL which I can give to someone and it would always take them to the latest post published on my blog. I ended up using https://varunbarad.com/blog/latest as the URL.</summary></entry><entry><title type="html">JavaScript 30 - Array Cardio 1</title><link href="https://varunbarad.com/blog/javascript-30-array-cardio-1" rel="alternate" type="text/html" title="JavaScript 30 - Array Cardio 1" /><published>2019-10-03T12:00:00+05:30</published><updated>2019-10-03T12:00:00+05:30</updated><id>https://varunbarad.com/blog/javascript-30-array-cardio-1</id><content type="html" xml:base="https://varunbarad.com/blog/javascript-30-array-cardio-1">&lt;p&gt;Day 4 of &lt;a href=&quot;https://javascript30.com&quot;&gt;JS30 challenge&lt;/a&gt;, today I worked with various methods on array (I knew most of them beforehand) but I learned two cool things today.&lt;/p&gt;

&lt;p&gt;The key concepts I learned from today‚Äôs challenge were:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Converting iterables to array in JS.&lt;/li&gt;
  &lt;li&gt;Displaying array of objects nicely formatted in console.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;converting-iterables-to-array-in-js&quot;&gt;Converting iterables to array in JS&lt;/h2&gt;

&lt;p&gt;As you might have observed that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;document.querySelectorAll&lt;/code&gt; doesn‚Äôt return us an actual &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Array&lt;/code&gt; but instead it returns us what is called as a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeList&lt;/code&gt;. Consequently &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeList&lt;/code&gt; doesn‚Äôt have all the methods that an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Array&lt;/code&gt; does (like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;map&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;filter&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reduce&lt;/code&gt; etc).&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeList&lt;/code&gt; is an example of what we call as ‚Äúiterable‚Äù in JS. So whenever working with iterables we tend to prefer to convert them to an actual &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Array&lt;/code&gt; so that we have more options to work with.&lt;/p&gt;

&lt;p&gt;I already knew of one way to convert them:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;anyIterable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;convertedArray&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;anyIterable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here we used the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Array.from&lt;/code&gt; method to convert the iterable to an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Array&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The other way I learned today was:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;anyIterable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;convertedArray&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;anyIterable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here we made use of a combination of 2 things:&lt;/p&gt;

&lt;h4 id=&quot;1-es6-spread-operator-&quot;&gt;1. ES6 spread operator &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;...&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;When we prepend an iterable with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;...&lt;/code&gt; (called the ES6 spread operator) what it does is it extracts all values from that iterable and replaces the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;...anyIterable&lt;/code&gt; part of the expression with those values.&lt;/p&gt;
&lt;h4 id=&quot;2-array-literal-&quot;&gt;2. Array literal &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[]&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Then when we enclose the ‚Äúspreaded‚Äù values with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;]&lt;/code&gt; it converts the whole thing into an array containing all the values from that iterable.&lt;/p&gt;

&lt;p&gt;Both produce the same result. I don‚Äôt know if one performs better than the other under large data-sets. But even though the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[...anyIterable]&lt;/code&gt; way is more concise, to me the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Array.from(anyIterable)&lt;/code&gt; usage seems more readable.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;That‚Äôs all folks, that was it for today. If you have anything unclear in this article or want to discuss anything else, hit me up on twitter &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="programming" /><category term="web" /><category term="javascript-30" /><summary type="html">Day 4 of JS30 challenge, today I worked with various methods on array (I knew most of them beforehand) but I learned two cool things today.</summary></entry><entry><title type="html">JavaScript 30 - CSS Variables</title><link href="https://varunbarad.com/blog/javascript-30-css-variables" rel="alternate" type="text/html" title="JavaScript 30 - CSS Variables" /><published>2019-10-02T12:00:00+05:30</published><updated>2019-10-02T12:00:00+05:30</updated><id>https://varunbarad.com/blog/javascript-30-css-variables</id><content type="html" xml:base="https://varunbarad.com/blog/javascript-30-css-variables">&lt;p&gt;On my day 3 of &lt;a href=&quot;https://javascript30.com&quot;&gt;JS30 challenge&lt;/a&gt; I got introduced primarily to CSS variables but also to many other things.&lt;/p&gt;

&lt;p&gt;The key concepts I learned from today‚Äôs challenge were:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CSS variables&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dataset&lt;/code&gt; property on DOM elements&lt;/li&gt;
  &lt;li&gt;Image blur&lt;/li&gt;
  &lt;li&gt;Color input&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;css-variables&quot;&gt;CSS variables&lt;/h2&gt;

&lt;p&gt;CSS variables work very similar to how we use variables in JS or any other programming language. They let us define their value at one place and then just use that same value anywhere we refer to that variable.&lt;/p&gt;

&lt;p&gt;For example, we can define at one place that we want text on our website to be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;white&lt;/code&gt; then we can define it like this&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;:root&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;--text-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here we define this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;text-color&lt;/code&gt; variable at the root element. Now any place that we need to use this value we need to do something like&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.content&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;--text-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;CSS variables can be used for more than just colors. In today‚Äôs project we used these variables for storing the border thickness and color of an image and also for storing the blur amount for that image.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; One fun idea I have with CSS variables is that I can define the color palette of my website at one place and then provide the user with a night-mode switch. I can change colors across the whole website by changing them at just one place.&lt;/p&gt;

&lt;p&gt;To modify their value via JS a simple method call does the trick.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;--text-color&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The above snippet will change the value associated with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--text-color&lt;/code&gt; at any point in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dom-element&lt;/code&gt; and any of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dom-element&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;dataset-property-on-dom-elements&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dataset&lt;/code&gt; property on DOM elements&lt;/h2&gt;

&lt;p&gt;In HTML whenever we want to write a custom-property on an element we make use of what are called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data&lt;/code&gt; attributes. A sample can be like&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;blur&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;range&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;blur&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;min=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;max=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;25&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;5&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-sizing=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;px&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-purpose=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;A slider input to select blur amount&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here we have defined 2 data attributes, namely &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data-sizing&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data-purpose&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now when we need to use these in JS we can simply do&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inputElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sizing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Used to access the data-sizing attribute.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inputElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;purpose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Used to access the data-purpose attribute.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dataset&lt;/code&gt; is a very simple property on DOM elements which lists all the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data&lt;/code&gt; attributes defined on that element.&lt;/p&gt;

&lt;h2 id=&quot;image-blur&quot;&gt;Image blur&lt;/h2&gt;

&lt;p&gt;Today I learnt a nifty simple trick to blur an image using only CSS.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blur&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can just specify a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;blur&lt;/code&gt; CSS filter and our work is done. There are lots of other functions available which can be used as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;filter&lt;/code&gt;, do make sure to take a look at that list.&lt;/p&gt;

&lt;h2 id=&quot;color-input&quot;&gt;Color input&lt;/h2&gt;

&lt;p&gt;Standardisation of HTML and CSS has made it easy to create a simple and functional color-picker. The only thing that needs to be done is&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;base&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;color&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;base&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#43bc46&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here we have just declared an input tag which then takes care of displaying a color picker and also shows the user with a tiny sample of the color they have picked.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;That‚Äôs all folks, that was it for today. If you have anything unclear in this article or want to discuss anything else, hit me up on twitter &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="programming" /><category term="web" /><category term="javascript-30" /><summary type="html">On my day 3 of JS30 challenge I got introduced primarily to CSS variables but also to many other things.</summary></entry><entry><title type="html">JavaScript 30 - CSS Analog Clock</title><link href="https://varunbarad.com/blog/javascript-30-css-analog-clock" rel="alternate" type="text/html" title="JavaScript 30 - CSS Analog Clock" /><published>2019-10-01T12:00:00+05:30</published><updated>2019-10-01T12:00:00+05:30</updated><id>https://varunbarad.com/blog/javascript-30-css-analog-clock</id><content type="html" xml:base="https://varunbarad.com/blog/javascript-30-css-analog-clock">&lt;p&gt;Today I am continuing my work on &lt;a href=&quot;https://javascript30.com&quot;&gt;JS30 challenge&lt;/a&gt; and building a simple analog clock using CSS shapes and then animate it with CSS transforms timed using JS.&lt;/p&gt;

&lt;p&gt;The key concepts I learned from today‚Äôs challenge were:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Changing rotation center of an object in CSS&lt;/li&gt;
  &lt;li&gt;CSS Transition timing function&lt;/li&gt;
  &lt;li&gt;A weird reverse-jump in animation whenever any clock hand crosses 12 o‚Äôclock mark.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;changing-rotation-center-of-an-object-in-css&quot;&gt;Changing rotation center of an object in CSS&lt;/h2&gt;

&lt;p&gt;By default an object in CSS rotates around its center. But in our clock we need to rotate them around one of their corners. Therefore we need to change their CSS origins&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.hand&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;transform-origin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The above snippet moves the origin point for all CSS transforms to the right end of that element.&lt;/p&gt;

&lt;h2 id=&quot;css-transition-timing-function&quot;&gt;CSS Transition timing function&lt;/h2&gt;

&lt;p&gt;You can provide a timing function for your CSS transitions so that they follow it for their rate of change during the duration of your transitions.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.hand&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;transition-timing-function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ease-in-out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are many built-in transition timing functions but I generally liked the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ease-in-out&lt;/code&gt; for how its acceleration and deceleration feel much like natural movements. You can check out the rest of them if you like.&lt;/p&gt;

&lt;p&gt;My favorite ability in this was that we can provide our custom timing functions using what is known as a bezier curve specification. For example:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.hand&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;transition-timing-function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cubic-bezier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.58&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the above code-sample I have written the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cubic-bezier&lt;/code&gt; format of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ease-in-out&lt;/code&gt; timing function but you can customize the bezier curve to your heart‚Äôs content using those 2 anchor points.&lt;/p&gt;

&lt;h1 id=&quot;a-weird-reverse-jump-in-animation-whenever-any-clock-hand-crosses-12-oclock-mark&quot;&gt;A weird reverse-jump in animation whenever any clock hand crosses 12 o‚Äôclock mark&lt;/h1&gt;

&lt;p&gt;The hands of my clock were moving nicely from 12 to 12 but when they were just going to reach 12 they would do a weird jump and instead of moving 1 tick forward from right before 12 to 12, they would perform a full reverse circle and reach 12 from that side.&lt;/p&gt;

&lt;p&gt;This problem was occurring because of how we calculated the angles of rotation. We used the below equation for counting number of seconds.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;secondsDegrees&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;seconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;360&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Here 90 degrees is the initial offset to make clock-hands start at 12&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With this what would happen is as below:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Seconds&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Degrees&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;90&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;15&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;180&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;30&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;270&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;45&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;360&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;60 (or 0)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;90&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;So the main issue is that when reaching the 60 second mark it rotates counter-clockwise because the final value of clock-hand handle (90) is less than its current value (360). So instead of the transition being a smooth forward transition, it jumps counter-clockwise and that‚Äôs where we see that queer problem.&lt;/p&gt;

&lt;p&gt;A very quick way to deal with this is to keep the degrees calculation so that they are always increasing. The result with that would be something like this:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Seconds&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Degrees&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;90&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;15&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;180&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;30&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;270&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;45&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;360&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;60 (or 0)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;450&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;If you want to discuss anything that was unclear in today‚Äôs article then hit me up on twitter &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="programming" /><category term="web" /><category term="javascript-30" /><summary type="html">Today I am continuing my work on JS30 challenge and building a simple analog clock using CSS shapes and then animate it with CSS transforms timed using JS.</summary></entry><entry><title type="html">JavaScript 30 - Building a Drum Kit</title><link href="https://varunbarad.com/blog/javascript-30-building-a-drum-kit" rel="alternate" type="text/html" title="JavaScript 30 - Building a Drum Kit" /><published>2019-09-30T12:00:00+05:30</published><updated>2019-09-30T12:00:00+05:30</updated><id>https://varunbarad.com/blog/javascript-30-building-a-drum-kit</id><content type="html" xml:base="https://varunbarad.com/blog/javascript-30-building-a-drum-kit">&lt;p&gt;&lt;a href=&quot;https://wesbos.com&quot;&gt;Wes Bos&lt;/a&gt; has created a &lt;a href=&quot;https://javascript30.com&quot;&gt;course&lt;/a&gt; to get you confident in your JS skills in 30 days. In it you work on a new project daily for 30 days and in each project you make something using vanilla JS without any frameworks or libraries.&lt;/p&gt;

&lt;p&gt;Today I started the challenge and first project was to make a drum-kit where different sounds are played based on the keyboard button you press. And the corresponding button gets highlighted on screen.&lt;/p&gt;

&lt;p&gt;The key concepts I learned from today‚Äôs challenge were:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Setting event-listeners with JS&lt;/li&gt;
  &lt;li&gt;Working with keyboard events and identifying key-codes&lt;/li&gt;
  &lt;li&gt;Playing audio and restarting the audio when it is already playing&lt;/li&gt;
  &lt;li&gt;How to sync JS code with CSS transitions&lt;/li&gt;
  &lt;li&gt;What value &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt; takes inside the event listener function&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;setting-event-listeners-with-js&quot;&gt;Setting event-listeners with JS&lt;/h2&gt;

&lt;p&gt;The syntax for this is very simple&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;event-name&amp;gt;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fired&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can find a list of supported events &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;here&lt;/a&gt; but beware, the complete list of events is too large and you might never need to use most of them.&lt;/p&gt;

&lt;h2 id=&quot;working-with-keyboard-events-and-identifying-key-codes&quot;&gt;Working with keyboard events and identifying key-codes&lt;/h2&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handleKeyDownEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keyCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;keydown&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handleKeyDownEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here we attach an event-listener for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;keydown&lt;/code&gt; event to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;window&lt;/code&gt; object since we want to capture the events across our whole web-page.
Then we find out which key was pressed based on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;keyCode&lt;/code&gt; value passed via the fired event.&lt;/p&gt;

&lt;p&gt;Wes has created a &lt;a href=&quot;https://keycode.info&quot;&gt;nifty little website (https://keycode.info)&lt;/a&gt; which we can use to find the corresponding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;keyCode&lt;/code&gt; for any key.&lt;/p&gt;

&lt;h2 id=&quot;playing-audio-and-restarting-the-audio-when-it-is-already-playing&quot;&gt;Playing audio and restarting the audio when it is already playing&lt;/h2&gt;

&lt;p&gt;In this project we have a set of buttons on the screen corresponding to different keys on the keyboard. And each button has a corresponding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; element on the page. The goal is to play the corresponding audio when a valid key is pressed on the keyboard.&lt;/p&gt;

&lt;p&gt;So after detecting which key is pressed using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;keyCode&lt;/code&gt; attribute, we select the corresponding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; element using a pre-specified &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data-key&lt;/code&gt; attribute in HTML and call the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;audioElement.play();&lt;/code&gt; method on it.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;audioElement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`audio[data-key=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keyCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;]`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;audioElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;audioElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;play&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the above code-block you might have observed that I set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;current-time&lt;/code&gt; of that element to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt; before calling &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;play&lt;/code&gt; on it. This is done because when an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;audio&lt;/code&gt; is still playing (that is it has not finished) and we call &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.play()&lt;/code&gt; on it, this new call gets ignored. Therefore we reset the play-time for that particular audio element so that it correctly registers and plays 2 consecutive commands of the same key.&lt;/p&gt;

&lt;h2 id=&quot;how-to-sync-js-code-with-css-transitions&quot;&gt;How to sync JS code with CSS transitions&lt;/h2&gt;

&lt;p&gt;When a key is pressed, we highlight the corresponding button for a short duration on the screen while playing sound for it. To highlight the button, we just add a class &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;playing&lt;/code&gt; to it which scales it up and changes the border a bit. The second part of that is to remove the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;playing&lt;/code&gt; class as soon as the transition is finished so as to return the button to normal state.&lt;/p&gt;

&lt;p&gt;For this I initially thought of using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setTimeout&lt;/code&gt; with the same time-out as that mentioned in CSS as transition duration. Wes pointed out the flaw in it is that when we decide to update the transition duration we would need to make sure to update it in both the places (in CSS and in JS).&lt;/p&gt;

&lt;p&gt;So a better way to synchronize CSS transitions with JS is again to use &lt;strong&gt;events&lt;/strong&gt;. Here we specifically use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;transitionend&lt;/code&gt; event on the buttons like below.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;removeButtonHighlight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;propertyName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;playing&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;.keys&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;transitionend&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;removeButtonHighlight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In above code, we select each button and then add the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;transitionend&lt;/code&gt; event-listener for it so now it will call &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;removeButtonHighlight&lt;/code&gt; only and exactly when any transition on any of those buttons ends.&lt;/p&gt;

&lt;p&gt;After that we simply remove the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;playing&lt;/code&gt; class from that button so that it returns back to its original/normal state. You might have noticed that I have put a check of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;event.propertyName === 'transform'&lt;/code&gt;. I would suggest you try and remove that check and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;console.log&lt;/code&gt; the event to find out why I might have put that check in.&lt;/p&gt;

&lt;h2 id=&quot;what-value-this-takes-inside-the-event-listener-function&quot;&gt;What value &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt; takes inside the event-listener function&lt;/h2&gt;

&lt;p&gt;One of the toughest concept to learn and correctly understand in JS is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt; or more specifically, what &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt; means at different points of execution in our code.&lt;/p&gt;

&lt;p&gt;In the last code-block you have noticed that I simply did &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this.classList.remove('playing')&lt;/code&gt; instead of trying to select that particular element using any other method.&lt;/p&gt;

&lt;p&gt;It is so because in that particular case the value of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt; is whatever object the function &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;removeButtonHighlight&lt;/code&gt; has been called.&lt;/p&gt;

&lt;p&gt;So when we attach an event-listener on each of our button and on triggering of those events, they call &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;removeButtonHighlight&lt;/code&gt; with the context of that particular button. So there &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt; is referring directly to the button on which the event listener has been triggered.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Hope I have been able to explain what I learned in today‚Äôs challenge. Hit me up on twitter &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt; in case you haven‚Äôt understood something from this article or you have something new for me to learn.&lt;/p&gt;

&lt;p&gt;In any case, don‚Äôt forget to check out the &lt;a href=&quot;https://javascript30.com&quot;&gt;JavaScript30 challenge&lt;/a&gt; from Wes Bos. It is an awesome way to get some JS confidence.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="programming" /><category term="web" /><category term="javascript-30" /><summary type="html">Wes Bos has created a course to get you confident in your JS skills in 30 days. In it you work on a new project daily for 30 days and in each project you make something using vanilla JS without any frameworks or libraries.</summary></entry><entry><title type="html">Switching RxJava schedulers between app code and corresponding tests</title><link href="https://varunbarad.com/blog/switching-rxjava-schedulers-between-app-code-and-corresponding-tests" rel="alternate" type="text/html" title="Switching RxJava schedulers between app code and corresponding tests" /><published>2019-08-16T12:00:00+05:30</published><updated>2019-08-16T12:00:00+05:30</updated><id>https://varunbarad.com/blog/switching-rxjava-schedulers-between-app-code-and-corresponding-tests</id><content type="html" xml:base="https://varunbarad.com/blog/switching-rxjava-schedulers-between-app-code-and-corresponding-tests">&lt;p&gt;When using RxJava we need to specify the schedulers which we want to use to 1) perform the given task and 2) return result of the operation chain.&lt;/p&gt;

&lt;p&gt;One of the interesting ways I found while working on a take-home challenge for a company was as below:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;VarunSchedulers&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;schedulers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RxSchedulers&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RxSchedulers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Default&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;enableTesting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;schedulers&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RxSchedulers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Test&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;disableTesting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;schedulers&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RxSchedulers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Default&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scheduler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;schedulers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;computation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scheduler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;schedulers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;computation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scheduler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;schedulers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sealed&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RxSchedulers&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scheduler&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;computation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scheduler&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scheduler&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RxSchedulers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scheduler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Schedulers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;trampoline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;computation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scheduler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Schedulers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;trampoline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scheduler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Schedulers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;trampoline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RxSchedulers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scheduler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Schedulers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;computation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scheduler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Schedulers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;computation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scheduler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AndroidSchedulers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mainThread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now let‚Äôs take the example of fetching a network query, we can simply do this&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;pandaService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getCutestPanda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;subscribeOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;VarunSchedulers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;observeOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;VarunSchedulers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And when we write our unit-tests we can easily turn testing-mode on and off using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@Before&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@After&lt;/code&gt; methods.&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SomeTestClass&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Before&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setupTests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;VarunSchedulers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;enableTesting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;nd&quot;&gt;@After&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tearDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;VarunSchedulers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;disableTesting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// Write your tests&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now whenever we are inside tests, then automatically the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;trampoline&lt;/code&gt; schedulers are assigned and respectively appropriate schedulers by default in case we are not in tests.&lt;/p&gt;

&lt;p&gt;If you have more such tricks up your sleeve or something in here isn‚Äôt clear to you or you just want to chat then hit me up on twitter &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="programming" /><category term="rx-java" /><summary type="html">When using RxJava we need to specify the schedulers which we want to use to 1) perform the given task and 2) return result of the operation chain.</summary></entry><entry><title type="html">Make git forget a tracked file</title><link href="https://varunbarad.com/blog/make-git-forget-a-tracked-file" rel="alternate" type="text/html" title="Make git forget a tracked file" /><published>2019-06-06T12:00:00+05:30</published><updated>2019-06-06T12:00:00+05:30</updated><id>https://varunbarad.com/blog/make-git-forget-a-tracked-file</id><content type="html" xml:base="https://varunbarad.com/blog/make-git-forget-a-tracked-file">&lt;p&gt;The default &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt; file generated by Android Studio‚Äôs ‚ÄúNew Project‚Äù wizard keeps some local IDE configuration files in VCS tracking. Nowadays I tweak the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt; file immediately after creating a new project, so as to avoid getting those files tracked.&lt;/p&gt;

&lt;p&gt;But last week I opened one of my old projects and I hadn‚Äôt made those modifications to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt; back then, so it was tracking those files. I wanted git to stop tracking those files but still wanted to keep them in my file-system.&lt;/p&gt;

&lt;p&gt;So I went searching how to do it and found the below method.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Commit/Stash all your other changes&lt;/li&gt;
  &lt;li&gt;Add that file to your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Commit the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt; changes&lt;/li&gt;
  &lt;li&gt;Execute the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git rm --cached &amp;lt;file&amp;gt;&lt;/code&gt; (For each file that you want to remove from tracking)&lt;/li&gt;
  &lt;li&gt;Commit the removal of those files from VCS.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Word of caution:&lt;/strong&gt; This will keep the files in your directory but the next time these changes are pulled on some other machine, the removed files will be deleted from that machine. So it is advised to make a copy of those files first before pulling and then pasting your copied files back.&lt;/p&gt;

&lt;p&gt;Source: &lt;a href=&quot;https://stackoverflow.com/a/1274447&quot;&gt;Stackoverflow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This was just a quick tip that I needed recently and thought of sharing. If you have any more such tips I would love to hear about them at this &lt;a href=&quot;https://twitter.com/varun_barad/status/1136608795973603332&quot;&gt;twitter thread&lt;/a&gt;. Feel free to contact me for anything else that you would like to talk about &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="programming" /><summary type="html">The default .gitignore file generated by Android Studio‚Äôs ‚ÄúNew Project‚Äù wizard keeps some local IDE configuration files in VCS tracking. Nowadays I tweak the .gitignore file immediately after creating a new project, so as to avoid getting those files tracked.</summary></entry><entry><title type="html">Testing Deep-Link URLs using ADB</title><link href="https://varunbarad.com/blog/testing-deep-link-urls-using-adb" rel="alternate" type="text/html" title="Testing Deep-Link URLs using ADB" /><published>2019-05-02T12:00:00+05:30</published><updated>2019-05-02T12:00:00+05:30</updated><id>https://varunbarad.com/blog/testing-deep-link-urls-using-adb</id><content type="html" xml:base="https://varunbarad.com/blog/testing-deep-link-urls-using-adb">&lt;p&gt;ADB is a treasure trove and I regularly keep finding some gem from it. Recently I was working on creating some new deep-link integrations for the company I work at. The below command fires an event similar to one that gets fired when we click on a link in the device itself.&lt;/p&gt;

&lt;p&gt;The pattern for command to trigger the deep-link is as below:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;adb shell am start &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; android.intent.action.VIEW &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;your-link-goes-inside-these-quotes&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Example&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;adb shell am start &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; android.intent.action.VIEW &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://varunbarad.com/blog&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This was just a quick ADB tip that I have learnt and wanted to share with you. If you have any more such tips or tricks, I would love to hear about them on &lt;a href=&quot;https://twitter.com/varun_barad/status/1123999186574303234&quot;&gt;twitter thread for this article&lt;/a&gt;. Feel free to contact me for anything else that you would like to talk about &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="android" /><summary type="html">ADB is a treasure trove and I regularly keep finding some gem from it. Recently I was working on creating some new deep-link integrations for the company I work at. The below command fires an event similar to one that gets fired when we click on a link in the device itself.</summary></entry><entry><title type="html">HTTP Network Requests on Android Pie</title><link href="https://varunbarad.com/blog/http-network-requests-on-android-pie" rel="alternate" type="text/html" title="HTTP Network Requests on Android Pie" /><published>2019-04-07T12:00:00+05:30</published><updated>2019-04-07T12:00:00+05:30</updated><id>https://varunbarad.com/blog/http-network-requests-on-android-pie</id><content type="html" xml:base="https://varunbarad.com/blog/http-network-requests-on-android-pie">&lt;p&gt;Recently when I started work on a new app for my company I noticed that all of my requests were being rejected before even reaching the server. This was a problem I was facing only on the emulator and not on the Nexus 5 I had for physical testing. I searched on the Internet a bit and found out that Android Pie has disabled cleartext network traffic by default.&lt;/p&gt;

&lt;p&gt;I found 2 solutions for this. You can either enable cleartext traffic from your app for specific domains or you can set it for all the domains.&lt;/p&gt;

&lt;h2 id=&quot;enabling-cleartext-traffic-for-all-domains-discouraged-due-to-being-less-secure&quot;&gt;Enabling cleartext traffic for all domains (discouraged due to being less secure)&lt;/h2&gt;

&lt;p&gt;Add this attribute to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;application&amp;gt;&lt;/code&gt; tag in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AndroidManifest.xml&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;android:usesCleartextTraffic=&quot;true&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will enable app-wide cleartext traffic for any and all domains to which your app makes a request.&lt;/p&gt;

&lt;p&gt;This is discouraged as you don‚Äôt specifically allow only the domains that require cleartext.&lt;/p&gt;

&lt;h2 id=&quot;enabling-http-requests-for-specific-domains-go-for-this-one-if-you-can&quot;&gt;Enabling HTTP requests for specific domains (go for this one if you can)&lt;/h2&gt;

&lt;p&gt;You first need to create a file named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;network_security_config.xml&lt;/code&gt; file inside your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;res/xml&lt;/code&gt; directory. The file contents should be as below&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;network-security-config&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;domain-config&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cleartextTrafficPermitted=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;domain&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;includeSubdomains=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;example-domain.com&lt;span class=&quot;nt&quot;&gt;&amp;lt;/domain&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/domain-config&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/network-security-config&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You need to replace &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;example-domain.com&lt;/code&gt; with the domain for which you want to enable http traffic. If you want to enable http for more than one domains then add relevant &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;domain&amp;gt;&lt;/code&gt; tags for each.&lt;/p&gt;

&lt;p&gt;Then you need to specify this file in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AndroidManifest.xml&lt;/code&gt; as below:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;application&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:networkSecurityConfig=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@xml/network_security_config&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;thats-all-folks&quot;&gt;That‚Äôs all folks&lt;/h2&gt;

&lt;p&gt;I faced this issue at work and now I am writing about it so others (and also me) can benefit from it in future. If you have more such ideas/examples or any other suggestions  under the sky, &lt;a href=&quot;https://varunbarad.com/contact&quot;&gt;contact me&lt;/a&gt; or tweet to me &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="android" /><summary type="html">Recently when I started work on a new app for my company I noticed that all of my requests were being rejected before even reaching the server. This was a problem I was facing only on the emulator and not on the Nexus 5 I had for physical testing. I searched on the Internet a bit and found out that Android Pie has disabled cleartext network traffic by default.</summary></entry><entry><title type="html">Don‚Äôt worry about specializing yet!</title><link href="https://varunbarad.com/blog/dont-worry-about-specializing-yet" rel="alternate" type="text/html" title="Don‚Äôt worry about specializing yet!" /><published>2019-03-19T12:00:00+05:30</published><updated>2019-03-19T12:00:00+05:30</updated><id>https://varunbarad.com/blog/dont-worry-about-specializing-yet</id><content type="html" xml:base="https://varunbarad.com/blog/dont-worry-about-specializing-yet">&lt;p&gt;In the past 4 years of my life, many people who are just starting out in programming world have asked me some version of this question:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Which programming language should I focus on learning?&lt;/p&gt;

  &lt;p&gt;What technologies should I be learning, so that they prove helpful in my career?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To many of them I have said:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Don‚Äôt bother to fix yourself into a grove/niche just yet. You are just starting out, try any and everything that catches your attention and feels interesting.‚Äù&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When you are just starting out, it is not very useful to just focus on one language/technology. It might even happen that that one thing which you start focusing on doesn‚Äôt interest you at all and you just get behind it because you think that it has better career-prospects. In that case your life would become terrible and since you are not interested in your learning, you won‚Äôt be producing your best output. Which in turn would cause you to be mediocre at-best.&lt;/p&gt;

&lt;p&gt;Let me give my own example, my first foray into programming was during my 10th grade, it was a 10-day after-school crash-course in C programming. It was an utterly horrible experience for me. After those 10-days I swore to never learn programming. The next year in school it was a choice for me to select either Computer Science or Biology, I chose CS because Bio was worse for me. Near the end of high-school I had decidedly switched my career goal from becoming an aerospace engineer to becoming a programmer.&lt;/p&gt;

&lt;p&gt;Then college came and this was the time that I actually got to know what a vast sea of options stood in front of me. I was also enthusiastic about picking one language and then mastering it to get a good job and build cool things. There was just one hurdle for me (it actually turned out to be a boon), I didn‚Äôt have anyone to ask which language to choose and similarly there wasn‚Äôt anyone advising me to choose one, as I did not have confidence in either my teachers‚Äô or my seniors‚Äô knowledge in those regards. So I started looking at different things.&lt;/p&gt;

&lt;p&gt;I started with learning Java as I wanted to make GUIs. Let‚Äôs just say that it took around a whole semester to be able to get a chat program working on local-network. Then tried learning about Android development, but poor developer experience turned me away. Then after seeing a friend using Visual Studio‚Äôs Layout Editor, I decided to learn C# because it was easier to create GUIs in. For some weird reason, I picked-up Visual Basic. Got bored with it in less than a week. My journey with C# didn‚Äôt last long. as there came Python, with all its conciseness and no explicit data-types. I had no idea what I should build with them, I just wanted to learn ‚Äúcool stuff‚Äù.&lt;/p&gt;

&lt;p&gt;Except these, there were other periods too, like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;2 months of competitive algorithmic problem solving, because I wanted to win Google Code-Jam :sweat_smile:&lt;/li&gt;
  &lt;li&gt;A month of learning SQL as I wanted to become ‚ÄúThe DB Programmer‚Äù&lt;/li&gt;
  &lt;li&gt;Quite a few months of tinkering with Arduino and IOT&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But none of those were able to hold my interest for long. Then I got offered an internship as Android Developer from my neighbor in his new startup. I had nothing to lose and too much to gain so I joined it. That was the turning point of my life that finally fixed my interest in Android Development.&lt;/p&gt;

&lt;p&gt;Today 4 years after the start of that internship, I am near completing my first year as a professional Android dev. If I hadn‚Äôt tried all those many things I never would have known how little do I like them.&lt;/p&gt;

&lt;p&gt;So finally, before parting, this would be my only comment. Don‚Äôt worry too much about which technology or language or new hip-concept to focus on and build a career in. Keep an eye out and make sure to try everything that you find interesting. You pretty sure won‚Äôt be able to so easily try everything after you start working professionally, an you would have to learn to feel okay with that. My friend &lt;a href=&quot;https://goobar.io&quot;&gt;Nate Ebel&lt;/a&gt; has recently written a nice &lt;a href=&quot;https://goobar.io/2019/03/17/you-dont-have-to-know-it-all/&quot;&gt;article&lt;/a&gt; on it.&lt;/p&gt;

&lt;h2 id=&quot;thats-all-folks&quot;&gt;That‚Äôs all folks&lt;/h2&gt;

&lt;p&gt;Those are my thoughts on picking a speciality very early on in your development career. You can contact me via &lt;a href=&quot;https://varunbarad.com/contact&quot;&gt;contact me&lt;/a&gt; or tweet to me &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="programming" /><category term="personal-growth" /><summary type="html">In the past 4 years of my life, many people who are just starting out in programming world have asked me some version of this question:</summary></entry><entry><title type="html">Show/Hide Layout Bounds in Android</title><link href="https://varunbarad.com/blog/show-hide-android-layout-bounds" rel="alternate" type="text/html" title="Show/Hide Layout Bounds in Android" /><published>2019-03-08T12:00:00+05:30</published><updated>2019-03-08T12:00:00+05:30</updated><id>https://varunbarad.com/blog/show-hide-android-layout-bounds</id><content type="html" xml:base="https://varunbarad.com/blog/show-hide-android-layout-bounds">&lt;p&gt;Sometimes while working in Android we need to display the layout-bounds on device. Recent Android versions do provide an action-tile to do so. But on previous versions, we had to go too deep into the Settings application. I wanted to be able to perform the switch from my computer.&lt;/p&gt;

&lt;p&gt;ADB does provide methods to do so, but the commands are not easy to remember and also get tiresome after some time.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# We need to execute both lines to&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# make the layout-bounds show&lt;/span&gt;
adb shell setprop debug.layout &lt;span class=&quot;nb&quot;&gt;true
&lt;/span&gt;adb shell service call activity 1599295570
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So I made 2 files named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;show-lb.sh&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hide-lb.sh&lt;/code&gt;, which respectively show and hide the layout-bounds on our testing device.&lt;/p&gt;

&lt;p&gt;The files are as below:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;show-lb.sh&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;adb shell setprop debug.layout &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /dev/null 2&amp;gt;&amp;amp;1
adb shell service call activity 1599295570 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /dev/null 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hide-lb.sh&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;adb shell setprop debug.layout &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /dev/null 2&amp;gt;&amp;amp;1
adb shell service call activity 1599295570 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /dev/null 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/code&gt; part at the end of each line is just so that the output of that particular command does not get displayed in our terminal as we don‚Äôt need it.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Note for Windows users:&lt;/code&gt; You friends need to omit the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/code&gt; and save these files as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;show-lb.bat&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hide-lb.bat&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can save these files (make sure to give them &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;executable&lt;/code&gt; permission if you are on a unix-based machine) and then add their location to system‚Äôs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PATH&lt;/code&gt; variable. That way you can execute these from anywhere.&lt;/p&gt;

&lt;p&gt;I do think that I would indeed make a version of this in the future where it check the current state and automatically toggle it.&lt;/p&gt;

&lt;h2 id=&quot;thats-all-folks&quot;&gt;That‚Äôs all folks&lt;/h2&gt;

&lt;p&gt;This was my solution to improve my daily work experience by 1%. If you have more such ideas/examples or any other suggestions  under the sky, &lt;a href=&quot;https://varunbarad.com/contact&quot;&gt;contact me&lt;/a&gt; or tweet to me &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="tools" /><category term="android" /><summary type="html">Sometimes while working in Android we need to display the layout-bounds on device. Recent Android versions do provide an action-tile to do so. But on previous versions, we had to go too deep into the Settings application. I wanted to be able to perform the switch from my computer.</summary></entry><entry><title type="html">Creating a single-file backup of your git repository</title><link href="https://varunbarad.com/blog/git-repository-single-file-backup" rel="alternate" type="text/html" title="Creating a single-file backup of your git repository" /><published>2019-03-03T12:00:00+05:30</published><updated>2019-03-03T12:00:00+05:30</updated><id>https://varunbarad.com/blog/git-repository-single-file-backup</id><content type="html" xml:base="https://varunbarad.com/blog/git-repository-single-file-backup">&lt;p&gt;Last week I needed to take a backup of my laptop‚Äôs contents because I needed to give it for repair. When I started just plain copying my files to an external hard-drive I noticed that the git-files (the files used by git to store version-history for project) were taking too much time since they were very small in size but huge in numbers. So I decided to find a way using which I could create a single-file for each git enabled project and then just copy that single file over to the external hard-drive.&lt;/p&gt;

&lt;p&gt;I came across two options provided by git itself:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git archive&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git bundle&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;archive&lt;/code&gt; creates just a snapshot of how the project is at that particular instance and does not contain any of the version-history stuff, so this option went out the window for me.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle&lt;/code&gt; gave me the option to generate a single-file containing all of my version-history across all the branches. This appeared to me to be &lt;strong&gt;the solution&lt;/strong&gt; that I was looking for.&lt;/p&gt;

&lt;p&gt;But alas, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle&lt;/code&gt; doesn‚Äôt store any data of the changes you have stashed in your local-repo.&lt;/p&gt;

&lt;p&gt;After much searching I couldn‚Äôt find anything that gave me both the version-history and all the stashed changes in a single file. So I decided to write my own python script which would create zip file containing the bundle file generated by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git bundle&lt;/code&gt; and patch-files for all the stashed changes in my repo.&lt;/p&gt;

&lt;p&gt;I have described how I made the program in this article, though if you only want the script, I have put a link to the gist at the bottom of this article.&lt;/p&gt;

&lt;h2 id=&quot;project-breakdown&quot;&gt;Project breakdown&lt;/h2&gt;

&lt;p&gt;I decided to break the project down into parts and then conquer them one-by-one.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Getting the directory for which the git-backup needs to be generated&lt;/li&gt;
  &lt;li&gt;Checking if that directory is actually the root directory for a git-enabled project&lt;/li&gt;
  &lt;li&gt;Creating a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git bundle&lt;/code&gt; file from within the python script&lt;/li&gt;
  &lt;li&gt;Check if the project has any changes that haven‚Äôt been committed or stashed yet&lt;/li&gt;
  &lt;li&gt;Stashing any changes that I find in the step above&lt;/li&gt;
  &lt;li&gt;Check if the project has any stashed changes&lt;/li&gt;
  &lt;li&gt;Creating individual patch-files for all the stashed changes found in previous step&lt;/li&gt;
  &lt;li&gt;Creating a zip-file which contains the bundle file from git and all the patch-files that we created in previous step&lt;/li&gt;
  &lt;li&gt;Deleting the bundle and patch-files since we already have them included in the zip-file&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-1-getting-the-directory&quot;&gt;Step 1: Getting the directory&lt;/h2&gt;

&lt;p&gt;I decided to give 2 options to the user. They can either:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go to the directory via terminal and execute my script from there&lt;/li&gt;
  &lt;li&gt;Provide the directory as a command-line argument to my script&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;directory_to_backup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getcwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;directory_to_backup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;directory_to_backup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abspath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory_to_backup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In python &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sys.argv&lt;/code&gt; returns a list of command-line arguments passed to our program.
Since the first item in that list is always the name of our program so we ignore it and take a look at the rest of the list.&lt;/p&gt;

&lt;p&gt;If the rest of the list is empty, we take the first use-case in consideration, ie- the user has launched our program from the directory which they want to backup. Therefore we use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;os.getcwd()&lt;/code&gt; which returns the system‚Äôs current working-directory, which would be the directory from where our script was launched.&lt;/p&gt;

&lt;p&gt;After that we use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;os.path.abspath(directory_to_backup)&lt;/code&gt; to clean the path provided to us and also convert it to absolute path as used by the system.&lt;/p&gt;

&lt;h2 id=&quot;step-2-checking-if-this-is-a-root-directory-for-a-git-project&quot;&gt;Step 2: Checking if this is a root-directory for a git project&lt;/h2&gt;

&lt;p&gt;Next up on the list was to check whether the directory that we are supplied is actually the root-directory for a project which has git initiated in it. This is very important since the rest of the script would just crash if we try to execute it on a folder which isn‚Äôt actually a git project.&lt;/p&gt;

&lt;p&gt;I decided to just check for the presence of a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.git&lt;/code&gt; folder inside the root folder that was supplied to us. Git stores all of its data for that project in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.git&lt;/code&gt; folder inside that project. If you people know of a better way to make this check do let me know.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;git_directory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory_to_backup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.git'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;git_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;git_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;create_backup_zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory_to_backup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory_to_backup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' is not a git repository'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;os.path.exists&lt;/code&gt; checks for the existence of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git_directory&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;os.path.isdir&lt;/code&gt; checks that it is actually a directory and not just a file named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.git&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;step-3-creating-a-git-bundle-from-within-my-script&quot;&gt;Step 3: Creating a git bundle from within my script&lt;/h2&gt;

&lt;p&gt;Before this I had only created the git bundles from the terminal and never from within a python script. I had no idea how to do so.&lt;/p&gt;

&lt;p&gt;First I decided that I would issue terminal commands from my script and capture the output of those commands. But then I thought that it probably might not work well across platforms (I am looking at you Windows).&lt;/p&gt;

&lt;p&gt;I then went looking for a library in python to interact with git repositories. First result that Google came up with was &lt;strong&gt;GitPython&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I started reading the documentation for it and very quickly (like in under 5 minutes) started to get overwhelmed by all the git related concepts that it was throwing at me. But after around 10 minutes of searching, I found something that was helpful. I could get a handle on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Repo&lt;/code&gt; object for that git-project and then execute my git commands using that handle.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;parent_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;directory_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory_to_backup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Repo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory_to_backup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;git_handle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;git_bundle_file_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parent_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.bundle'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;git_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'create'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;git_bundle_file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'--all'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is the equivalent of:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git bundle create &amp;lt;git_bundle_name&amp;gt; &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--all&lt;/code&gt; flag is to include all the branches and not just the current branch.&lt;/p&gt;

&lt;h2 id=&quot;step-4-check-for-any-changes-that-arent-committed-or-stashed&quot;&gt;Step 4: Check for any changes that aren‚Äôt committed or stashed&lt;/h2&gt;

&lt;p&gt;Next I needed to check for any changes that haven‚Äôt been committed and also haven‚Äôt been stashed, so that we can stash them.&lt;/p&gt;

&lt;p&gt;Just running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git status&lt;/code&gt; gives me a list of the changed files, but it also outputs other things to make it human-friendly. There is an option &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--porcelain&lt;/code&gt; which strips all that extra info.&lt;/p&gt;

&lt;p&gt;There are some files which have been left untracked, we don‚Äôt want to create a new stash when all of the uncommitted files are only files that are untracked. So we filter the lines by the value in their first column and remove any lines whose first-column value is made only of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;?&lt;/code&gt;. I don‚Äôt know what the values of first column mean, but I only know that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;?&lt;/code&gt; signifies files that are untracked. If our list of unstaged files is not empty after removing all untracked files, then we perform the next step or else we skip it.&lt;/p&gt;

&lt;h2 id=&quot;step-5-stash-any-changes-from-working-tree-and-staging-area&quot;&gt;Step 5: Stash any changes from working tree and staging area&lt;/h2&gt;

&lt;p&gt;If we find that we have any unstaged but not untracked files then we stash those changes. The command is a simple one.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;git_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'push'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-m'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'git-backup-stash'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-6-now-we-check-if-the-project-has-any-stashed-changes&quot;&gt;Step 6: Now we check if the project has any stashed changes&lt;/h2&gt;

&lt;p&gt;Now we check if the project has any stashed changes. We do this so that we can determine whether or not we need to make any patch files. Git has a simple command to list all the stashes.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;stashes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;git_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'list'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stash_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stashes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linesep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stashes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stash_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Create patch-files here
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-7-create-patch-files-for-any-stashes-we-have&quot;&gt;Step 7: Create patch files for any stashes we have&lt;/h2&gt;

&lt;p&gt;Now we create patch files for any stashes that we have in our local repo. These files can then later be used to restore the changes that were stashed. Each stash entry gets its own patch file.&lt;/p&gt;

&lt;p&gt;Format of the patch-file‚Äôs name is as below:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;stash_name&amp;gt;:&amp;lt;branch_name&amp;gt;:&amp;lt;stash_message&amp;gt;.txt&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stashes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stash_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;patch_files_directory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parent_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'patch-files'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;makedirs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch_files_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exist_ok&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stash&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stash_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stash_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;': '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stash_branch_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;': '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stash_message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;': '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;': '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:])&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;patch_file_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stash_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stash_branch_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stash_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.txt'&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;patch_file_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch_files_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patch_file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;patch_contents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;git_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'show'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-p'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stash_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch_file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'x'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;patch_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch_file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-8-create-a-zip-file-of-the-bundle-and-all-the-patch-files&quot;&gt;Step 8: Create a zip-file of the bundle and all the patch files&lt;/h2&gt;

&lt;p&gt;Now all we need to do is integrate all of those above files into a single zip file. First we write the bundle file created by git into the zip file. Then we include the patch files, if we have any, into a sub-folder called ‚Äúpatch-files‚Äù in the zip file.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;zip_file_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;directory_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.zip'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;zip_file_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parent_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zip_file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZipFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zip_file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'x'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;git_bundle_file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arcname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;git_bundle_file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patch_file&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patch_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arcname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'patch-files'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-9-deleting-the-bundle-file-and-the-patch-files&quot;&gt;Step 9: Deleting the bundle file and the patch files&lt;/h2&gt;

&lt;p&gt;Not so fast buddy, we still need to delete that git-bundle file and those patch-files that we created. Since we already have included them in our zip file, we no longer need them and therefore should clean those.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;git_bundle_file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;shutil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rmtree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch_files_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;full-code&quot;&gt;Full Code&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/python3
&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;shutil&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Repo&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;zipfile&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZipFile&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create_backup_zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory_to_backup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;parent_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;directory_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory_to_backup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Repo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory_to_backup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;git_handle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;git_bundle_file_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parent_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.bundle'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;git_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'create'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;git_bundle_file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'--all'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;pattern_for_untracked_files_flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'^\?+$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;non_staged_files_raw_output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;git_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'--porcelain'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;non_staged_files_raw_output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;non_staged_files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pattern_for_untracked_files_flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;non_staged_files_raw_output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linesep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;non_staged_files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;non_staged_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;git_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'push'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-m'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'git-backup-stash'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;stashes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;git_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'list'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stash_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stashes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linesep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;patch_files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stashes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stash_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;patch_files_directory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parent_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'patch-files'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;makedirs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch_files_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exist_ok&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stash&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stash_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;stash_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;': '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;stash_branch_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;': '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;stash_message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;': '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;': '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:])&lt;/span&gt;
            
            &lt;span class=&quot;n&quot;&gt;patch_file_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stash_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stash_branch_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stash_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.txt'&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;patch_file_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch_files_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patch_file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;patch_contents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;git_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'show'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-p'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stash_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch_file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'x'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;patch_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch_file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;zip_file_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;directory_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.zip'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;zip_file_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parent_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zip_file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZipFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zip_file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'x'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;git_bundle_file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arcname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;git_bundle_file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patch_file&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patch_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arcname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'patch-files'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;git_bundle_file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;shutil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rmtree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch_files_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zip_file_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' created'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;directory_to_backup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getcwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;directory_to_backup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;directory_to_backup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abspath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory_to_backup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;git_directory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory_to_backup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.git'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;git_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;git_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;create_backup_zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory_to_backup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory_to_backup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' is not a git repository'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/VarunBarad/c291e98dd426b0da1322171290d7bbd0&quot;&gt;GitHub gist: https://gist.github.com/VarunBarad/c291e98dd426b0da1322171290d7bbd0&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;thats-all-folks&quot;&gt;That‚Äôs all folks&lt;/h2&gt;

&lt;p&gt;This is my solution to the problem I faced of taking a backup of my projects which also included unfinished work of mine. If you have any other suggestions regarding these or any other topics under the sky, &lt;a href=&quot;https://varunbarad.com/contact&quot;&gt;contact me&lt;/a&gt; or tweet to me &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="tools" /><summary type="html">Last week I needed to take a backup of my laptop‚Äôs contents because I needed to give it for repair. When I started just plain copying my files to an external hard-drive I noticed that the git-files (the files used by git to store version-history for project) were taking too much time since they were very small in size but huge in numbers. So I decided to find a way using which I could create a single-file for each git enabled project and then just copy that single file over to the external hard-drive.</summary></entry><entry><title type="html">How Breathing Works</title><link href="https://varunbarad.com/blog/how-breathing-works" rel="alternate" type="text/html" title="How Breathing Works" /><published>2018-10-27T12:00:00+05:30</published><updated>2018-10-27T12:00:00+05:30</updated><id>https://varunbarad.com/blog/how-breathing-works</id><content type="html" xml:base="https://varunbarad.com/blog/how-breathing-works">&lt;p&gt;A while ago I read a prank online. It was&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Now you are breathing manually.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It got me manually breathing then just as it got you now. This spurred me into thinking about the mechanics of how different parts of our respiratory system operate, how is the air actually inhaled and exhaled and what part/parts of our brain control it. Let me tell you what I learnt.&lt;/p&gt;

&lt;h2 id=&quot;moving-with-the-air&quot;&gt;Moving with the air&lt;/h2&gt;

&lt;p&gt;Let us first take a short trip inside our bodies to understand how the air we breathe travels inside us.&lt;/p&gt;

&lt;h3 id=&quot;1-taking-a-breath&quot;&gt;1. Taking a breath&lt;/h3&gt;

&lt;p&gt;When you take a breath, the air goes through your nose and/or mouth, down your throat and into the trachea (also known as windpipe).&lt;/p&gt;

&lt;h3 id=&quot;2-into-the-lungs&quot;&gt;2. Into the lungs&lt;/h3&gt;

&lt;p&gt;The end of trachea splits into an upside down Y-shape (something like this ‚ÖÑ), thus forming the two bronchi (bronchus for singular). Air passes through left or right bronchus into respective lung.&lt;/p&gt;

&lt;h3 id=&quot;3-climbing-the-branches-of-the-bronchial-tree&quot;&gt;3. Climbing the branches of the bronchial tree&lt;/h3&gt;

&lt;p&gt;Inside the lungs, each bronchus branch off into a tree-like structure of bronchioles. The air flows through bronchioles, which keep getting smaller, until it reaches the end of branches.&lt;/p&gt;

&lt;h3 id=&quot;4-filling-up-countless-tiny-balloons&quot;&gt;4. Filling up countless tiny balloons&lt;/h3&gt;

&lt;p&gt;At the end of each bronchiole, there is a tiny balloon like tissue structure called alveolus (plural alveoli) which forms an air pocket where external air is collected.&lt;/p&gt;

&lt;h3 id=&quot;5-gas-exchange&quot;&gt;5. Gas exchange&lt;/h3&gt;

&lt;p&gt;When the air reaches the alveoli, a process similar to osmosis dissolves the oxygen from the air into capillaries while extracting carbon-dioxide from blood into the air inside alveoli at the same time.&lt;/p&gt;

&lt;h3 id=&quot;6-the-journey-back-to-surface&quot;&gt;6. The journey back to surface&lt;/h3&gt;

&lt;p&gt;The exhale phase starts at this moment and the air in the alveoli travel back to outside world following the same path it came in. That is&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Alveoli&lt;/li&gt;
  &lt;li&gt;Bronchiole&lt;/li&gt;
  &lt;li&gt;Bronchi&lt;/li&gt;
  &lt;li&gt;Trachea&lt;/li&gt;
  &lt;li&gt;Throat&lt;/li&gt;
  &lt;li&gt;Nose/Mouth&lt;/li&gt;
  &lt;li&gt;Sweet freedom of outside world&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;mechanics-of-all-these&quot;&gt;Mechanics of all these&lt;/h2&gt;

&lt;p&gt;There are 2 main mechanical processes:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;How is air inhaled?&lt;/li&gt;
  &lt;li&gt;Consequently, how is it exhaled afterwards?&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;1-inhaling-the-external-air&quot;&gt;1. Inhaling the external air&lt;/h3&gt;

&lt;p&gt;When we want to inhale, the diaphragm (a large dome-shaped muscle located below the lungs) and the muscles between our lungs and rib-cage contract, thus creating a vacuum (more precisely they create a negative air-pressure). This forces the external air to enter our lungs through the path mentioned earlier.&lt;/p&gt;

&lt;h3 id=&quot;2-exhaling-the-inside-air&quot;&gt;2. Exhaling the inside air&lt;/h3&gt;

&lt;p&gt;Subsequently, when we want to exhale the air that we inhaled into the lungs, the same muscles (diaphragm and the muscles between lungs and rib-cage) relax. This creates a positive air-pressure inside lungs which forces the air inside them to go out.&lt;/p&gt;

&lt;h2 id=&quot;controlling-our-breathing&quot;&gt;Controlling our breathing&lt;/h2&gt;

&lt;p&gt;Finally returning to my original question of, ‚ÄúHow is the actual breathing controlled? Who determines whether we breath manually or autonomously?‚Äù&lt;/p&gt;

&lt;p&gt;There is a part of our brain aptly named ‚ÄúRespiratory center‚Äù. Respiratory center (RC) is responsible for generating and maintaining the rhythm of respiration. They receive control/sensor signals of neural, chemical and hormonal nature. After processing these signals, this center sends down the appropriate signal(s) to the muscles involved in breathing. These signals ensure that your breathing muscles contract and relax regularly, thus allowing the breathing to be automatic without us even being aware of it.&lt;/p&gt;

&lt;p&gt;Although to a limited degree we can also affect our breathing rate. The cerebral-cortex sends one of the control signal to RC. This allows us to do things like holding our breath, breathing faster/slower than usual consciously.&lt;/p&gt;

&lt;p&gt;Our emotions can also affect our breathing pattern. Like being scared or angry can increase our respiratory rate. It also depends upon how physically active we are at the moment or what are the conditions of air around us.&lt;/p&gt;

&lt;p&gt;Two of the main sensor systems for respiratory regulations are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Sensors in the brain and the 2 major blood vessels (the carotid artery and the aorta) detect levels of CO&lt;sub&gt;2&lt;/sub&gt; and O&lt;sub&gt;2&lt;/sub&gt; mixed in the blood and change our breathing as needed.&lt;/li&gt;
  &lt;li&gt;Sensors in the airways (mouth, nose, trachea etc.) detect lung irritants. These sensors are generally responsible for triggering sneezes or coughs. After all sneezing and coughing are a form of sharp exhale of air from lungs.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;thats-all-folks&quot;&gt;That‚Äôs all folks&lt;/h2&gt;

&lt;p&gt;These are my finding when I went down the Internet lanes to find the answer of ‚ÄúHow is our breathing rate controlled?‚Äù. If you have any other suggestions regarding these or any other topics under the sky, &lt;a href=&quot;https://varunbarad.com/contact&quot;&gt;contact me&lt;/a&gt; or tweet to me &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h2&gt;

&lt;p&gt;I am not a doctor and I don‚Äôt pose as one on the internet. This post is just a compilation of what I found while learning about this topic.&lt;/p&gt;

&lt;h3 id=&quot;sources&quot;&gt;Sources&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.verywellhealth.com/physiology-of-breathing-998219&quot;&gt;Verywell Health (https://www.verywellhealth.com/physiology-of-breathing-998219)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nhlbi.nih.gov/health-topics/how-lungs-work&quot;&gt;National Heart, Lung and Blood Institute, US (https://www.nhlbi.nih.gov/health-topics/how-lungs-work)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Respiratory_center&quot;&gt;Wikipedia - Respiratory center (https://en.wikipedia.org/wiki/Respiratory_center)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Varun Barad</name></author><category term="medicine" /><summary type="html">A while ago I read a prank online. It was</summary></entry><entry><title type="html">APGAR score</title><link href="https://varunbarad.com/blog/apgar-score" rel="alternate" type="text/html" title="APGAR score" /><published>2018-10-19T12:00:00+05:30</published><updated>2018-10-19T12:00:00+05:30</updated><id>https://varunbarad.com/blog/apgar-score</id><content type="html" xml:base="https://varunbarad.com/blog/apgar-score">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;The Apgar score is a method to quickly summarize the health of newborn children against infant mortality. Virginia Apgar, an anesthesiologist at NewYork‚ÄìPresbyterian Hospital, developed the score in 1952 to quantify the effects of obstetric anesthesia on babies.&lt;/p&gt;

&lt;p&gt;The Apgar score is determined by evaluating the newborn baby on 5 simple criteria, each on a scale of zero to two. Then summing up the five values thus obtained gives a final Apgar score on the scale of zero to ten.&lt;/p&gt;

&lt;p&gt;The five criteria are summarized using words with APGAR as acronym:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Appearance&lt;/li&gt;
  &lt;li&gt;Pulse&lt;/li&gt;
  &lt;li&gt;Grimace&lt;/li&gt;
  &lt;li&gt;Activity&lt;/li&gt;
  &lt;li&gt;Respiratory effort&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;criteria&quot;&gt;Criteria&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;¬†&lt;/th&gt;
      &lt;th&gt;Score of 0&lt;/th&gt;
      &lt;th&gt;Score of 1&lt;/th&gt;
      &lt;th&gt;Score of 2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Appearance (Skin Color)&lt;/td&gt;
      &lt;td&gt;Blue or pale all over&lt;/td&gt;
      &lt;td&gt;Blue at extremities; Body pink&lt;/td&gt;
      &lt;td&gt;Completely pink&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Pulse (Heart-beat)&lt;/td&gt;
      &lt;td&gt;Absent&lt;/td&gt;
      &lt;td&gt;Less than 100 beats per minute&lt;/td&gt;
      &lt;td&gt;More than 100 beats per minute&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Grimace (Reflex irritability)&lt;/td&gt;
      &lt;td&gt;No response to stimulation&lt;/td&gt;
      &lt;td&gt;Grimace on suction or aggressive stimulation&lt;/td&gt;
      &lt;td&gt;Cry on stimulation&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Activity&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;Flexed arms and legs&lt;/td&gt;
      &lt;td&gt;Active movement&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Respiratory effort&lt;/td&gt;
      &lt;td&gt;Absent&lt;/td&gt;
      &lt;td&gt;Weak, irregular gasping&lt;/td&gt;
      &lt;td&gt;Strong robust cry&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;interpretation-of-scores&quot;&gt;Interpretation of scores&lt;/h2&gt;

&lt;p&gt;The test is generally done at 1 and 5 minutes after birth and may be repeated later if the score is and remains low.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;7 and above are generally normal&lt;/li&gt;
  &lt;li&gt;4 to 6 are considered fairly low&lt;/li&gt;
  &lt;li&gt;3 or below are regarded as critically low and imply need of immediate resuscitative efforts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Apgar test‚Äôs purpose is to quickly determine whether or not a newborn needs immediate medical care.&lt;/p&gt;

&lt;h2 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h2&gt;

&lt;p&gt;I am not a doctor and I don‚Äôt pose as one on the internet. This post is just a compilation of what I found while learning about this topic.&lt;/p&gt;

&lt;h3 id=&quot;sources&quot;&gt;Sources&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Apgar_score&quot;&gt;Wikipedia - Apgar score (https://en.wikipedia.org/wiki/Apgar_score)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Varun Barad</name></author><category term="medicine" /><summary type="html">Introduction</summary></entry><entry><title type="html">How anesthetics work</title><link href="https://varunbarad.com/blog/how-anesthetics-work" rel="alternate" type="text/html" title="How anesthetics work" /><published>2018-08-13T12:00:00+05:30</published><updated>2018-08-13T12:00:00+05:30</updated><id>https://varunbarad.com/blog/how-anesthetics-work</id><content type="html" xml:base="https://varunbarad.com/blog/how-anesthetics-work">&lt;p&gt;Anesthetics are used to relieve people of the feeling of pain.&lt;/p&gt;

&lt;p&gt;There are three types of anesthetics based on their site of action:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Local anesthetic&lt;/li&gt;
  &lt;li&gt;Regional anesthetic&lt;/li&gt;
  &lt;li&gt;General anesthetic&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;local-anesthetic&quot;&gt;Local anesthetic&lt;/h2&gt;

&lt;p&gt;Local anesthetics are applied when very specific parts of the patient are to be made numb.&lt;/p&gt;

&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Dentists giving anesthetic injection before performing a root canal operation&lt;/li&gt;
  &lt;li&gt;Numbing out a toe before removing infected nail&lt;/li&gt;
  &lt;li&gt;Applied in low doses around hip during delivery to numb off labor pain (the injections for this are generally given in the spinal discs located between vertebrae)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These can be of 2 kinds:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Topical (applied externally as a cream, gel or spray)&lt;/li&gt;
  &lt;li&gt;Injected (the anesthetic is injected with the use of a syringe for deeper effect)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Sometimes a topical anesthetic is applied before giving the injection (to avoid the pain of injection or of the drug itself) for deeper anesthetic so as to numb out the pain of injection also.&lt;/p&gt;

&lt;p&gt;Local anesthetics bind with the neurotransmitters of that area thus blocking their receptors making them essentially unavailable for transporting pain signals.&lt;/p&gt;

&lt;p&gt;These are very simple with ultra rare cases of any long-lasting effects and can thus be safely administered by a standard medical practitioner.&lt;/p&gt;

&lt;p&gt;Example: Procaine, Lidocaine&lt;/p&gt;

&lt;p&gt;One of the problem with these drugs is that they are vaso-dilators (they expanding blood vessels) and can sometimes cause excessive blood loss. This is easily counter-acted by epinephrine.&lt;/p&gt;

&lt;h2 id=&quot;regional-anesthetic&quot;&gt;Regional anesthetic&lt;/h2&gt;

&lt;p&gt;Regional anesthetics are applied when a larger part of the body is to be numbed out.&lt;/p&gt;

&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Numbing a whole foot (applied at the hip of that particular foot so that the whole set of nerves transporting signals to and from that foot get blocked)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sub-categories:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Peripheral regional anesthesia &lt;br /&gt;
Administered to numb-out usually a limb&lt;/li&gt;
  &lt;li&gt;Central anesthesia (not same as general anesthesia) &lt;br /&gt;
It involves an injection into the cerebro-spinal fluid or the epidural space just outside spinal canal&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Regional anesthetics are generally local anesthetics applied in larger quantity at strategic sites so that the whole bunch of nerves going to the targeted region get blocked.&lt;/p&gt;

&lt;p&gt;These generally need more precautions than local anesthetics since it has higher chance of something going wrong.&lt;/p&gt;

&lt;p&gt;Women who have given birth are probably very familiar with the central anesthetic technique known as an epidural. In this procedure, an anesthesiologist inserts a catheter into the epidural space, typically in the lower back area. This continuously feeds drugs such as lidocaine as well as fentanyl or clonidine to provide pain relief, resulting in a loss of sensation from the waist down.&lt;/p&gt;

&lt;p&gt;Spinal blocks, which are injected into the cerebrospinal fluid, are often used for other procedures below the waist, such as Cesarean sections or hernia surgery. They tend to paralyze further than epidurals.&lt;/p&gt;

&lt;h2 id=&quot;general-anesthetic&quot;&gt;General anesthetic&lt;/h2&gt;

&lt;p&gt;General anesthetics are used when the patient needs to be ‚Äúput under‚Äù or made completely unconscious.&lt;/p&gt;

&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Knee replacement&lt;/li&gt;
  &lt;li&gt;Heart bypass&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Much less is known about the exact functioning of general anesthetics, but so far it has been understood that these function in the fat-based medium of the cells.&lt;/p&gt;

&lt;p&gt;The current accepted theory is that they affect the spinal cord (which is why you end up immobile), the brain stem reticular activating system (which explains the unconsciousness) and the cerebral cortex (which results in changes in electrical activity on an electroencephalogram).&lt;/p&gt;

&lt;p&gt;A whole team of anesthetic specialists is needed when the patient is to be put under general anesthetic so that their condition can be constantly monitored and corrective procedures taken in case the patient‚Äôs condition gets worse.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Nitrous-Oxide is a popular choice for use as general anesthetic, it is administered in the form of inhaled gas.&lt;/li&gt;
  &lt;li&gt;Other types of general anesthetics(like Valium) can also be administered through an IV line.&lt;/li&gt;
  &lt;li&gt;It is quick to start its effects and similarly quick to wear off.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;notes&quot;&gt;Notes:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;You‚Äôll most likely be instructed not to eat for several hours before surgery. It‚Äôs possible for someone under general anesthesia to aspirate, or breathe in, the contents of the stomach.&lt;/li&gt;
  &lt;li&gt;When you‚Äôre under general anesthesia, you‚Äôll be wearing a breathing mask or breathing tube, because the muscles become too relaxed to keep your airways open.&lt;/li&gt;
  &lt;li&gt;Several different things are continuously monitored while you‚Äôre under ‚Äì pulse oximetry (oxygen level in the blood), heart rate, blood pressure, respiratory rate, carbon dioxide exhalation levels, temperature, the concentration of the anesthetic and brain activity. There‚Äôs also an alarm that goes off if your oxygen level drops below a certain point.&lt;/li&gt;
  &lt;li&gt;There are 4 stages of general anesthesia
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Induction:&lt;/strong&gt; The patient is given the medication and may start to feel its effects but hasn‚Äôt yet fallen unconscious.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Excitement:&lt;/strong&gt; Twitching and irregular breathing patterns or heart rates. Patients don‚Äôt remember any of this as they are unconscious. Very short stage which progresses rapidly to next one.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Relaxed/Anesthetized:&lt;/strong&gt; The muscles relax and breathing becomes regular. This is the target stage.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Overdose:&lt;/strong&gt; This isn‚Äôt part of the regular process. This overdose can result in halting heart or breath which may lead to brain damage or death if swift action isn‚Äôt taken.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;procedural-sedation-bonus-category&quot;&gt;Procedural Sedation (Bonus category)&lt;/h2&gt;

&lt;p&gt;Procedural sedation is much like general sedation in terms of its area of effect (it also works on the whole body) but in way milder doses.&lt;/p&gt;

&lt;p&gt;The patient is usually awake and can respond to questions, but is not necessarily aware of what‚Äôs happening to/around him. The patient is usually in a sleepy and relaxed state.&lt;/p&gt;

&lt;p&gt;Due to low dosages, the side-effects observed with general anesthesia are usually not observed in case of procedural sedation.&lt;/p&gt;

&lt;p&gt;Alternate names:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Conscious sedation&lt;/li&gt;
  &lt;li&gt;Twilight anesthesia&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Care needs to be taken that the patient doesn‚Äôt slip into deeper sedation state.&lt;/p&gt;

&lt;h3 id=&quot;notes-1&quot;&gt;Notes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Normally anesthetics are administered with analgesics that also help in dulling-down the pain.&lt;/li&gt;
  &lt;li&gt;While administering anesthetics, many-a-times some kind of vaso-constrictor is used to counter-act the vaso-dilator action of the anesthetic&lt;/li&gt;
  &lt;li&gt;Local anesthetics are usually mixed with different diluents including (but not limited to)
    &lt;ul&gt;
      &lt;li&gt;Sterile saline solution&lt;/li&gt;
      &lt;li&gt;Sterile distilled water&lt;/li&gt;
      &lt;li&gt;Spinal Fluid&lt;/li&gt;
      &lt;li&gt;Sterile dextrose solution (for hyperbaric technique)
        &lt;ul&gt;
          &lt;li&gt;Hyperbaric solutions in spinal anesthesia are solutions that have a density greater than that of spinal fluid.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;After surgery, the patient goes to a PACU (post-anesthesia care unit).
    &lt;ul&gt;
      &lt;li&gt;Often the patient will be given warm IV fluids to counteract both the dehydration resulting from anesthesia as well as shivering from changes in body temperature.&lt;/li&gt;
      &lt;li&gt;As analgesic effect wears off, the patient also receives some sort of pain-relief medication.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;questions&quot;&gt;Questions&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Why do general anesthetic medicines only affect those part of brain related to conscious/non-autonomic functions?&lt;/li&gt;
  &lt;li&gt;Can the patient who is put under general anesthetic still see dreams?&lt;/li&gt;
  &lt;li&gt;Why are heart-beats and breathing not as affected as the sensory receptors?&lt;/li&gt;
  &lt;li&gt;As we move from sea-level air pressure to lower air pressure areas at higher altitude, we adjust our breathing without us giving it even a single conscious thought, if a patient under general anesthetic were to face such change in pressure will their body handle that change itself or will it cause any complication?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h2&gt;

&lt;p&gt;I am not a doctor and I don‚Äôt pose as one on the internet. This post is just a compilation of what I found while learning about this topic.&lt;/p&gt;

&lt;h3 id=&quot;sources&quot;&gt;Sources&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://science.howstuffworks.com/anesthesia.htm&quot;&gt;How Stuff Works - Anesthetics (https://science.howstuffworks.com/anesthesia.htm)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.drugs.com/pro/novocain.html&quot;&gt;Novocaine/Procaine (https://www.drugs.com/pro/novocain.html)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Varun Barad</name></author><category term="medicine" /><summary type="html">Anesthetics are used to relieve people of the feeling of pain.</summary></entry><entry><title type="html">Critical mistakes to avoid in Android development</title><link href="https://varunbarad.com/blog/critical-mistakes-to-avoid-in-android-development" rel="alternate" type="text/html" title="Critical mistakes to avoid in Android development" /><published>2018-03-14T12:00:00+05:30</published><updated>2018-03-14T12:00:00+05:30</updated><id>https://varunbarad.com/blog/critical-mistakes-to-avoid-in-android-development</id><content type="html" xml:base="https://varunbarad.com/blog/critical-mistakes-to-avoid-in-android-development">&lt;p&gt;As many pioneers and leaders in different fields have paraphrased:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In any endeavor, it is important to know what are the top few things that need to be done right. But, it is equally important, if not more, to know the top few things which people should avoid at all costs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My posts up until now have been about how to perform a particular task on Android. Heeding the above saying, today I will be writing about the first five mistakes which I think should be avoided by Android developers.&lt;/p&gt;

&lt;h2 id=&quot;not-putting-all-the-strings-to-be-displayed-in-stringsxml&quot;&gt;Not putting all the strings to be displayed in strings.xml&lt;/h2&gt;

&lt;p&gt;This provides for a poor internationalization experience, as you will have to design your own ways of displaying the correct version of a message based on the user‚Äôs locale.&lt;/p&gt;

&lt;p&gt;If the messages are in strings.xml, then they can easily be translated and integrated into the app. The Android OS then seamlessly handles which string resource to use based on the locale that the user has set on their device.&lt;/p&gt;

&lt;p&gt;Here are a few of the reasons given by users to not use string-resources:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Need context to access:&lt;/strong&gt; If you wish to display that string to UI, you will inevitably need/have some kind of context there too. Just use that same context to fetch the string&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;But I only need it in this one place:&lt;/strong&gt; There is no telling when tomorrow you might need to have that same string in some other file. It is better to invest an extra minute to provide insurance against future problems&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Complex string with run-time data:&lt;/strong&gt; Friends, Android has you covered. There are parameterized strings supported by the platform with a syntax similar to the one used in Java‚Äôs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;String.format()&lt;/code&gt;. More than that, plural-strings (using different strings based on the quantity of something) are also supported. Check out &lt;a href=&quot;https://stackoverflow.com/questions/2397613/are-parameters-in-strings-xml-possible&quot; title=&quot;Parameterized Strings&quot;&gt;this StackOverflow post&lt;/a&gt; for parameterized strings and the &lt;a href=&quot;https://developer.android.com/guide/topics/resources/string-resource.html&quot; title=&quot;Plural Strings&quot;&gt;official documentation&lt;/a&gt; for plural-strings.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;not-using-data-binding&quot;&gt;Not using data-binding&lt;/h2&gt;

&lt;p&gt;Who likes to write cumbersome &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;findViewById&lt;/code&gt; calls and then maintain the reference to those views in their current namespace? Also, in that case we need to keep our view-id‚Äôs so that we are sure of which view-id we are using in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;findViewById&lt;/code&gt; . This is because autocomplete in Android Studio will suggest every id (from all layouts), but only those present in the current layout tree will be available to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;findViewById&lt;/code&gt; . Non-existent ones will return &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;null&lt;/code&gt; (probably causing a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NullPointerException&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Google has made it extremely easy to integrate data-binding into any app (new/existing) and eliminate all those pesky boilerplate view-reference stuff.&lt;/p&gt;

&lt;p&gt;A few of the benefits of using data-binding (over not using it) are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;References to only present views available (trying to refer to an absent component will show an error while editing the file in AS. It will also throw a compile-time error instead of biting you at runtime.).&lt;/li&gt;
  &lt;li&gt;A bit faster due to it needing to traverse the whole layout-tree only once as opposed to every-time when &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;findViewById&lt;/code&gt; is called.&lt;/li&gt;
  &lt;li&gt;Your working namespace (class/function) remains clean, and you don‚Äôt have to keep a reference to all the views.&lt;/li&gt;
  &lt;li&gt;You can use as few of the features in data-binding as just using it to eliminate &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;findViewById&lt;/code&gt; calls to much more advanced features (like in this post, George Mount of Google tries to write a single adapter for all the recycler-views in an app).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;not-hiding-api-keys&quot;&gt;Not hiding API keys&lt;/h2&gt;

&lt;p&gt;This is a common problem which is domain-agnostic and made mostly by junior developers in almost all the areas. Once you commit some piece of code to version control it remains there forever. Even if you remove that API key in future commits, anyone who has access to that repository can view the key from its history and all sorts of problems can follow.&lt;/p&gt;

&lt;p&gt;You can take a look at &lt;a href=&quot;https://varunbarad.com/android/2018/02/01/hiding-api-keys-from-your-android-repository.html&quot;&gt;this post&lt;/a&gt; to figure out how to hide your API keys from your repository while still including them in the build process and making them available in your code.&lt;/p&gt;

&lt;h2 id=&quot;not-taking-activity-life-cycle-into-account&quot;&gt;Not taking activity life-cycle into account&lt;/h2&gt;

&lt;p&gt;Any type of configuration change will cause the current activity to be destroyed and created again. To make sure that the transition is seamless for the user, we need to store the state our app was in just before the configuration change. Then we can recreate it just how the user expects it to be using the state after our activity is created anew following the configuration change.&lt;/p&gt;

&lt;p&gt;While on the subject, we should also store the app‚Äôs state when our current activity moves to stopped state. After that, our app may be killed as per the system‚Äôs need of resources.&lt;/p&gt;

&lt;h2 id=&quot;not-learning-the-keyboard-shortcuts-in-android-studio&quot;&gt;Not learning the keyboard shortcuts in Android Studio&lt;/h2&gt;

&lt;p&gt;This might not be something which reflects in the code you write, but it highly affects your total workflow. Android Studio is built on top of IntelliJ Idea (an IDE famous for its keyboard friendliness). This means that there is a lot to be gained in developer productivity by simply investing a bit of time in learning different keyboard shortcuts. Here are some of my favorite resources to help you with that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;KeyPromoter‚Ää-&lt;/strong&gt; ‚ÄäThis is an IntelliJ plugin (available in AS) which would display a giant ugly dialogue, showing the shortcut command for the action you just performed, whenever you use your mouse to do something. Trust me, this one will annoy the hell out of you and kind of force you to learn those shortcuts. You can find and download it from the plugins section of Android Studio settings.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Cheat-sheet‚Ää-&lt;/strong&gt; &lt;a href=&quot;https://resources.jetbrains.com/storage/products/intellij-idea/docs/IntelliJIDEA_ReferenceCard.pdf&quot;&gt;This is an official printable cheat-sheet&lt;/a&gt; for the keyboard shortcuts by Jetbrains (the company behind IntelliJ). Versions for both Windows and Mac are available.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Official Guide-&lt;/strong&gt; ‚Ää&lt;a href=&quot;https://www.jetbrains.com/help/idea/mastering-intellij-idea-keyboard-shortcuts.html&quot;&gt;This is the official guide&lt;/a&gt; provided by Jetbrains to mastering keyboard shortcuts on IntelliJ platform.&lt;/li&gt;
  &lt;li&gt;Also check out these two videos
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=hdrAlhRI5vM&quot;&gt;Android Studio Shortcuts&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=eOV2owswDkE&quot;&gt;Android Studio: (About) 10 Things You (Probably) Didn‚Äôt Know You Could Do&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;thats-all-folks&quot;&gt;That‚Äôs all folks&lt;/h3&gt;

&lt;p&gt;These are the five things which I think anyone working in Android development should focus on first. If you have any other suggestions regarding these or any other topics under the sky, &lt;a href=&quot;https://varunbarad.com/contact&quot;&gt;contact me&lt;/a&gt; or tweet to me &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="android" /><summary type="html">As many pioneers and leaders in different fields have paraphrased:</summary></entry><entry><title type="html">Simplifying User-Experience for rating your Android app</title><link href="https://varunbarad.com/blog/simplifying-user-experience-for-rating-your-android-app" rel="alternate" type="text/html" title="Simplifying User-Experience for rating your Android app" /><published>2018-02-15T12:00:00+05:30</published><updated>2018-02-15T12:00:00+05:30</updated><id>https://varunbarad.com/blog/simplifying-user-experience-for-rating-your-android-app</id><content type="html" xml:base="https://varunbarad.com/blog/simplifying-user-experience-for-rating-your-android-app">&lt;p&gt;Who doesn‚Äôt want their users to leave ratings for their application on the Play Store? But it is not the top thing on users‚Äô minds (unless they are really annoyed by your app). Even if they want to rate your app, it is a rather cumbersome process for them to:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open the Play Store (temporarily abandoning whatever they are doing)&lt;/li&gt;
  &lt;li&gt;Search for your app&lt;/li&gt;
  &lt;li&gt;Find the one that is actually yours among a buttload (&lt;a href=&quot;https://en.wiktionary.org/wiki/buttload&quot;&gt;it is an actual unit of measurement&lt;/a&gt;) of other clones&lt;/li&gt;
  &lt;li&gt;Rate your app&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;simplifying-the-user-flow&quot;&gt;Simplifying the user flow&lt;/h2&gt;

&lt;p&gt;You might have seen in many apps that they provide a button or something similar which redirects them directly to the Play Store listing of their particular app. This short-circuits the first three steps in the above flow, providing user with a much shorter flow for rating your app.&lt;/p&gt;

&lt;p&gt;Providing such an option requires mainly 2 steps from the developer:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Displaying an option to user to rate the app (showing a button, dialog or something else)&lt;/li&gt;
  &lt;li&gt;Launching the Play Store listing of that app on clicking the above presented option&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;1-displaying-rate-me-option-to-user&quot;&gt;1. Displaying ‚ÄúRate-Me‚Äù option to user&lt;/h2&gt;

&lt;p&gt;There are many options to display an option to user for rating your app. I will be using a simple button for this purpose.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Button&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/button_rateMe&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Rate Me!&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:onClick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;rateApp&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You have many other options like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Dialog&lt;/li&gt;
  &lt;li&gt;Menu item&lt;/li&gt;
  &lt;li&gt;Floating Action Button (FAB) in About screen of app&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-launching-the-play-store-listing&quot;&gt;2. Launching the Play Store listing&lt;/h2&gt;

&lt;p&gt;Now comes the part where we launch the Store listing for our app when user clicks on whatever we displayed above. Continuing the above example, I have the below code in my Activity in which the above button is displayed.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Java&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rateApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rateMeButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;packageName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getPackageName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playStoreAppUri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;market://details?id=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;packageName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playStoreSiteUri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://play.google.com/store/apps/details?id=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;packageName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playStoreAppIntent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ACTION_VIEW&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;playStoreAppUri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;startActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;playStoreAppIntent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ActivityNotFoundException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playStoreBrowserIntent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ACTION_VIEW&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;playStoreSiteUri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;startActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;playStoreBrowserIntent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot; data-lang=&quot;kotlin&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Kotlin&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rateApp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rateMeButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Unit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;packageName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;packageName&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;playStoreAppUri&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;market://details?id=$packageName&quot;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;playStoreSiteUri&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://play.google.com/store/apps/details?id=$packageName&quot;&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;playStoreAppIntent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ACTION_VIEW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;playStoreAppUri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;startActivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;playStoreAppIntent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ActivityNotFoundException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;playStoreBrowserIntent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ACTION_VIEW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;playStoreSiteUri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;startActivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;playStoreBrowserIntent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Let me explain what the above code does.&lt;/p&gt;

&lt;p&gt;If you have ever paid attention to the URL of the store-listing of any app on the Play Store then you would have noticed that the app‚Äôs package name is used as it‚Äôs unique identifier on the store. The structure is like this:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://play.google.com/store/apps/details?id=&amp;lt;package-name-of-your-app&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And a similar structure is followed by the URI for Play Store app:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;market://details?id=&amp;lt;package-name-of-your-app&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So, we first try launching the Play Store app on the device, using the URI for the app (the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;market://...&lt;/code&gt; one). If the Play Store app is present on the device then it is launched and the page containing listing of our app is opened.&lt;/p&gt;

&lt;p&gt;If due to some conditions the Play Store app is not present (this can be the case with some custom ROMs), then &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;startActivity&lt;/code&gt; will throw the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ActivityNotFoundException&lt;/code&gt; exception and we then fall-back to opening our app‚Äôs listing on the web version of the Play Store using the browser.&lt;/p&gt;

&lt;h3 id=&quot;thats-all-folks&quot;&gt;That‚Äôs all folks&lt;/h3&gt;

&lt;p&gt;If you know of a better way for this, &lt;a href=&quot;https://varunbarad.com/contact&quot;&gt;contact me&lt;/a&gt; or tweet to me &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;. You can even send me ideas for any other topics that you would like to know about.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="android" /><summary type="html">Who doesn‚Äôt want their users to leave ratings for their application on the Play Store? But it is not the top thing on users‚Äô minds (unless they are really annoyed by your app). Even if they want to rate your app, it is a rather cumbersome process for them to:</summary></entry><entry><title type="html">Check network connectivity on Android in 10 lines</title><link href="https://varunbarad.com/blog/check-network-connectivity-on-android-in-10-lines" rel="alternate" type="text/html" title="Check network connectivity on Android in 10 lines" /><published>2018-02-08T12:00:00+05:30</published><updated>2018-02-08T12:00:00+05:30</updated><id>https://varunbarad.com/blog/check-network-connectivity-on-android-in-10-lines</id><content type="html" xml:base="https://varunbarad.com/blog/check-network-connectivity-on-android-in-10-lines">&lt;p&gt;Have you ever wanted to show different things to your user based on whether they are connected to the network or not? Well, Android provides a simple way to check for an active network connection.&lt;/p&gt;

&lt;p&gt;Note: This is checking whether or not the device is connected to a network (and not whether it is connected to Internet or not).&lt;/p&gt;

&lt;p&gt;The way Android provides to check for network connectivity is just 10 lines of code. But me being the lazy coder that I am, I just write that code inside a helper method once and then use that one-line method call everywhere that I need to check for connectivity.&lt;/p&gt;

&lt;p&gt;As you can see in the code-block below, it is quite easy to wrap the connectivity check logic in a function.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Java code sample&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ConnectivityHelper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isConnectedToNetwork&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;ConnectivityManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connectivityManager&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ConnectivityManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSystemService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CONNECTIVITY_SERVICE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isConnected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connectivityManager&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;NetworkInfo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activeNetwork&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connectivityManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getActiveNetworkInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;isConnected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activeNetwork&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activeNetwork&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isConnectedOrConnecting&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isConnected&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot; data-lang=&quot;kotlin&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Kotlin code sample&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// The next line should be the first statement in the file&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;JvmName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ConnectivityHelper&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// This line is only needed if you don't want caller statement in Java to change&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;isConnectedToNetwork&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Boolean&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;connectivityManager&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getSystemService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;CONNECTIVITY_SERVICE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ConnectivityManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connectivityManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activeNetworkInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;isConnectedOrConnecting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You also need to have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ACCESS_NETWORK_STATE&lt;/code&gt; permission added in your manifest like below.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;manifest&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;uses-permission&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.permission.ACCESS_NETWORK_STATE&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;application&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    ...
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/application&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/manifest&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;done&quot;&gt;Done&lt;/h3&gt;

&lt;p&gt;Now anywhere that you need to check the connection, you only need to&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Java code sample&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ConnectivityHelper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isConnectedToNetwork&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Show the connected screen&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Show disconnected screen&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot; data-lang=&quot;kotlin&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Kotlin code sample&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;isConnectedToInternet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Show the connected screen&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Show disconnected screen&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;further-reading&quot;&gt;Further reading&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;https://developer.android.com/training/monitoring-device-state/connectivity-monitoring.html&quot;&gt;Official Documentations&lt;/a&gt; are a good place to find more about this.&lt;/p&gt;

&lt;p&gt;If you know of a better way for this, &lt;a href=&quot;https://varunbarad.com/contact&quot;&gt;contact me&lt;/a&gt; or tweet to me &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;. You can even send me ideas for any other topics that you would like to know about.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="android" /><summary type="html">Have you ever wanted to show different things to your user based on whether they are connected to the network or not? Well, Android provides a simple way to check for an active network connection.</summary></entry><entry><title type="html">Hiding API keys from your Android repository</title><link href="https://varunbarad.com/blog/hiding-api-keys-from-your-android-repository" rel="alternate" type="text/html" title="Hiding API keys from your Android repository" /><published>2018-02-01T12:00:00+05:30</published><updated>2018-02-01T12:00:00+05:30</updated><id>https://varunbarad.com/blog/hiding-api-keys-from-your-android-repository</id><content type="html" xml:base="https://varunbarad.com/blog/hiding-api-keys-from-your-android-repository">&lt;p&gt;Let‚Äôs say that you are building a nice app, one that connects to a third-party service. Almost any API worth implementing uses an API key as part of basic authentication and security. Checking this into source control can expose your key to the public if you ever open-source your project (or parts of it).&lt;/p&gt;

&lt;p&gt;The Gradle build system allows us a clean way to avoid this.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add the key to your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gradle.properties&lt;/code&gt; file in your home directory under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gradle&lt;/code&gt; directory.&lt;/li&gt;
  &lt;li&gt;Import the key as a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;buildConfigField&lt;/code&gt; / &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resValue&lt;/code&gt; in your module-level &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; file.&lt;/li&gt;
  &lt;li&gt;Use the key in your Java or XML files as needed.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;1-defining-key-in-buildgradle&quot;&gt;1. Defining key in build.gradle&lt;/h2&gt;

&lt;p&gt;Find the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gradle&lt;/code&gt; folder in your home directory. Usually it can be found at:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Windows:&lt;/strong&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\Users\&amp;lt;Your Username&amp;gt;\.gradle&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Mac:&lt;/strong&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Users/&amp;lt;Your Username&amp;gt;/.gradle&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Linux:&lt;/strong&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home/&amp;lt;Your Username&amp;gt;/.gradle&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Inside it there would be a file named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gradle.properties&lt;/code&gt; (just create it if there isn‚Äôt any).&lt;/p&gt;

&lt;p&gt;After that, add your key to the file as a property. If your key was &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;my-awesome-api-key&lt;/code&gt;, the file after adding the key might look something like:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;MyAwesomeApp_ApiKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;my-awesome-api-key&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I prefer to use this format &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;Project Name&amp;gt;_&amp;lt;Key Property Name&amp;gt;&lt;/code&gt; so that I don‚Äôt mix up keys for different projects by mistake.&lt;/p&gt;

&lt;h2 id=&quot;2-importing-the-key-in-your-project&quot;&gt;2. Importing the key in your project&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Open your module-level &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; file (usually the one where you define dependencies for your app).&lt;/li&gt;
  &lt;li&gt;Add your property in each of your build types.&lt;/li&gt;
  &lt;li&gt;If you want to access the key from Java, then add it as a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;buildConfigField&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;If you want to access the key in your XML files (layouts and other resources), then add it as a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resValue&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After doing so, your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; might look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-gradle&quot; data-lang=&quot;gradle&quot;&gt;&lt;span class=&quot;n&quot;&gt;buildTypes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;buildConfigField&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'String'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ApiKey&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyAwesomeApp_ApiKey&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;resValue&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'string'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;api_key&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyAwesomeApp_ApiKey&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;release&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;minifyEnabled&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;proguardFiles&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getDefaultProguardFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'proguard-android.txt'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'proguard-rules.pro'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;buildConfigField&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'String'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ApiKey&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyAwesomeApp_ApiKey&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;resValue&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'string'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;api_key&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyAwesomeApp_ApiKey&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;3-using-the-key-in-your-apps-code&quot;&gt;3. Using the key in your app‚Äôs code&lt;/h2&gt;

&lt;p&gt;Now you can access the key from your code as described below.&lt;/p&gt;

&lt;h3 id=&quot;accessing-in-java&quot;&gt;Accessing in Java&lt;/h3&gt;

&lt;p&gt;It is available as a standard String in your Java/Kotlin (if you use Kotlin, you good sir just became a friend of mine) code. To access it:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Java&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apiKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BuildConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ApiKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot; data-lang=&quot;kotlin&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Kotlin&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;apiKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BuildConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ApiKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;accessing-in-xml&quot;&gt;Accessing in XML&lt;/h3&gt;

&lt;p&gt;If you want to use it in XML files (like AdMob keys are needed sometimes in XML), you can access them just like any other string resource (used in the last line):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;com.google.android.gms.ads.AdView&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;xmlns:ads=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res-auto&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/adView_banner&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;ads:adSize=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;BANNER&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;ads:adUnitId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@string/api_key&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;done&quot;&gt;Done&lt;/h2&gt;

&lt;p&gt;Now you can safely have a public repository that can reference API keys. You can also have different keys for debug and release (just specify different property names in respective build-types).&lt;/p&gt;

&lt;h3 id=&quot;being-a-good-samaritan&quot;&gt;Being a good samaritan&lt;/h3&gt;

&lt;p&gt;Securing your API keys is an essential step and you should always do it, but you also should document how someone is supposed to provide those keys to build the project from a clean checkout from your repository.&lt;/p&gt;

&lt;p&gt;If you know of a better way for this &lt;a href=&quot;https://varunbarad.com/contact&quot;&gt;contact me&lt;/a&gt; or tweet to me &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;. You can even send me ideas for any other topics that you would like to know about.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="android" /><summary type="html">Let‚Äôs say that you are building a nice app, one that connects to a third-party service. Almost any API worth implementing uses an API key as part of basic authentication and security. Checking this into source control can expose your key to the public if you ever open-source your project (or parts of it).</summary></entry><entry><title type="html">How to Stop Worrying and Start Living</title><link href="https://varunbarad.com/blog/how-to-stop-worrying-and-start-living" rel="alternate" type="text/html" title="How to Stop Worrying and Start Living" /><published>2017-01-01T12:00:00+05:30</published><updated>2017-01-01T12:00:00+05:30</updated><id>https://varunbarad.com/blog/how-to-stop-worrying-and-start-living</id><content type="html" xml:base="https://varunbarad.com/blog/how-to-stop-worrying-and-start-living">&lt;ul&gt;
  &lt;li&gt;Live in day tight compartments.
    &lt;ul&gt;
      &lt;li&gt;Shut off the future as tightly as the past.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;One grain of sand at a time, one task at a time.&lt;/li&gt;
  &lt;li&gt;Three steps to face a grave situation
    &lt;ul&gt;
      &lt;li&gt;Think, ‚ÄúWhat‚Äôs the worst that can happen?‚Äù&lt;/li&gt;
      &lt;li&gt;Prepare to accept it if it comes to that.&lt;/li&gt;
      &lt;li&gt;Calmly proceed to improve on the worst.
        &lt;ul&gt;
          &lt;li&gt;Gather all the facts.
            &lt;ul&gt;
              &lt;li&gt;Try to reason against your preferred side.&lt;/li&gt;
              &lt;li&gt;List all the facts (both sides of the argument).&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Analyze the facts.&lt;/li&gt;
          &lt;li&gt;Reach a decision and &lt;strong&gt;ACT&lt;/strong&gt; on it.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;4 Questions to &lt;strong&gt;write&lt;/strong&gt;(not just think) answers of when something is worrying you.
    &lt;ul&gt;
      &lt;li&gt;What am I worrying about?&lt;/li&gt;
      &lt;li&gt;What can I do about it?&lt;/li&gt;
      &lt;li&gt;Here‚Äôs what I will do.&lt;/li&gt;
      &lt;li&gt;When will I start working on this? (preferably immediately)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;When once a decision is reached &amp;amp; execution started, dismiss the care for outcome.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;For every ailment under the sun,
 There is a remedy or there is none.
 If there be one, try to find it.
 If there be none, never mind it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;When we stop fighting the inevitable, we release energy which enables us to create a richer life.&lt;/li&gt;
  &lt;li&gt;The cost of a thing is the amount of life which is required to be exchanged for it, immediately or in the long run.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you know of any other books that I should read then contact me &lt;a href=&quot;https://varunbarad.com/contact&quot;&gt;here&lt;/a&gt; or tweet to me &lt;a href=&quot;https://twitter.com/varun_barad&quot;&gt;@varun_barad&lt;/a&gt;. You can even send me ideas for any other topics that you would like to know about.&lt;/p&gt;</content><author><name>Varun Barad</name></author><category term="book-highlights" /><summary type="html">Live in day tight compartments. Shut off the future as tightly as the past. One grain of sand at a time, one task at a time. Three steps to face a grave situation Think, ‚ÄúWhat‚Äôs the worst that can happen?‚Äù Prepare to accept it if it comes to that. Calmly proceed to improve on the worst. Gather all the facts. Try to reason against your preferred side. List all the facts (both sides of the argument). Analyze the facts. Reach a decision and ACT on it. 4 Questions to write(not just think) answers of when something is worrying you. What am I worrying about? What can I do about it? Here‚Äôs what I will do. When will I start working on this? (preferably immediately) When once a decision is reached &amp;amp; execution started, dismiss the care for outcome.</summary></entry></feed>